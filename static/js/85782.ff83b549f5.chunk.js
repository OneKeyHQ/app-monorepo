/*! For license information please see 85782.ff83b549f5.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[85782],{692363:(e,t,r)=>{r.d(t,{lc:()=>bool,jE:()=>publicKey,_l:()=>s});var n=r(878918),o=r(856115);const base_encodeDecode=e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)});var i=r(901048).Buffer;const bigInt=e=>t=>{const r=(0,n.blob)(e,t),{encode:s,decode:a}=base_encodeDecode(r),c=r;return c.decode=(e,t)=>{const r=a(e,t);return(0,o.toBigIntLE)(i.from(r))},c.encode=(t,r,n)=>{const i=(0,o.toBufferLE)(t,e);return s(i,r,n)},c},bigIntBE=e=>t=>{const r=(0,n.blob)(e,t),{encode:s,decode:a}=base_encodeDecode(r),c=r;return c.decode=(e,t)=>{const r=a(e,t);return(0,o.toBigIntBE)(i.from(r))},c.encode=(t,r,n)=>{const i=(0,o.toBufferBE)(t,e);return s(i,r,n)},c},s=bigInt(8);bigIntBE(8),bigInt(16),bigIntBE(16),bigInt(24),bigIntBE(24),bigInt(32),bigIntBE(32);new(r(241440).A)("1e+18");const bool=e=>{const t=(0,n.u8)(e),{encode:r,decode:o}=base_encodeDecode(t),i=t;return i.decode=(e,t)=>!!o(e,t),i.encode=(e,t,n)=>{const o=Number(e);return r(o,t,n)},i};var a=r(629862);const publicKey=e=>{const t=(0,n.blob)(32,e),{encode:r,decode:o}=base_encodeDecode(t),i=t;return i.decode=(e,t)=>{const r=o(e,t);return new a.PublicKey(r)},i.encode=(e,t,n)=>{const o=e.toBuffer();return r(o,t,n)},i}},629862:(e,t,r)=>{r.r(t),r.d(t,{Account:()=>Account,AddressLookupTableAccount:()=>AddressLookupTableAccount,AddressLookupTableInstruction:()=>AddressLookupTableInstruction,AddressLookupTableProgram:()=>AddressLookupTableProgram,Authorized:()=>Authorized,BLOCKHASH_CACHE_TIMEOUT_MS:()=>It,BPF_LOADER_DEPRECATED_PROGRAM_ID:()=>We,BPF_LOADER_PROGRAM_ID:()=>Rt,BpfLoader:()=>BpfLoader,COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:()=>cn,ComputeBudgetInstruction:()=>ComputeBudgetInstruction,ComputeBudgetProgram:()=>ComputeBudgetProgram,Connection:()=>Connection,Ed25519Program:()=>Ed25519Program,Enum:()=>Enum,EpochSchedule:()=>EpochSchedule,FeeCalculatorLayout:()=>st,Keypair:()=>Keypair,LAMPORTS_PER_SOL:()=>Nn,LOOKUP_TABLE_INSTRUCTION_LAYOUTS:()=>an,Loader:()=>Loader,Lockup:()=>Lockup,MAX_SEED_LENGTH:()=>ze,Message:()=>Message,MessageAccountKeys:()=>MessageAccountKeys,MessageV0:()=>MessageV0,NONCE_ACCOUNT_LENGTH:()=>ct,NonceAccount:()=>NonceAccount,PACKET_DATA_SIZE:()=>$e,PUBLIC_KEY_LENGTH:()=>Ke,PublicKey:()=>PublicKey,SIGNATURE_LENGTH_IN_BYTES:()=>He,SOLANA_SCHEMA:()=>Me,STAKE_CONFIG_ID:()=>Rn,STAKE_INSTRUCTION_LAYOUTS:()=>En,SYSTEM_INSTRUCTION_LAYOUTS:()=>_t,SYSVAR_CLOCK_PUBKEY:()=>Xe,SYSVAR_EPOCH_SCHEDULE_PUBKEY:()=>Ze,SYSVAR_INSTRUCTIONS_PUBKEY:()=>Qe,SYSVAR_RECENT_BLOCKHASHES_PUBKEY:()=>et,SYSVAR_RENT_PUBKEY:()=>tt,SYSVAR_REWARDS_PUBKEY:()=>rt,SYSVAR_SLOT_HASHES_PUBKEY:()=>nt,SYSVAR_SLOT_HISTORY_PUBKEY:()=>ot,SYSVAR_STAKE_HISTORY_PUBKEY:()=>it,Secp256k1Program:()=>Secp256k1Program,SendTransactionError:()=>SendTransactionError,SolanaJSONRPCError:()=>SolanaJSONRPCError,SolanaJSONRPCErrorCode:()=>St,StakeAuthorizationLayout:()=>hn,StakeInstruction:()=>StakeInstruction,StakeProgram:()=>StakeProgram,Struct:()=>Struct,SystemInstruction:()=>SystemInstruction,SystemProgram:()=>SystemProgram,Transaction:()=>Transaction,TransactionExpiredBlockheightExceededError:()=>TransactionExpiredBlockheightExceededError,TransactionExpiredNonceInvalidError:()=>TransactionExpiredNonceInvalidError,TransactionExpiredTimeoutError:()=>TransactionExpiredTimeoutError,TransactionInstruction:()=>TransactionInstruction,TransactionMessage:()=>TransactionMessage,TransactionStatus:()=>qe,VALIDATOR_INFO_KEY:()=>gn,VERSION_PREFIX_MASK:()=>Ge,VOTE_PROGRAM_ID:()=>fn,ValidatorInfo:()=>ValidatorInfo,VersionedMessage:()=>je,VersionedTransaction:()=>VersionedTransaction,VoteAccount:()=>VoteAccount,VoteAuthorizationLayout:()=>Sn,VoteInit:()=>VoteInit,VoteInstruction:()=>VoteInstruction,VoteProgram:()=>VoteProgram,clusterApiUrl:()=>clusterApiUrl,sendAndConfirmRawTransaction:()=>sendAndConfirmRawTransaction,sendAndConfirmTransaction:()=>sendAndConfirmTransaction});var n={};r.r(n),r.d(n,{DO:()=>utils_abytes,OG:()=>bitMask,My:()=>abstract_utils_bytesToHex,bytesToNumberBE:()=>utils_bytesToNumberBE,lX:()=>utils_bytesToNumberLE,Id:()=>abstract_utils_concatBytes,fg:()=>createHmacDrbg,qj:()=>utils_ensureBytes,hexToBytes:()=>utils_hexToBytes,aY:()=>abstract_utils_isBytes,lq:()=>utils_numberToBytesBE,z:()=>utils_numberToBytesLE,Q5:()=>validateObject});var o=r(901048);function number(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`positive integer expected, not ${e}`)}function bytes(e,...t){if(!function isBytes(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}(e))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(e.length))throw new Error(`Uint8Array expected of length ${t}, not of length=${e.length}`)}function _assert_hash(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");number(e.outputLen),number(e.blockLen)}function exists(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function output(e,t){bytes(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}const i="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0;const createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),rotr=(e,t)=>e<<32-t|e>>>t,s=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],byteSwap=e=>e<<24&4278190080|e<<8&16711680|e>>>8&65280|e>>>24&255;function byteSwap32(e){for(let t=0;t<e.length;t++)e[t]=byteSwap(e[t])}function utils_utf8ToBytes(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))}function toBytes(e){return"string"==typeof e&&(e=utils_utf8ToBytes(e)),bytes(e),e}function utils_concatBytes(...e){let t=0;for(let r=0;r<e.length;r++){const n=e[r];bytes(n),t+=n.length}const r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const o=e[t];r.set(o,n),n+=o.length}return r}class Hash{clone(){return this._cloneInto()}}function utils_wrapConstructor(e){const hashC=t=>e().update(toBytes(t)).digest(),t=e();return hashC.outputLen=t.outputLen,hashC.blockLen=t.blockLen,hashC.create=()=>e(),hashC}function utils_randomBytes(e=32){if(i&&"function"==typeof i.getRandomValues)return i.getRandomValues(new Uint8Array(e));throw new Error("crypto.getRandomValues must be defined")}const Maj=(e,t,r)=>e&t^e&r^t&r;class HashMD extends Hash{constructor(e,t,r,n){super(),this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=createView(this.buffer)}update(e){exists(this);const{view:t,buffer:r,blockLen:n}=this,o=(e=toBytes(e)).length;for(let i=0;i<o;){const s=Math.min(n-this.pos,o-i);if(s!==n)r.set(e.subarray(i,i+s),this.pos),this.pos+=s,i+=s,this.pos===n&&(this.process(t,0),this.pos=0);else{const t=createView(e);for(;n<=o-i;i+=n)this.process(t,i)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){exists(this),output(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:n,isLE:o}=this;let{pos:i}=this;t[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>n-i&&(this.process(r,0),i=0);for(let e=i;e<n;e++)t[e]=0;!function setBigUint64(e,t,r,n){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,r,n);const o=BigInt(32),i=BigInt(4294967295),s=Number(r>>o&i),a=Number(r&i),c=n?4:0,u=n?0:4;e.setUint32(t+c,s,n),e.setUint32(t+u,a,n)}(r,n-8,BigInt(8*this.length),o),this.process(r,0);const s=createView(e),a=this.outputLen;if(a%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const c=a/4,u=this.get();if(c>u.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<c;e++)s.setUint32(4*e,u[e],o)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:n,finished:o,destroyed:i,pos:s}=this;return e.length=n,e.pos=s,e.finished=o,e.destroyed=i,n%t&&e.buffer.set(r),e}}const a=BigInt(2**32-1),c=BigInt(32);function fromBig(e,t=!1){return t?{h:Number(e&a),l:Number(e>>c&a)}:{h:0|Number(e>>c&a),l:0|Number(e&a)}}function split(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let o=0;o<e.length;o++){const{h:i,l:s}=fromBig(e[o],t);[r[o],n[o]]=[i,s]}return[r,n]}const rotlSH=(e,t,r)=>e<<r|t>>>32-r,rotlSL=(e,t,r)=>t<<r|e>>>32-r,rotlBH=(e,t,r)=>t<<r-32|e>>>64-r,rotlBL=(e,t,r)=>e<<r-32|t>>>64-r;const u={fromBig,split,toBig:(e,t)=>BigInt(e>>>0)<<c|BigInt(t>>>0),shrSH:(e,t,r)=>e>>>r,shrSL:(e,t,r)=>e<<32-r|t>>>r,rotrSH:(e,t,r)=>e>>>r|t<<32-r,rotrSL:(e,t,r)=>e<<32-r|t>>>r,rotrBH:(e,t,r)=>e<<64-r|t>>>r-32,rotrBL:(e,t,r)=>e>>>r-32|t<<64-r,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH,rotlSL,rotlBH,rotlBL,add:function add(e,t,r,n){const o=(t>>>0)+(n>>>0);return{h:e+r+(o/2**32|0)|0,l:0|o}},add3L:(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),add3H:(e,t,r,n)=>t+r+n+(e/2**32|0)|0,add4L:(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),add4H:(e,t,r,n,o)=>t+r+n+o+(e/2**32|0)|0,add5H:(e,t,r,n,o,i)=>t+r+n+o+i+(e/2**32|0)|0,add5L:(e,t,r,n,o)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(o>>>0)},[d,_]=(()=>u.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))))(),l=new Uint32Array(80),R=new Uint32Array(80);class SHA512 extends HashMD{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:r,Bl:n,Ch:o,Cl:i,Dh:s,Dl:a,Eh:c,El:u,Fh:d,Fl:_,Gh:l,Gl:R,Hh:E,Hl:A}=this;return[e,t,r,n,o,i,s,a,c,u,d,_,l,R,E,A]}set(e,t,r,n,o,i,s,a,c,u,d,_,l,R,E,A){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|n,this.Ch=0|o,this.Cl=0|i,this.Dh=0|s,this.Dl=0|a,this.Eh=0|c,this.El=0|u,this.Fh=0|d,this.Fl=0|_,this.Gh=0|l,this.Gl=0|R,this.Hh=0|E,this.Hl=0|A}process(e,t){for(let r=0;r<16;r++,t+=4)l[r]=e.getUint32(t),R[r]=e.getUint32(t+=4);for(let e=16;e<80;e++){const t=0|l[e-15],r=0|R[e-15],n=u.rotrSH(t,r,1)^u.rotrSH(t,r,8)^u.shrSH(t,r,7),o=u.rotrSL(t,r,1)^u.rotrSL(t,r,8)^u.shrSL(t,r,7),i=0|l[e-2],s=0|R[e-2],a=u.rotrSH(i,s,19)^u.rotrBH(i,s,61)^u.shrSH(i,s,6),c=u.rotrSL(i,s,19)^u.rotrBL(i,s,61)^u.shrSL(i,s,6),d=u.add4L(o,c,R[e-7],R[e-16]),_=u.add4H(d,n,a,l[e-7],l[e-16]);l[e]=0|_,R[e]=0|d}let{Ah:r,Al:n,Bh:o,Bl:i,Ch:s,Cl:a,Dh:c,Dl:E,Eh:A,El:S,Fh:g,Fl:O,Gh:f,Gl:m,Hh:p,Hl:N}=this;for(let e=0;e<80;e++){const t=u.rotrSH(A,S,14)^u.rotrSH(A,S,18)^u.rotrBH(A,S,41),I=u.rotrSL(A,S,14)^u.rotrSL(A,S,18)^u.rotrBL(A,S,41),T=A&g^~A&f,b=S&O^~S&m,y=u.add5L(N,I,b,_[e],R[e]),C=u.add5H(y,p,t,T,d[e],l[e]),w=0|y,L=u.rotrSH(r,n,28)^u.rotrBH(r,n,34)^u.rotrBH(r,n,39),k=u.rotrSL(r,n,28)^u.rotrBL(r,n,34)^u.rotrBL(r,n,39),D=r&o^r&s^o&s,P=n&i^n&a^i&a;p=0|f,N=0|m,f=0|g,m=0|O,g=0|A,O=0|S,({h:A,l:S}=u.add(0|c,0|E,0|C,0|w)),c=0|s,E=0|a,s=0|o,a=0|i,o=0|r,i=0|n;const x=u.add3L(w,k,P);r=u.add3H(x,C,L,D),n=0|x}({h:r,l:n}=u.add(0|this.Ah,0|this.Al,0|r,0|n)),({h:o,l:i}=u.add(0|this.Bh,0|this.Bl,0|o,0|i)),({h:s,l:a}=u.add(0|this.Ch,0|this.Cl,0|s,0|a)),({h:c,l:E}=u.add(0|this.Dh,0|this.Dl,0|c,0|E)),({h:A,l:S}=u.add(0|this.Eh,0|this.El,0|A,0|S)),({h:g,l:O}=u.add(0|this.Fh,0|this.Fl,0|g,0|O)),({h:f,l:m}=u.add(0|this.Gh,0|this.Gl,0|f,0|m)),({h:p,l:N}=u.add(0|this.Hh,0|this.Hl,0|p,0|N)),this.set(r,n,o,i,s,a,c,E,A,S,g,O,f,m,p,N)}roundClean(){l.fill(0),R.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const E=utils_wrapConstructor((()=>new SHA512)),A=(BigInt(0),BigInt(1)),S=BigInt(2);function abstract_utils_isBytes(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}function utils_abytes(e){if(!abstract_utils_isBytes(e))throw new Error("Uint8Array expected")}const g=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function abstract_utils_bytesToHex(e){utils_abytes(e);let t="";for(let r=0;r<e.length;r++)t+=g[e[r]];return t}function hexToNumber(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}const O={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function utils_asciiToBase16(e){return e>=O._0&&e<=O._9?e-O._0:e>=O._A&&e<=O._F?e-(O._A-10):e>=O._a&&e<=O._f?e-(O._a-10):void 0}function utils_hexToBytes(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);const t=e.length,r=t/2;if(t%2)throw new Error("padded hex string expected, got unpadded hex of length "+t);const n=new Uint8Array(r);for(let t=0,o=0;t<r;t++,o+=2){const r=utils_asciiToBase16(e.charCodeAt(o)),i=utils_asciiToBase16(e.charCodeAt(o+1));if(void 0===r||void 0===i){const t=e[o]+e[o+1];throw new Error('hex string expected, got non-hex character "'+t+'" at index '+o)}n[t]=16*r+i}return n}function utils_bytesToNumberBE(e){return hexToNumber(abstract_utils_bytesToHex(e))}function utils_bytesToNumberLE(e){return utils_abytes(e),hexToNumber(abstract_utils_bytesToHex(Uint8Array.from(e).reverse()))}function utils_numberToBytesBE(e,t){return utils_hexToBytes(e.toString(16).padStart(2*t,"0"))}function utils_numberToBytesLE(e,t){return utils_numberToBytesBE(e,t).reverse()}function utils_ensureBytes(e,t,r){let n;if("string"==typeof t)try{n=utils_hexToBytes(t)}catch(r){throw new Error(`${e} must be valid hex string, got "${t}". Cause: ${r}`)}else{if(!abstract_utils_isBytes(t))throw new Error(`${e} must be hex string or Uint8Array`);n=Uint8Array.from(t)}const o=n.length;if("number"==typeof r&&o!==r)throw new Error(`${e} expected ${r} bytes, got ${o}`);return n}function abstract_utils_concatBytes(...e){let t=0;for(let r=0;r<e.length;r++){const n=e[r];utils_abytes(n),t+=n.length}const r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const o=e[t];r.set(o,n),n+=o.length}return r}const bitMask=e=>(S<<BigInt(e-1))-A,u8n=e=>new Uint8Array(e),u8fr=e=>Uint8Array.from(e);function createHmacDrbg(e,t,r){if("number"!=typeof e||e<2)throw new Error("hashLen must be a number");if("number"!=typeof t||t<2)throw new Error("qByteLen must be a number");if("function"!=typeof r)throw new Error("hmacFn must be a function");let n=u8n(e),o=u8n(e),i=0;const reset=()=>{n.fill(1),o.fill(0),i=0},h=(...e)=>r(o,n,...e),reseed=(e=u8n())=>{o=h(u8fr([0]),e),n=h(),0!==e.length&&(o=h(u8fr([1]),e),n=h())},gen=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let e=0;const r=[];for(;e<t;){n=h();const t=n.slice();r.push(t),e+=n.length}return abstract_utils_concatBytes(...r)};return(e,t)=>{let r;for(reset(),reseed(e);!(r=t(gen()));)reseed();return reset(),r}}const f={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,stringOrUint8Array:e=>"string"==typeof e||abstract_utils_isBytes(e),isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};function validateObject(e,t,r={}){const checkField=(t,r,n)=>{const o=f[r];if("function"!=typeof o)throw new Error(`Invalid validator "${r}", expected function`);const i=e[t];if(!(n&&void 0===i||o(i,e)))throw new Error(`Invalid param ${String(t)}=${i} (${typeof i}), expected ${r}`)};for(const[e,r]of Object.entries(t))checkField(e,r,!1);for(const[e,t]of Object.entries(r))checkField(e,t,!0);return e}const m=BigInt(0),p=BigInt(1),N=BigInt(2),I=BigInt(3),T=BigInt(4),b=BigInt(5),y=BigInt(8);BigInt(9),BigInt(16);function modular_mod(e,t){const r=e%t;return r>=m?r:t+r}function pow(e,t,r){if(r<=m||t<m)throw new Error("Expected power/modulo > 0");if(r===p)return m;let n=p;for(;t>m;)t&p&&(n=n*e%r),e=e*e%r,t>>=p;return n}function modular_pow2(e,t,r){let n=e;for(;t-- >m;)n*=n,n%=r;return n}function invert(e,t){if(e===m||t<=m)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let r=modular_mod(e,t),n=t,o=m,i=p,s=p,a=m;for(;r!==m;){const e=n/r,t=n%r,c=o-s*e,u=i-a*e;n=r,r=t,o=s,i=a,s=c,a=u}if(n!==p)throw new Error("invert: does not exist");return modular_mod(o,t)}function FpSqrt(e){if(e%T===I){const t=(e+p)/T;return function sqrt3mod4(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error("Cannot find square root");return n}}if(e%y===b){const t=(e-b)/y;return function sqrt5mod8(e,r){const n=e.mul(r,N),o=e.pow(n,t),i=e.mul(r,o),s=e.mul(e.mul(i,N),o),a=e.mul(i,e.sub(s,e.ONE));if(!e.eql(e.sqr(a),r))throw new Error("Cannot find square root");return a}}return function tonelliShanks(e){const t=(e-p)/N;let r,n,o;for(r=e-p,n=0;r%N===m;r/=N,n++);for(o=N;o<e&&pow(o,t,e)!==e-p;o++);if(1===n){const t=(e+p)/T;return function tonelliFast(e,r){const n=e.pow(r,t);if(!e.eql(e.sqr(n),r))throw new Error("Cannot find square root");return n}}const i=(r+p)/N;return function tonelliSlow(e,s){if(e.pow(s,t)===e.neg(e.ONE))throw new Error("Cannot find square root");let a=n,c=e.pow(e.mul(e.ONE,o),r),u=e.pow(s,i),d=e.pow(s,r);for(;!e.eql(d,e.ONE);){if(e.eql(d,e.ZERO))return e.ZERO;let t=1;for(let r=e.sqr(d);t<a&&!e.eql(r,e.ONE);t++)r=e.sqr(r);const r=e.pow(c,p<<BigInt(a-t-1));c=e.sqr(r),u=e.mul(u,r),d=e.mul(d,c),a=t}return u}}(e)}const modular_isNegativeLE=(e,t)=>(modular_mod(e,t)&p)===p,C=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function nLength(e,t){const r=void 0!==t?t:e.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}function Field(e,t,r=!1,n={}){if(e<=m)throw new Error(`Expected Field ORDER > 0, got ${e}`);const{nBitLength:o,nByteLength:i}=nLength(e,t);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");const s=FpSqrt(e),a=Object.freeze({ORDER:e,BITS:o,BYTES:i,MASK:bitMask(o),ZERO:m,ONE:p,create:t=>modular_mod(t,e),isValid:t=>{if("bigint"!=typeof t)throw new Error("Invalid field element: expected bigint, got "+typeof t);return m<=t&&t<e},is0:e=>e===m,isOdd:e=>(e&p)===p,neg:t=>modular_mod(-t,e),eql:(e,t)=>e===t,sqr:t=>modular_mod(t*t,e),add:(t,r)=>modular_mod(t+r,e),sub:(t,r)=>modular_mod(t-r,e),mul:(t,r)=>modular_mod(t*r,e),pow:(e,t)=>function FpPow(e,t,r){if(r<m)throw new Error("Expected power > 0");if(r===m)return e.ONE;if(r===p)return t;let n=e.ONE,o=t;for(;r>m;)r&p&&(n=e.mul(n,o)),o=e.sqr(o),r>>=p;return n}(a,e,t),div:(t,r)=>modular_mod(t*invert(r,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>invert(t,e),sqrt:n.sqrt||(e=>s(a,e)),invertBatch:e=>function FpInvertBatch(e,t){const r=new Array(t.length),n=t.reduce(((t,n,o)=>e.is0(n)?t:(r[o]=t,e.mul(t,n))),e.ONE),o=e.inv(n);return t.reduceRight(((t,n,o)=>e.is0(n)?t:(r[o]=e.mul(t,r[o]),e.mul(t,n))),o),r}(a,e),cmov:(e,t,r)=>r?t:e,toBytes:e=>r?utils_numberToBytesLE(e,i):utils_numberToBytesBE(e,i),fromBytes:e=>{if(e.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${e.length}`);return r?utils_bytesToNumberLE(e):utils_bytesToNumberBE(e)}});return Object.freeze(a)}function getFieldBytesLength(e){if("bigint"!=typeof e)throw new Error("field order must be bigint");const t=e.toString(2).length;return Math.ceil(t/8)}function getMinHashLength(e){const t=getFieldBytesLength(e);return t+Math.ceil(t/2)}const w=BigInt(0),L=BigInt(1);function wNAF(e,t){const constTimeNegate=(e,t)=>{const r=t.negate();return e?r:t},opts=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate,unsafeLadder(t,r){let n=e.ZERO,o=t;for(;r>w;)r&L&&(n=n.add(o)),o=o.double(),r>>=L;return n},precomputeWindow(e,t){const{windows:r,windowSize:n}=opts(t),o=[];let i=e,s=i;for(let e=0;e<r;e++){s=i,o.push(s);for(let e=1;e<n;e++)s=s.add(i),o.push(s);i=s.double()}return o},wNAF(t,r,n){const{windows:o,windowSize:i}=opts(t);let s=e.ZERO,a=e.BASE;const c=BigInt(2**t-1),u=2**t,d=BigInt(t);for(let e=0;e<o;e++){const t=e*i;let o=Number(n&c);n>>=d,o>i&&(o-=u,n+=L);const _=t,l=t+Math.abs(o)-1,R=e%2!=0,E=o<0;0===o?a=a.add(constTimeNegate(R,r[_])):s=s.add(constTimeNegate(E,r[l]))}return{p:s,f:a}},wNAFCached(e,t,r,n){const o=e._WINDOW_SIZE||1;let i=t.get(e);return i||(i=this.precomputeWindow(e,o),1!==o&&t.set(e,n(i))),this.wNAF(o,i,r)}}}function validateBasic(e){return function validateField(e){return validateObject(e,C.reduce(((e,t)=>(e[t]="function",e)),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"}))}(e.Fp),validateObject(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nLength(e.n,e.nBitLength),...e,p:e.Fp.ORDER})}const k=BigInt(0),D=BigInt(1),P=BigInt(2),x=BigInt(8),v={zip215:!0};function twistedEdwards(e){const t=function validateOpts(e){const t=validateBasic(e);return validateObject(e,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...t})}(e),{Fp:r,n,prehash:o,hash:i,randomBytes:s,nByteLength:a,h:c}=t,u=P<<BigInt(8*a)-D,d=r.create,_=t.uvRatio||((e,t)=>{try{return{isValid:!0,value:r.sqrt(e*r.inv(t))}}catch(e){return{isValid:!1,value:k}}}),l=t.adjustScalarBytes||(e=>e),R=t.domain||((e,t,r)=>{if(t.length||r)throw new Error("Contexts/pre-hash are not supported");return e}),inBig=e=>"bigint"==typeof e&&k<e,inRange=(e,t)=>inBig(e)&&inBig(t)&&e<t,in0MaskRange=e=>e===k||inRange(e,u);function assertInRange(e,t){if(inRange(e,t))return e;throw new Error(`Expected valid scalar < ${t}, got ${typeof e} ${e}`)}function assertGE0(e){return e===k?e:assertInRange(e,n)}const E=new Map;function isPoint(e){if(!(e instanceof Point))throw new Error("ExtendedPoint expected")}class Point{constructor(e,t,r,n){if(this.ex=e,this.ey=t,this.ez=r,this.et=n,!in0MaskRange(e))throw new Error("x required");if(!in0MaskRange(t))throw new Error("y required");if(!in0MaskRange(r))throw new Error("z required");if(!in0MaskRange(n))throw new Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(e){if(e instanceof Point)throw new Error("extended point not allowed");const{x:t,y:r}=e||{};if(!in0MaskRange(t)||!in0MaskRange(r))throw new Error("invalid affine point");return new Point(t,r,D,d(t*r))}static normalizeZ(e){const t=r.invertBatch(e.map((e=>e.ez)));return e.map(((e,r)=>e.toAffine(t[r]))).map(Point.fromAffine)}_setWindowSize(e){this._WINDOW_SIZE=e,E.delete(this)}assertValidity(){const{a:e,d:r}=t;if(this.is0())throw new Error("bad point: ZERO");const{ex:n,ey:o,ez:i,et:s}=this,a=d(n*n),c=d(o*o),u=d(i*i),_=d(u*u),l=d(a*e);if(d(u*d(l+c))!==d(_+d(r*d(a*c))))throw new Error("bad point: equation left != right (1)");if(d(n*o)!==d(i*s))throw new Error("bad point: equation left != right (2)")}equals(e){isPoint(e);const{ex:t,ey:r,ez:n}=this,{ex:o,ey:i,ez:s}=e,a=d(t*s),c=d(o*n),u=d(r*s),_=d(i*n);return a===c&&u===_}is0(){return this.equals(Point.ZERO)}negate(){return new Point(d(-this.ex),this.ey,this.ez,d(-this.et))}double(){const{a:e}=t,{ex:r,ey:n,ez:o}=this,i=d(r*r),s=d(n*n),a=d(P*d(o*o)),c=d(e*i),u=r+n,_=d(d(u*u)-i-s),l=c+s,R=l-a,E=c-s,A=d(_*R),S=d(l*E),g=d(_*E),O=d(R*l);return new Point(A,S,O,g)}add(e){isPoint(e);const{a:r,d:n}=t,{ex:o,ey:i,ez:s,et:a}=this,{ex:c,ey:u,ez:_,et:l}=e;if(r===BigInt(-1)){const e=d((i-o)*(u+c)),t=d((i+o)*(u-c)),r=d(t-e);if(r===k)return this.double();const n=d(s*P*l),R=d(a*P*_),E=R+n,A=t+e,S=R-n,g=d(E*r),O=d(A*S),f=d(E*S),m=d(r*A);return new Point(g,O,m,f)}const R=d(o*c),E=d(i*u),A=d(a*n*l),S=d(s*_),g=d((o+i)*(c+u)-R-E),O=S-A,f=S+A,m=d(E-r*R),p=d(g*O),N=d(f*m),I=d(g*m),T=d(O*f);return new Point(p,N,T,I)}subtract(e){return this.add(e.negate())}wNAF(e){return g.wNAFCached(this,E,e,Point.normalizeZ)}multiply(e){const{p:t,f:r}=this.wNAF(assertInRange(e,n));return Point.normalizeZ([t,r])[0]}multiplyUnsafe(e){let t=assertGE0(e);return t===k?S:this.equals(S)||t===D?this:this.equals(A)?this.wNAF(t).p:g.unsafeLadder(this,t)}isSmallOrder(){return this.multiplyUnsafe(c).is0()}isTorsionFree(){return g.unsafeLadder(this,n).is0()}toAffine(e){const{ex:t,ey:n,ez:o}=this,i=this.is0();null==e&&(e=i?x:r.inv(o));const s=d(t*e),a=d(n*e),c=d(o*e);if(i)return{x:k,y:D};if(c!==D)throw new Error("invZ was invalid");return{x:s,y:a}}clearCofactor(){const{h:e}=t;return e===D?this:this.multiplyUnsafe(e)}static fromHex(e,n=!1){const{d:o,a:i}=t,s=r.BYTES,a=(e=utils_ensureBytes("pointHex",e,s)).slice(),c=e[s-1];a[s-1]=-129&c;const l=utils_bytesToNumberLE(a);l===k||assertInRange(l,n?u:r.ORDER);const R=d(l*l),E=d(R-D),A=d(o*R-i);let{isValid:S,value:g}=_(E,A);if(!S)throw new Error("Point.fromHex: invalid y coordinate");const O=(g&D)===D,f=!!(128&c);if(!n&&g===k&&f)throw new Error("Point.fromHex: x=0 and x_0=1");return f!==O&&(g=d(-g)),Point.fromAffine({x:g,y:l})}static fromPrivateKey(e){return getExtendedPublicKey(e).point}toRawBytes(){const{x:e,y:t}=this.toAffine(),n=utils_numberToBytesLE(t,r.BYTES);return n[n.length-1]|=e&D?128:0,n}toHex(){return abstract_utils_bytesToHex(this.toRawBytes())}}Point.BASE=new Point(t.Gx,t.Gy,D,d(t.Gx*t.Gy)),Point.ZERO=new Point(k,D,D,k);const{BASE:A,ZERO:S}=Point,g=wNAF(Point,8*a);function modN(e){return modular_mod(e,n)}function modN_LE(e){return modN(utils_bytesToNumberLE(e))}function getExtendedPublicKey(e){const t=a;e=utils_ensureBytes("private key",e,t);const r=utils_ensureBytes("hashed private key",i(e),2*t),n=l(r.slice(0,t)),o=r.slice(t,2*t),s=modN_LE(n),c=A.multiply(s),u=c.toRawBytes();return{head:n,prefix:o,scalar:s,point:c,pointBytes:u}}function hashDomainToScalar(e=new Uint8Array,...t){const r=abstract_utils_concatBytes(...t);return modN_LE(i(R(r,utils_ensureBytes("context",e),!!o)))}const O=v;A._setWindowSize(8);return{CURVE:t,getPublicKey:function getPublicKey(e){return getExtendedPublicKey(e).pointBytes},sign:function sign(e,t,n={}){e=utils_ensureBytes("message",e),o&&(e=o(e));const{prefix:i,scalar:s,pointBytes:c}=getExtendedPublicKey(t),u=hashDomainToScalar(n.context,i,e),d=A.multiply(u).toRawBytes(),_=modN(u+hashDomainToScalar(n.context,d,c,e)*s);return assertGE0(_),utils_ensureBytes("result",abstract_utils_concatBytes(d,utils_numberToBytesLE(_,r.BYTES)),2*a)},verify:function verify(e,t,n,i=O){const{context:s,zip215:a}=i,c=r.BYTES;e=utils_ensureBytes("signature",e,2*c),t=utils_ensureBytes("message",t),o&&(t=o(t));const u=utils_bytesToNumberLE(e.slice(c,2*c));let d,_,l;try{d=Point.fromHex(n,a),_=Point.fromHex(e.slice(0,c),a),l=A.multiplyUnsafe(u)}catch(e){return!1}if(!a&&d.isSmallOrder())return!1;const R=hashDomainToScalar(s,_.toRawBytes(),d.toRawBytes(),t);return _.add(d.multiplyUnsafe(R)).subtract(l).clearCofactor().equals(Point.ZERO)},ExtendedPoint:Point,utils:{getExtendedPublicKey,randomPrivateKey:()=>s(r.BYTES),precompute:(e=8,t=Point.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}}const B=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),U=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),M=(BigInt(0),BigInt(1)),F=BigInt(2),z=BigInt(5),K=BigInt(10),V=BigInt(20),W=BigInt(40),$=BigInt(80);function ed25519_pow_2_252_3(e){const t=B,r=e*e%t*e%t,n=modular_pow2(r,F,t)*r%t,o=modular_pow2(n,M,t)*e%t,i=modular_pow2(o,z,t)*o%t,s=modular_pow2(i,K,t)*i%t,a=modular_pow2(s,V,t)*s%t,c=modular_pow2(a,W,t)*a%t,u=modular_pow2(c,$,t)*c%t,d=modular_pow2(u,$,t)*c%t,_=modular_pow2(d,K,t)*i%t;return{pow_p_5_8:modular_pow2(_,F,t)*e%t,b2:r}}function adjustScalarBytes(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}function uvRatio(e,t){const r=B,n=modular_mod(t*t*t,r),o=modular_mod(n*n*t,r);let i=modular_mod(e*n*ed25519_pow_2_252_3(e*o).pow_p_5_8,r);const s=modular_mod(t*i*i,r),a=i,c=modular_mod(i*U,r),u=s===e,d=s===modular_mod(-e,r),_=s===modular_mod(-e*U,r);return u&&(i=a),(d||_)&&(i=c),modular_isNegativeLE(i,r)&&(i=modular_mod(-i,r)),{isValid:u||d,value:i}}const G=Field(B,void 0,!0),H={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:G,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:E,randomBytes:utils_randomBytes,adjustScalarBytes,uvRatio},Y=twistedEdwards(H);function ed25519_domain(e,t,r){if(t.length>255)throw new Error("Context is too big");return utils_concatBytes(utils_utf8ToBytes("SigEd25519 no Ed25519 collisions"),new Uint8Array([r?1:0,t.length]),t,e)}const j=(G.ORDER+BigInt(3))/BigInt(8);G.pow(F,j),G.sqrt(G.neg(G.ONE)),G.ORDER,BigInt(5),BigInt(8),BigInt(486662);(function FpSqrtEven(e,t){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const r=e.sqrt(t);return e.isOdd(r)?e.neg(r):r})(G,G.neg(BigInt(486664)));BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");var q=r(682823),J=r.n(q),X=r(939216),Z=r.n(X);const Q=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),ee=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),te=new Uint32Array(64);class SHA256 extends HashMD{constructor(){super(64,32,8,!1),this.A=0|ee[0],this.B=0|ee[1],this.C=0|ee[2],this.D=0|ee[3],this.E=0|ee[4],this.F=0|ee[5],this.G=0|ee[6],this.H=0|ee[7]}get(){const{A:e,B:t,C:r,D:n,E:o,F:i,G:s,H:a}=this;return[e,t,r,n,o,i,s,a]}set(e,t,r,n,o,i,s,a){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|n,this.E=0|o,this.F=0|i,this.G=0|s,this.H=0|a}process(e,t){for(let r=0;r<16;r++,t+=4)te[r]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=te[e-15],r=te[e-2],n=rotr(t,7)^rotr(t,18)^t>>>3,o=rotr(r,17)^rotr(r,19)^r>>>10;te[e]=o+te[e-7]+n+te[e-16]|0}let{A:r,B:n,C:o,D:i,E:s,F:a,G:c,H:u}=this;for(let e=0;e<64;e++){const t=u+(rotr(s,6)^rotr(s,11)^rotr(s,25))+((d=s)&a^~d&c)+Q[e]+te[e]|0,_=(rotr(r,2)^rotr(r,13)^rotr(r,22))+Maj(r,n,o)|0;u=c,c=a,a=s,s=i+t|0,i=o,o=n,n=r,r=t+_|0}var d;r=r+this.A|0,n=n+this.B|0,o=o+this.C|0,i=i+this.D|0,s=s+this.E|0,a=a+this.F|0,c=c+this.G|0,u=u+this.H|0,this.set(r,n,o,i,s,a,c,u)}roundClean(){te.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const re=utils_wrapConstructor((()=>new SHA256));var ne=r(881818),oe=r(878918),ie=r(856115),se=r(727801),ae=r(759499),ce=r.n(ae),ue=r(69026),de=r(131392);const _e=[],le=[],Re=[],Ee=BigInt(0),he=BigInt(1),Ae=BigInt(2),Se=BigInt(7),ge=BigInt(256),Oe=BigInt(113);for(let e=0,t=he,r=1,n=0;e<24;e++){[r,n]=[n,(2*r+3*n)%5],_e.push(2*(5*n+r)),le.push((e+1)*(e+2)/2%64);let o=Ee;for(let e=0;e<7;e++)t=(t<<he^(t>>Se)*Oe)%ge,t&Ae&&(o^=he<<(he<<BigInt(e))-he);Re.push(o)}const[fe,me]=split(Re,!0),rotlH=(e,t,r)=>r>32?rotlBH(e,t,r):rotlSH(e,t,r),rotlL=(e,t,r)=>r>32?rotlBL(e,t,r):rotlSL(e,t,r);class Keccak extends Hash{constructor(e,t,r,n=!1,o=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=r,this.enableXOF=n,this.rounds=o,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,number(r),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");var i;this.state=new Uint8Array(200),this.state32=(i=this.state,new Uint32Array(i.buffer,i.byteOffset,Math.floor(i.byteLength/4)))}keccak(){s||byteSwap32(this.state32),function keccakP(e,t=24){const r=new Uint32Array(10);for(let n=24-t;n<24;n++){for(let t=0;t<10;t++)r[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const n=(t+8)%10,o=(t+2)%10,i=r[o],s=r[o+1],a=rotlH(i,s,1)^r[n],c=rotlL(i,s,1)^r[n+1];for(let r=0;r<50;r+=10)e[t+r]^=a,e[t+r+1]^=c}let t=e[2],o=e[3];for(let r=0;r<24;r++){const n=le[r],i=rotlH(t,o,n),s=rotlL(t,o,n),a=_e[r];t=e[a],o=e[a+1],e[a]=i,e[a+1]=s}for(let t=0;t<50;t+=10){for(let n=0;n<10;n++)r[n]=e[t+n];for(let n=0;n<10;n++)e[t+n]^=~r[(n+2)%10]&r[(n+4)%10]}e[0]^=fe[n],e[1]^=me[n]}r.fill(0)}(this.state32,this.rounds),s||byteSwap32(this.state32),this.posOut=0,this.pos=0}update(e){exists(this);const{blockLen:t,state:r}=this,n=(e=toBytes(e)).length;for(let o=0;o<n;){const i=Math.min(t-this.pos,n-o);for(let t=0;t<i;t++)r[this.pos++]^=e[o++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:r,blockLen:n}=this;e[r]^=t,128&t&&r===n-1&&this.keccak(),e[n-1]^=128,this.keccak()}writeInto(e){exists(this,!1),bytes(e),this.finish();const t=this.state,{blockLen:r}=this;for(let n=0,o=e.length;n<o;){this.posOut>=r&&this.keccak();const i=Math.min(r-this.posOut,o-n);e.set(t.subarray(this.posOut,this.posOut+i),n),this.posOut+=i,n+=i}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(output(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:r,outputLen:n,rounds:o,enableXOF:i}=this;return e||(e=new Keccak(t,r,n,i,o)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=o,e.suffix=r,e.outputLen=n,e.enableXOF=i,e.destroyed=this.destroyed,e}}const gen=(e,t,r)=>utils_wrapConstructor((()=>new Keccak(t,e,r))),pe=gen(1,136,32);class HMAC extends Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,_assert_hash(e);const r=toBytes(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const n=this.blockLen,o=new Uint8Array(n);o.set(r.length>n?e.create().update(r).digest():r);for(let e=0;e<o.length;e++)o[e]^=54;this.iHash.update(o),this.oHash=e.create();for(let e=0;e<o.length;e++)o[e]^=106;this.oHash.update(o),o.fill(0)}update(e){return exists(this),this.iHash.update(e),this}digestInto(e){exists(this),bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:n,destroyed:o,blockLen:i,outputLen:s}=this;return e.finished=n,e.destroyed=o,e.blockLen=i,e.outputLen=s,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac=(e,t,r)=>new HMAC(e,t).update(r).digest();hmac.create=(e,t)=>new HMAC(e,t);const{bytesToNumberBE:Ne,hexToBytes:Ie}=n,Te={Err:class DERErr extends Error{constructor(e=""){super(e)}},_parseInt(e){const{Err:t}=Te;if(e.length<2||2!==e[0])throw new t("Invalid signature integer tag");const r=e[1],n=e.subarray(2,r+2);if(!r||n.length!==r)throw new t("Invalid signature integer: wrong length");if(128&n[0])throw new t("Invalid signature integer: negative");if(0===n[0]&&!(128&n[1]))throw new t("Invalid signature integer: unnecessary leading zero");return{d:Ne(n),l:e.subarray(r+2)}},toSig(e){const{Err:t}=Te,r="string"==typeof e?Ie(e):e;utils_abytes(r);let n=r.length;if(n<2||48!=r[0])throw new t("Invalid signature tag");if(r[1]!==n-2)throw new t("Invalid signature: incorrect length");const{d:o,l:i}=Te._parseInt(r.subarray(2)),{d:s,l:a}=Te._parseInt(i);if(a.length)throw new t("Invalid signature: left bytes after parsing");return{r:o,s}},hexFromSig(e){const slice=e=>8&Number.parseInt(e[0],16)?"00"+e:e,h=e=>{const t=e.toString(16);return 1&t.length?`0${t}`:t},t=slice(h(e.s)),r=slice(h(e.r)),n=t.length/2,o=r.length/2,i=h(n),s=h(o);return`30${h(o+n+4)}02${s}${r}02${i}${t}`}},be=BigInt(0),ye=BigInt(1),Ce=(BigInt(2),BigInt(3));BigInt(4);function weierstrassPoints(e){const t=function validatePointOpts(e){const t=validateBasic(e);validateObject(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:r,Fp:n,a:o}=t;if(r){if(!n.eql(o,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof r||"bigint"!=typeof r.beta||"function"!=typeof r.splitScalar)throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}(e),{Fp:r}=t,n=t.toBytes||((e,t,n)=>{const o=t.toAffine();return abstract_utils_concatBytes(Uint8Array.from([4]),r.toBytes(o.x),r.toBytes(o.y))}),o=t.fromBytes||(e=>{const t=e.subarray(1);return{x:r.fromBytes(t.subarray(0,r.BYTES)),y:r.fromBytes(t.subarray(r.BYTES,2*r.BYTES))}});function weierstrassEquation(e){const{a:n,b:o}=t,i=r.sqr(e),s=r.mul(i,e);return r.add(r.add(s,r.mul(e,n)),o)}if(!r.eql(r.sqr(t.Gy),weierstrassEquation(t.Gx)))throw new Error("bad generator point: equation left != right");function isWithinCurveOrder(e){return"bigint"==typeof e&&be<e&&e<t.n}function assertGE(e){if(!isWithinCurveOrder(e))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function normPrivateKeyToScalar(e){const{allowedPrivateKeyLengths:r,nByteLength:n,wrapPrivateKey:o,n:i}=t;if(r&&"bigint"!=typeof e){if(abstract_utils_isBytes(e)&&(e=abstract_utils_bytesToHex(e)),"string"!=typeof e||!r.includes(e.length))throw new Error("Invalid key");e=e.padStart(2*n,"0")}let s;try{s="bigint"==typeof e?e:utils_bytesToNumberBE(utils_ensureBytes("private key",e,n))}catch(t){throw new Error(`private key must be ${n} bytes, hex or bigint, not ${typeof e}`)}return o&&(s=modular_mod(s,i)),assertGE(s),s}const i=new Map;function assertPrjPoint(e){if(!(e instanceof Point))throw new Error("ProjectivePoint expected")}class Point{constructor(e,t,n){if(this.px=e,this.py=t,this.pz=n,null==e||!r.isValid(e))throw new Error("x required");if(null==t||!r.isValid(t))throw new Error("y required");if(null==n||!r.isValid(n))throw new Error("z required")}static fromAffine(e){const{x:t,y:n}=e||{};if(!e||!r.isValid(t)||!r.isValid(n))throw new Error("invalid affine point");if(e instanceof Point)throw new Error("projective point not allowed");const is0=e=>r.eql(e,r.ZERO);return is0(t)&&is0(n)?Point.ZERO:new Point(t,n,r.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(Point.fromAffine)}static fromHex(e){const t=Point.fromAffine(o(utils_ensureBytes("pointHex",e)));return t.assertValidity(),t}static fromPrivateKey(e){return Point.BASE.multiply(normPrivateKeyToScalar(e))}_setWindowSize(e){this._WINDOW_SIZE=e,i.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint&&!r.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:e,y:n}=this.toAffine();if(!r.isValid(e)||!r.isValid(n))throw new Error("bad point: x or y not FE");const o=r.sqr(n),i=weierstrassEquation(e);if(!r.eql(o,i))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:e}=this.toAffine();if(r.isOdd)return!r.isOdd(e);throw new Error("Field doesn't support isOdd")}equals(e){assertPrjPoint(e);const{px:t,py:n,pz:o}=this,{px:i,py:s,pz:a}=e,c=r.eql(r.mul(t,a),r.mul(i,o)),u=r.eql(r.mul(n,a),r.mul(s,o));return c&&u}negate(){return new Point(this.px,r.neg(this.py),this.pz)}double(){const{a:e,b:n}=t,o=r.mul(n,Ce),{px:i,py:s,pz:a}=this;let c=r.ZERO,u=r.ZERO,d=r.ZERO,_=r.mul(i,i),l=r.mul(s,s),R=r.mul(a,a),E=r.mul(i,s);return E=r.add(E,E),d=r.mul(i,a),d=r.add(d,d),c=r.mul(e,d),u=r.mul(o,R),u=r.add(c,u),c=r.sub(l,u),u=r.add(l,u),u=r.mul(c,u),c=r.mul(E,c),d=r.mul(o,d),R=r.mul(e,R),E=r.sub(_,R),E=r.mul(e,E),E=r.add(E,d),d=r.add(_,_),_=r.add(d,_),_=r.add(_,R),_=r.mul(_,E),u=r.add(u,_),R=r.mul(s,a),R=r.add(R,R),_=r.mul(R,E),c=r.sub(c,_),d=r.mul(R,l),d=r.add(d,d),d=r.add(d,d),new Point(c,u,d)}add(e){assertPrjPoint(e);const{px:n,py:o,pz:i}=this,{px:s,py:a,pz:c}=e;let u=r.ZERO,d=r.ZERO,_=r.ZERO;const l=t.a,R=r.mul(t.b,Ce);let E=r.mul(n,s),A=r.mul(o,a),S=r.mul(i,c),g=r.add(n,o),O=r.add(s,a);g=r.mul(g,O),O=r.add(E,A),g=r.sub(g,O),O=r.add(n,i);let f=r.add(s,c);return O=r.mul(O,f),f=r.add(E,S),O=r.sub(O,f),f=r.add(o,i),u=r.add(a,c),f=r.mul(f,u),u=r.add(A,S),f=r.sub(f,u),_=r.mul(l,O),u=r.mul(R,S),_=r.add(u,_),u=r.sub(A,_),_=r.add(A,_),d=r.mul(u,_),A=r.add(E,E),A=r.add(A,E),S=r.mul(l,S),O=r.mul(R,O),A=r.add(A,S),S=r.sub(E,S),S=r.mul(l,S),O=r.add(O,S),E=r.mul(A,O),d=r.add(d,E),E=r.mul(f,O),u=r.mul(g,u),u=r.sub(u,E),E=r.mul(g,A),_=r.mul(f,_),_=r.add(_,E),new Point(u,d,_)}subtract(e){return this.add(e.negate())}is0(){return this.equals(Point.ZERO)}wNAF(e){return a.wNAFCached(this,i,e,(e=>{const t=r.invertBatch(e.map((e=>e.pz)));return e.map(((e,r)=>e.toAffine(t[r]))).map(Point.fromAffine)}))}multiplyUnsafe(e){const n=Point.ZERO;if(e===be)return n;if(assertGE(e),e===ye)return this;const{endo:o}=t;if(!o)return a.unsafeLadder(this,e);let{k1neg:i,k1:s,k2neg:c,k2:u}=o.splitScalar(e),d=n,_=n,l=this;for(;s>be||u>be;)s&ye&&(d=d.add(l)),u&ye&&(_=_.add(l)),l=l.double(),s>>=ye,u>>=ye;return i&&(d=d.negate()),c&&(_=_.negate()),_=new Point(r.mul(_.px,o.beta),_.py,_.pz),d.add(_)}multiply(e){assertGE(e);let n,o,i=e;const{endo:s}=t;if(s){const{k1neg:e,k1:t,k2neg:c,k2:u}=s.splitScalar(i);let{p:d,f:_}=this.wNAF(t),{p:l,f:R}=this.wNAF(u);d=a.constTimeNegate(e,d),l=a.constTimeNegate(c,l),l=new Point(r.mul(l.px,s.beta),l.py,l.pz),n=d.add(l),o=_.add(R)}else{const{p:e,f:t}=this.wNAF(i);n=e,o=t}return Point.normalizeZ([n,o])[0]}multiplyAndAddUnsafe(e,t,r){const n=Point.BASE,mul=(e,t)=>t!==be&&t!==ye&&e.equals(n)?e.multiply(t):e.multiplyUnsafe(t),o=mul(this,t).add(mul(e,r));return o.is0()?void 0:o}toAffine(e){const{px:t,py:n,pz:o}=this,i=this.is0();null==e&&(e=i?r.ONE:r.inv(o));const s=r.mul(t,e),a=r.mul(n,e),c=r.mul(o,e);if(i)return{x:r.ZERO,y:r.ZERO};if(!r.eql(c,r.ONE))throw new Error("invZ was invalid");return{x:s,y:a}}isTorsionFree(){const{h:e,isTorsionFree:r}=t;if(e===ye)return!0;if(r)return r(Point,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:e,clearCofactor:r}=t;return e===ye?this:r?r(Point,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),n(Point,this,e)}toHex(e=!0){return abstract_utils_bytesToHex(this.toRawBytes(e))}}Point.BASE=new Point(t.Gx,t.Gy,r.ONE),Point.ZERO=new Point(r.ZERO,r.ONE,r.ZERO);const s=t.nBitLength,a=wNAF(Point,t.endo?Math.ceil(s/2):s);return{CURVE:t,ProjectivePoint:Point,normPrivateKeyToScalar,weierstrassEquation,isWithinCurveOrder}}function weierstrass(e){const t=function weierstrass_validateOpts(e){const t=validateBasic(e);return validateObject(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}(e),{Fp:r,n}=t,o=r.BYTES+1,i=2*r.BYTES+1;function modN(e){return modular_mod(e,n)}function invN(e){return invert(e,n)}const{ProjectivePoint:s,normPrivateKeyToScalar:a,weierstrassEquation:c,isWithinCurveOrder:u}=weierstrassPoints({...t,toBytes(e,t,n){const o=t.toAffine(),i=r.toBytes(o.x),s=abstract_utils_concatBytes;return n?s(Uint8Array.from([t.hasEvenY()?2:3]),i):s(Uint8Array.from([4]),i,r.toBytes(o.y))},fromBytes(e){const t=e.length,n=e[0],s=e.subarray(1);if(t!==o||2!==n&&3!==n){if(t===i&&4===n){return{x:r.fromBytes(s.subarray(0,r.BYTES)),y:r.fromBytes(s.subarray(r.BYTES,2*r.BYTES))}}throw new Error(`Point of length ${t} was invalid. Expected ${o} compressed bytes or ${i} uncompressed bytes`)}{const e=utils_bytesToNumberBE(s);if(!function isValidFieldElement(e){return be<e&&e<r.ORDER}(e))throw new Error("Point is not on curve");const t=c(e);let o;try{o=r.sqrt(t)}catch(e){const t=e instanceof Error?": "+e.message:"";throw new Error("Point is not on curve"+t)}return!(1&~n)!==((o&ye)===ye)&&(o=r.neg(o)),{x:e,y:o}}}}),numToNByteStr=e=>abstract_utils_bytesToHex(utils_numberToBytesBE(e,t.nByteLength));function isBiggerThanHalfOrder(e){return e>n>>ye}const slcNum=(e,t,r)=>utils_bytesToNumberBE(e.slice(t,r));class Signature{constructor(e,t,r){this.r=e,this.s=t,this.recovery=r,this.assertValidity()}static fromCompact(e){const r=t.nByteLength;return e=utils_ensureBytes("compactSignature",e,2*r),new Signature(slcNum(e,0,r),slcNum(e,r,2*r))}static fromDER(e){const{r:t,s:r}=Te.toSig(utils_ensureBytes("DER",e));return new Signature(t,r)}assertValidity(){if(!u(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!u(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(e){return new Signature(this.r,this.s,e)}recoverPublicKey(e){const{r:n,s:o,recovery:i}=this,a=l(utils_ensureBytes("msgHash",e));if(null==i||![0,1,2,3].includes(i))throw new Error("recovery id invalid");const c=2===i||3===i?n+t.n:n;if(c>=r.ORDER)throw new Error("recovery id 2 or 3 invalid");const u=1&i?"03":"02",d=s.fromHex(u+numToNByteStr(c)),_=invN(c),R=modN(-a*_),E=modN(o*_),A=s.BASE.multiplyAndAddUnsafe(d,R,E);if(!A)throw new Error("point at infinify");return A.assertValidity(),A}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature(this.r,modN(-this.s),this.recovery):this}toDERRawBytes(){return utils_hexToBytes(this.toDERHex())}toDERHex(){return Te.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return utils_hexToBytes(this.toCompactHex())}toCompactHex(){return numToNByteStr(this.r)+numToNByteStr(this.s)}}const d={isValidPrivateKey(e){try{return a(e),!0}catch(e){return!1}},normPrivateKeyToScalar:a,randomPrivateKey:()=>{const e=getMinHashLength(t.n);return function mapHashToField(e,t,r=!1){const n=e.length,o=getFieldBytesLength(t),i=getMinHashLength(t);if(n<16||n<i||n>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${n}`);const s=modular_mod(r?utils_bytesToNumberBE(e):utils_bytesToNumberLE(e),t-p)+p;return r?utils_numberToBytesLE(s,o):utils_numberToBytesBE(s,o)}(t.randomBytes(e),t.n)},precompute:(e=8,t=s.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)};function isProbPub(e){const t=abstract_utils_isBytes(e),r="string"==typeof e,n=(t||r)&&e.length;return t?n===o||n===i:r?n===2*o||n===2*i:e instanceof s}const _=t.bits2int||function(e){const r=utils_bytesToNumberBE(e),n=8*e.length-t.nBitLength;return n>0?r>>BigInt(n):r},l=t.bits2int_modN||function(e){return modN(_(e))},R=bitMask(t.nBitLength);function int2octets(e){if("bigint"!=typeof e)throw new Error("bigint expected");if(!(be<=e&&e<R))throw new Error(`bigint expected < 2^${t.nBitLength}`);return utils_numberToBytesBE(e,t.nByteLength)}function prepSig(e,n,o=E){if(["recovered","canonical"].some((e=>e in o)))throw new Error("sign() legacy options not supported");const{hash:i,randomBytes:c}=t;let{lowS:d,prehash:R,extraEntropy:A}=o;null==d&&(d=!0),e=utils_ensureBytes("msgHash",e),R&&(e=utils_ensureBytes("prehashed msgHash",i(e)));const S=l(e),g=a(n),O=[int2octets(g),int2octets(S)];if(null!=A&&!1!==A){const e=!0===A?c(r.BYTES):A;O.push(utils_ensureBytes("extraEntropy",e))}const f=abstract_utils_concatBytes(...O),m=S;return{seed:f,k2sig:function k2sig(e){const t=_(e);if(!u(t))return;const r=invN(t),n=s.BASE.multiply(t).toAffine(),o=modN(n.x);if(o===be)return;const i=modN(r*modN(m+o*g));if(i===be)return;let a=(n.x===o?0:2)|Number(n.y&ye),c=i;return d&&isBiggerThanHalfOrder(i)&&(c=function normalizeS(e){return isBiggerThanHalfOrder(e)?modN(-e):e}(i),a^=1),new Signature(o,c,a)}}}const E={lowS:t.lowS,prehash:!1},A={lowS:t.lowS,prehash:!1};return s.BASE._setWindowSize(8),{CURVE:t,getPublicKey:function getPublicKey(e,t=!0){return s.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function getSharedSecret(e,t,r=!0){if(isProbPub(e))throw new Error("first arg must be private key");if(!isProbPub(t))throw new Error("second arg must be public key");return s.fromHex(t).multiply(a(e)).toRawBytes(r)},sign:function sign(e,r,n=E){const{seed:o,k2sig:i}=prepSig(e,r,n),s=t;return createHmacDrbg(s.hash.outputLen,s.nByteLength,s.hmac)(o,i)},verify:function verify(e,r,n,o=A){const i=e;if(r=utils_ensureBytes("msgHash",r),n=utils_ensureBytes("publicKey",n),"strict"in o)throw new Error("options.strict was renamed to lowS");const{lowS:a,prehash:c}=o;let u,d;try{if("string"==typeof i||abstract_utils_isBytes(i))try{u=Signature.fromDER(i)}catch(e){if(!(e instanceof Te.Err))throw e;u=Signature.fromCompact(i)}else{if("object"!=typeof i||"bigint"!=typeof i.r||"bigint"!=typeof i.s)throw new Error("PARSE");{const{r:e,s:t}=i;u=new Signature(e,t)}}d=s.fromHex(n)}catch(e){if("PARSE"===e.message)throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(a&&u.hasHighS())return!1;c&&(r=t.hash(r));const{r:_,s:R}=u,E=l(r),S=invN(R),g=modN(E*S),O=modN(_*S),f=s.BASE.multiplyAndAddUnsafe(d,g,O)?.toAffine();return!!f&&modN(f.x)===_},ProjectivePoint:s,Signature,utils:d}}function getHash(e){return{hash:e,hmac:(t,...r)=>hmac(e,t,utils_concatBytes(...r)),randomBytes:utils_randomBytes}}const we=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),Le=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),ke=BigInt(1),De=BigInt(2),divNearest=(e,t)=>(e+t/De)/t;function sqrtMod(e){const t=we,r=BigInt(3),n=BigInt(6),o=BigInt(11),i=BigInt(22),s=BigInt(23),a=BigInt(44),c=BigInt(88),u=e*e*e%t,d=u*u*e%t,_=modular_pow2(d,r,t)*d%t,l=modular_pow2(_,r,t)*d%t,R=modular_pow2(l,De,t)*u%t,E=modular_pow2(R,o,t)*R%t,A=modular_pow2(E,i,t)*E%t,S=modular_pow2(A,a,t)*A%t,g=modular_pow2(S,c,t)*S%t,O=modular_pow2(g,a,t)*A%t,f=modular_pow2(O,r,t)*d%t,m=modular_pow2(f,s,t)*E%t,p=modular_pow2(m,n,t)*u%t,N=modular_pow2(p,De,t);if(!Pe.eql(Pe.sqr(N),e))throw new Error("Cannot find square root");return N}const Pe=Field(we,void 0,void 0,{sqrt:sqrtMod}),xe=function createCurve(e,t){const create=t=>weierstrass({...e,...getHash(t)});return Object.freeze({...create(t),create})}({a:BigInt(0),b:BigInt(7),Fp:Pe,n:Le,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{const t=Le,r=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-ke*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=r,s=BigInt("0x100000000000000000000000000000000"),a=divNearest(i*e,t),c=divNearest(-n*e,t);let u=modular_mod(e-a*r-c*o,t),d=modular_mod(-a*n-c*i,t);const _=u>s,l=d>s;if(_&&(u=t-u),l&&(d=t-d),u>s||d>s)throw new Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:_,k1:u,k2neg:l,k2:d}}}},re);BigInt(0);xe.ProjectivePoint;const ve=Y.utils.randomPrivateKey,generateKeypair=()=>{const e=Y.utils.randomPrivateKey(),t=Be(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},Be=Y.getPublicKey;function isOnCurve(e){try{return Y.ExtendedPoint.fromHex(e),!0}catch{return!1}}const sign=(e,t)=>Y.sign(e,t.slice(0,32)),Ue=Y.verify,toBuffer=e=>o.Buffer.isBuffer(e)?e:e instanceof Uint8Array?o.Buffer.from(e.buffer,e.byteOffset,e.byteLength):o.Buffer.from(e);class Struct{constructor(e){Object.assign(this,e)}encode(){return o.Buffer.from((0,ne.serialize)(Me,this))}static decode(e){return(0,ne.deserialize)(Me,this,e)}static decodeUnchecked(e){return(0,ne.deserializeUnchecked)(Me,this,e)}}class Enum extends Struct{constructor(e){if(super(e),this.enum="",1!==Object.keys(e).length)throw new Error("Enum can only take single value");Object.keys(e).map((e=>{this.enum=e}))}}const Me=new Map;var Fe;const ze=32,Ke=32;let Ve=1;class PublicKey extends Struct{constructor(e){if(super({}),this._bn=void 0,function isPublicKeyData(e){return void 0!==e._bn}(e))this._bn=e._bn;else{if("string"==typeof e){const t=Z().decode(e);if(t.length!=Ke)throw new Error("Invalid public key input");this._bn=new(J())(t)}else this._bn=new(J())(e);if(this._bn.byteLength()>Ke)throw new Error("Invalid public key input")}}static unique(){const e=new PublicKey(Ve);return Ve+=1,new PublicKey(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return Z().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(o.Buffer);if(e.length===Ke)return e;const t=o.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[Symbol.toStringTag](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const n=o.Buffer.concat([e.toBuffer(),o.Buffer.from(t),r.toBuffer()]),i=re(n);return new PublicKey(i)}static createProgramAddressSync(e,t){let r=o.Buffer.alloc(0);e.forEach((function(e){if(e.length>ze)throw new TypeError("Max seed length exceeded");r=o.Buffer.concat([r,toBuffer(e)])})),r=o.Buffer.concat([r,t.toBuffer(),o.Buffer.from("ProgramDerivedAddress")]);const n=re(r);if(isOnCurve(n))throw new Error("Invalid seeds, address must fall off the curve");return new PublicKey(n)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,n=255;for(;0!=n;){try{const i=e.concat(o.Buffer.from([n]));r=this.createProgramAddressSync(i,t)}catch(e){if(e instanceof TypeError)throw e;n--;continue}return[r,n]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return isOnCurve(new PublicKey(e).toBytes())}}Fe=PublicKey,PublicKey.default=new Fe("11111111111111111111111111111111"),Me.set(PublicKey,{kind:"struct",fields:[["_bn","u256"]]});class Account{constructor(e){if(this._publicKey=void 0,this._secretKey=void 0,e){const t=toBuffer(e);if(64!==e.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=toBuffer(ve()),this._publicKey=toBuffer(Be(this._secretKey))}get publicKey(){return new PublicKey(this._publicKey)}get secretKey(){return o.Buffer.concat([this._secretKey,this._publicKey],64)}}const We=new PublicKey("BPFLoader1111111111111111111111111111111111"),$e=1232,Ge=127,He=64;class TransactionExpiredBlockheightExceededError extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(TransactionExpiredBlockheightExceededError.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class TransactionExpiredTimeoutError extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(TransactionExpiredTimeoutError.prototype,"name",{value:"TransactionExpiredTimeoutError"});class TransactionExpiredNonceInvalidError extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(TransactionExpiredNonceInvalidError.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class MessageAccountKeys{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){const e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(const t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((e,r)=>{t.set(e.toBase58(),r)}));const findKeyIndex=e=>{const r=t.get(e.toBase58());if(void 0===r)throw new Error("Encountered an unknown instruction account key during compilation");return r};return e.map((e=>({programIdIndex:findKeyIndex(e.programId),accountKeyIndexes:e.keys.map((e=>findKeyIndex(e.pubkey))),data:e.data})))}}const publicKey=(e="publicKey")=>oe.blob(32,e),signature=(e="signature")=>oe.blob(64,e),rustString=(e="string")=>{const t=oe.struct([oe.u32("length"),oe.u32("lengthPadding"),oe.blob(oe.offset(oe.u32(),-8),"chars")],e),r=t.decode.bind(t),n=t.encode.bind(t),i=t;return i.decode=(e,t)=>r(e,t).chars.toString(),i.encode=(e,t,r)=>{const i={chars:o.Buffer.from(e,"utf8")};return n(i,t,r)},i.alloc=e=>oe.u32().span+oe.u32().span+o.Buffer.from(e,"utf8").length,i};function getAlloc(e,t){const getItemAlloc=e=>{if(e.span>=0)return e.span;if("function"==typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){const r=t[e.property];if(Array.isArray(r))return r.length*getItemAlloc(e.elementLayout)}else if("fields"in e)return getAlloc({layout:e},t[e.property]);return 0};let r=0;return e.layout.fields.forEach((e=>{r+=getItemAlloc(e)})),r}function decodeLength(e){let t=0,r=0;for(;;){let n=e.shift();if(t|=(127&n)<<7*r,r+=1,!(128&n))break}return t}function encodeLength(e,t){let r=t;for(;;){let t=127&r;if(r>>=7,0==r){e.push(t);break}t|=128,e.push(t)}}function index_browser_esm_assert(e,t){if(!e)throw new Error(t||"Assertion failed")}class CompiledKeys{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){const r=new Map,getOrInsertDefault=e=>{const t=e.toBase58();let n=r.get(t);return void 0===n&&(n={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,n)),n},n=getOrInsertDefault(t);n.isSigner=!0,n.isWritable=!0;for(const t of e){getOrInsertDefault(t.programId).isInvoked=!0;for(const e of t.keys){const t=getOrInsertDefault(e.pubkey);t.isSigner||=e.isSigner,t.isWritable||=e.isWritable}}return new CompiledKeys(t,r)}getMessageComponents(){const e=[...this.keyMetaMap.entries()];index_browser_esm_assert(e.length<=256,"Max static account keys length exceeded");const t=e.filter((([,e])=>e.isSigner&&e.isWritable)),r=e.filter((([,e])=>e.isSigner&&!e.isWritable)),n=e.filter((([,e])=>!e.isSigner&&e.isWritable)),o=e.filter((([,e])=>!e.isSigner&&!e.isWritable)),i={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:o.length};{index_browser_esm_assert(t.length>0,"Expected at least one writable signer key");const[e]=t[0];index_browser_esm_assert(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[i,[...t.map((([e])=>new PublicKey(e))),...r.map((([e])=>new PublicKey(e))),...n.map((([e])=>new PublicKey(e))),...o.map((([e])=>new PublicKey(e)))]]}extractTableLookup(e){const[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&e.isWritable)),[n,o]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&!e.isWritable));if(0!==t.length||0!==n.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:n},{writable:r,readonly:o}]}drainKeysFoundInLookupTable(e,t){const r=new Array,n=new Array;for(const[o,i]of this.keyMetaMap.entries())if(t(i)){const t=new PublicKey(o),i=e.findIndex((e=>e.equals(t)));i>=0&&(index_browser_esm_assert(i<256,"Max lookup table index exceeded"),r.push(i),n.push(t),this.keyMetaMap.delete(o))}return[r,n]}}const Ye="Reached end of buffer unexpectedly";function guardedShift(e){if(0===e.length)throw new Error(Ye);return e.shift()}function guardedSplice(e,...t){const[r]=t;if(2===t.length?r+(t[1]??0)>e.length:r>=e.length)throw new Error(Ye);return e.splice(...t)}class Message{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map((e=>new PublicKey(e))),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach((e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:Z().decode(e.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new MessageAccountKeys(this.staticAccountKeys)}static compile(e){const t=CompiledKeys.compile(e.instructions,e.payerKey),[r,n]=t.getMessageComponents(),o=new MessageAccountKeys(n).compileInstructions(e.instructions).map((e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:Z().encode(e.data)})));return new Message({header:r,accountKeys:n,recentBlockhash:e.recentBlockhash,instructions:o})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;if(e>=this.header.numRequiredSignatures){return e-t<this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((e,t)=>!this.isProgramId(t)))}serialize(){const e=this.accountKeys.length;let t=[];encodeLength(t,e);const r=this.instructions.map((e=>{const{accounts:t,programIdIndex:r}=e,n=Array.from(Z().decode(e.data));let i=[];encodeLength(i,t.length);let s=[];return encodeLength(s,n.length),{programIdIndex:r,keyIndicesCount:o.Buffer.from(i),keyIndices:t,dataLength:o.Buffer.from(s),data:n}}));let n=[];encodeLength(n,r.length);let i=o.Buffer.alloc($e);o.Buffer.from(n).copy(i);let s=n.length;r.forEach((e=>{const t=oe.struct([oe.u8("programIdIndex"),oe.blob(e.keyIndicesCount.length,"keyIndicesCount"),oe.seq(oe.u8("keyIndex"),e.keyIndices.length,"keyIndices"),oe.blob(e.dataLength.length,"dataLength"),oe.seq(oe.u8("userdatum"),e.data.length,"data")]).encode(e,i,s);s+=t})),i=i.slice(0,s);const a=oe.struct([oe.blob(1,"numRequiredSignatures"),oe.blob(1,"numReadonlySignedAccounts"),oe.blob(1,"numReadonlyUnsignedAccounts"),oe.blob(t.length,"keyCount"),oe.seq(publicKey("key"),e,"keys"),publicKey("recentBlockhash")]),c={numRequiredSignatures:o.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:o.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:o.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:o.Buffer.from(t),keys:this.accountKeys.map((e=>toBuffer(e.toBytes()))),recentBlockhash:Z().decode(this.recentBlockhash)};let u=o.Buffer.alloc(2048);const d=a.encode(c,u);return i.copy(u,d),u.slice(0,d+i.length)}static from(e){let t=[...e];const r=guardedShift(t);if(r!==(r&Ge))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const n=guardedShift(t),i=guardedShift(t),s=decodeLength(t);let a=[];for(let e=0;e<s;e++){const e=guardedSplice(t,0,Ke);a.push(new PublicKey(o.Buffer.from(e)))}const c=guardedSplice(t,0,Ke),u=decodeLength(t);let d=[];for(let e=0;e<u;e++){const e=guardedShift(t),r=guardedSplice(t,0,decodeLength(t)),n=guardedSplice(t,0,decodeLength(t)),i=Z().encode(o.Buffer.from(n));d.push({programIdIndex:e,accounts:r,data:i})}const _={header:{numRequiredSignatures:r,numReadonlySignedAccounts:n,numReadonlyUnsignedAccounts:i},recentBlockhash:Z().encode(o.Buffer.from(c)),accountKeys:a,instructions:d};return new Message(_)}}class MessageV0{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(const t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new MessageAccountKeys(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;if(e>=r){return e-r<this.addressTableLookups.reduce(((e,t)=>e+t.writableIndexes.length),0)}if(e>=this.header.numRequiredSignatures){return e-t<r-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}resolveAddressTableLookups(e){const t={writable:[],readonly:[]};for(const r of this.addressTableLookups){const n=e.find((e=>e.key.equals(r.accountKey)));if(!n)throw new Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(const e of r.writableIndexes){if(!(e<n.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.writable.push(n.state.addresses[e])}for(const e of r.readonlyIndexes){if(!(e<n.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.readonly.push(n.state.addresses[e])}}return t}static compile(e){const t=CompiledKeys.compile(e.instructions,e.payerKey),r=new Array,n={writable:new Array,readonly:new Array},o=e.addressLookupTableAccounts||[];for(const e of o){const o=t.extractTableLookup(e);if(void 0!==o){const[e,{writable:t,readonly:i}]=o;r.push(e),n.writable.push(...t),n.readonly.push(...i)}}const[i,s]=t.getMessageComponents(),a=new MessageAccountKeys(s,n).compileInstructions(e.instructions);return new MessageV0({header:i,staticAccountKeys:s,recentBlockhash:e.recentBlockhash,compiledInstructions:a,addressTableLookups:r})}serialize(){const e=Array();encodeLength(e,this.staticAccountKeys.length);const t=this.serializeInstructions(),r=Array();encodeLength(r,this.compiledInstructions.length);const n=this.serializeAddressTableLookups(),o=Array();encodeLength(o,this.addressTableLookups.length);const i=oe.struct([oe.u8("prefix"),oe.struct([oe.u8("numRequiredSignatures"),oe.u8("numReadonlySignedAccounts"),oe.u8("numReadonlyUnsignedAccounts")],"header"),oe.blob(e.length,"staticAccountKeysLength"),oe.seq(publicKey(),this.staticAccountKeys.length,"staticAccountKeys"),publicKey("recentBlockhash"),oe.blob(r.length,"instructionsLength"),oe.blob(t.length,"serializedInstructions"),oe.blob(o.length,"addressTableLookupsLength"),oe.blob(n.length,"serializedAddressTableLookups")]),s=new Uint8Array($e),a=i.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map((e=>e.toBytes())),recentBlockhash:Z().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(o),serializedAddressTableLookups:n},s);return s.slice(0,a)}serializeInstructions(){let e=0;const t=new Uint8Array($e);for(const r of this.compiledInstructions){const n=Array();encodeLength(n,r.accountKeyIndexes.length);const o=Array();encodeLength(o,r.data.length);e+=oe.struct([oe.u8("programIdIndex"),oe.blob(n.length,"encodedAccountKeyIndexesLength"),oe.seq(oe.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),oe.blob(o.length,"encodedDataLength"),oe.blob(r.data.length,"data")]).encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(n),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(o),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array($e);for(const r of this.addressTableLookups){const n=Array();encodeLength(n,r.writableIndexes.length);const o=Array();encodeLength(o,r.readonlyIndexes.length);e+=oe.struct([publicKey("accountKey"),oe.blob(n.length,"encodedWritableIndexesLength"),oe.seq(oe.u8(),r.writableIndexes.length,"writableIndexes"),oe.blob(o.length,"encodedReadonlyIndexesLength"),oe.seq(oe.u8(),r.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(n),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(o),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=guardedShift(t),n=r&Ge;index_browser_esm_assert(r!==n,"Expected versioned message but received legacy message");index_browser_esm_assert(0===n,`Expected versioned message with version 0 but found version ${n}`);const o={numRequiredSignatures:guardedShift(t),numReadonlySignedAccounts:guardedShift(t),numReadonlyUnsignedAccounts:guardedShift(t)},i=[],s=decodeLength(t);for(let e=0;e<s;e++)i.push(new PublicKey(guardedSplice(t,0,Ke)));const a=Z().encode(guardedSplice(t,0,Ke)),c=decodeLength(t),u=[];for(let e=0;e<c;e++){const e=guardedShift(t),r=guardedSplice(t,0,decodeLength(t)),n=decodeLength(t),o=new Uint8Array(guardedSplice(t,0,n));u.push({programIdIndex:e,accountKeyIndexes:r,data:o})}const d=decodeLength(t),_=[];for(let e=0;e<d;e++){const e=new PublicKey(guardedSplice(t,0,Ke)),r=guardedSplice(t,0,decodeLength(t)),n=guardedSplice(t,0,decodeLength(t));_.push({accountKey:e,writableIndexes:r,readonlyIndexes:n})}return new MessageV0({header:o,staticAccountKeys:i,recentBlockhash:a,compiledInstructions:u,addressTableLookups:_})}}const je={deserializeMessageVersion(e){const t=e[0],r=t&Ge;return r===t?"legacy":r},deserialize:e=>{const t=je.deserializeMessageVersion(e);if("legacy"===t)return Message.from(e);if(0===t)return MessageV0.deserialize(e);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let qe=function(e){return e[e.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",e[e.PROCESSED=1]="PROCESSED",e[e.TIMED_OUT=2]="TIMED_OUT",e[e.NONCE_INVALID=3]="NONCE_INVALID",e}({});const Je=o.Buffer.alloc(He).fill(0);class TransactionInstruction{constructor(e){this.keys=void 0,this.programId=void 0,this.data=o.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map((({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r}))),programId:this.programId.toJSON(),data:[...this.data]}}}class Transaction{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,e)if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){const{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((e=>e.toJSON())),signers:this.signatures.map((({publicKey:e})=>e.toJSON()))}}add(...e){if(0===e.length)throw new Error("No instructions");return e.forEach((e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new TransactionInstruction(e))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let e,t,r;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let e=0;e<t.length;e++)if(void 0===t[e].programId)throw new Error(`Transaction instruction index ${e} has undefined program id`);const n=[],o=[];t.forEach((e=>{e.keys.forEach((e=>{o.push({...e})}));const t=e.programId.toString();n.includes(t)||n.push(t)})),n.forEach((e=>{o.push({pubkey:new PublicKey(e),isSigner:!1,isWritable:!1})}));const i=[];o.forEach((e=>{const t=e.pubkey.toString(),r=i.findIndex((e=>e.pubkey.toString()===t));r>-1?(i[r].isWritable=i[r].isWritable||e.isWritable,i[r].isSigner=i[r].isSigner||e.isSigner):i.push(e)})),i.sort((function(e,t){if(e.isSigner!==t.isSigner)return e.isSigner?-1:1;if(e.isWritable!==t.isWritable)return e.isWritable?-1:1;return e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",{localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"})}));const s=i.findIndex((e=>e.pubkey.equals(r)));if(s>-1){const[e]=i.splice(s,1);e.isSigner=!0,e.isWritable=!0,i.unshift(e)}else i.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const e of this.signatures){const t=i.findIndex((t=>t.pubkey.equals(e.publicKey)));if(!(t>-1))throw new Error(`unknown signer: ${e.publicKey.toString()}`);i[t].isSigner||(i[t].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,c=0,u=0;const d=[],_=[];i.forEach((({pubkey:e,isSigner:t,isWritable:r})=>{t?(d.push(e.toString()),a+=1,r||(c+=1)):(_.push(e.toString()),r||(u+=1))}));const l=d.concat(_),R=t.map((e=>{const{data:t,programId:r}=e;return{programIdIndex:l.indexOf(r.toString()),accounts:e.keys.map((e=>l.indexOf(e.pubkey.toString()))),data:Z().encode(t)}}));return R.forEach((e=>{index_browser_esm_assert(e.programIdIndex>=0),e.accounts.forEach((e=>index_browser_esm_assert(e>=0)))})),new Message({header:{numRequiredSignatures:a,numReadonlySignedAccounts:c,numReadonlyUnsignedAccounts:u},accountKeys:l,recentBlockhash:e,instructions:R})}_compile(){const e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){if(this.signatures.every(((e,r)=>t[r].equals(e.publicKey))))return e}return this.signatures=t.map((e=>({signature:null,publicKey:e}))),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw new Error("No signers");const t=new Set;this.signatures=e.filter((e=>{const r=e.toString();return!t.has(r)&&(t.add(r),!0)})).map((e=>({signature:null,publicKey:e})))}sign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const n of e){const e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}this.signatures=r.map((e=>({signature:null,publicKey:e.publicKey})));const n=this._compile();this._partialSign(n,...r)}partialSign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const n of e){const e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}const n=this._compile();this._partialSign(n,...r)}_partialSign(e,...t){const r=e.serialize();t.forEach((e=>{const t=sign(r,e.secretKey);this._addSignature(e.publicKey,toBuffer(t))}))}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){index_browser_esm_assert(64===t.length);const r=this.signatures.findIndex((t=>e.equals(t.publicKey)));if(r<0)throw new Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=o.Buffer.from(t)}verifySignatures(e=!0){return!this._getMessageSignednessErrors(this.serializeMessage(),e)}_getMessageSignednessErrors(e,t){const r={};for(const{signature:n,publicKey:o}of this.signatures)null===n?t&&(r.missing||=[]).push(o):Ue(n,e,o.toBytes())||(r.invalid||=[]).push(o);return r.invalid||r.missing?r:void 0}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),n=this.serializeMessage();if(r){const e=this._getMessageSignednessErrors(n,t);if(e){let t="Signature verification failed.";throw e.invalid&&(t+=`\nInvalid signature for public key${1===e.invalid.length?"":"(s)"} [\`${e.invalid.map((e=>e.toBase58())).join("`, `")}\`].`),e.missing&&(t+=`\nMissing signature for public key${1===e.missing.length?"":"(s)"} [\`${e.missing.map((e=>e.toBase58())).join("`, `")}\`].`),new Error(t)}}return this._serialize(n)}_serialize(e){const{signatures:t}=this,r=[];encodeLength(r,t.length);const n=r.length+64*t.length+e.length,i=o.Buffer.alloc(n);return index_browser_esm_assert(t.length<256),o.Buffer.from(r).copy(i,0),t.forEach((({signature:e},t)=>{null!==e&&(index_browser_esm_assert(64===e.length,"signature has invalid length"),o.Buffer.from(e).copy(i,r.length+64*t))})),e.copy(i,r.length+64*t.length),index_browser_esm_assert(i.length<=$e,`Transaction too large: ${i.length} > ${$e}`),i}get keys(){return index_browser_esm_assert(1===this.instructions.length),this.instructions[0].keys.map((e=>e.pubkey))}get programId(){return index_browser_esm_assert(1===this.instructions.length),this.instructions[0].programId}get data(){return index_browser_esm_assert(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e];const r=decodeLength(t);let n=[];for(let e=0;e<r;e++){const e=guardedSplice(t,0,He);n.push(Z().encode(o.Buffer.from(e)))}return Transaction.populate(Message.from(t),n)}static populate(e,t=[]){const r=new Transaction;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach(((t,n)=>{const o={signature:t==Z().encode(Je)?null:Z().decode(t),publicKey:e.accountKeys[n]};r.signatures.push(o)})),e.instructions.forEach((t=>{const n=t.accounts.map((t=>{const n=e.accountKeys[t];return{pubkey:n,isSigner:r.signatures.some((e=>e.publicKey.toString()===n.toString()))||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}}));r.instructions.push(new TransactionInstruction({keys:n,programId:e.accountKeys[t.programIdIndex],data:Z().decode(t.data)}))})),r._message=e,r._json=r.toJSON(),r}}class TransactionMessage{constructor(e){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=e.payerKey,this.instructions=e.instructions,this.recentBlockhash=e.recentBlockhash}static decompile(e,t){const{header:r,compiledInstructions:n,recentBlockhash:o}=e,{numRequiredSignatures:i,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:a}=r,c=i-s;index_browser_esm_assert(c>0,"Message header is invalid");const u=e.staticAccountKeys.length-i-a;index_browser_esm_assert(u>=0,"Message header is invalid");const d=e.getAccountKeys(t),_=d.get(0);if(void 0===_)throw new Error("Failed to decompile message because no account keys were found");const l=[];for(const e of n){const t=[];for(const n of e.accountKeyIndexes){const e=d.get(n);if(void 0===e)throw new Error(`Failed to find key for account key index ${n}`);let o;o=n<i?n<c:n<d.staticAccountKeys.length?n-i<u:n-d.staticAccountKeys.length<d.accountKeysFromLookups.writable.length,t.push({pubkey:e,isSigner:n<r.numRequiredSignatures,isWritable:o})}const n=d.get(e.programIdIndex);if(void 0===n)throw new Error(`Failed to find program id for program id index ${e.programIdIndex}`);l.push(new TransactionInstruction({programId:n,data:toBuffer(e.data),keys:t}))}return new TransactionMessage({payerKey:_,instructions:l,recentBlockhash:o})}compileToLegacyMessage(){return Message.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(e){return MessageV0.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:e})}}class VersionedTransaction{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)index_browser_esm_assert(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(He));this.signatures=t}this.message=e}serialize(){const e=this.message.serialize(),t=Array();encodeLength(t,this.signatures.length);const r=oe.struct([oe.blob(t.length,"encodedSignaturesLength"),oe.seq(signature(),this.signatures.length,"signatures"),oe.blob(e.length,"serializedMessage")]),n=new Uint8Array(2048),o=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},n);return n.slice(0,o)}static deserialize(e){let t=[...e];const r=[],n=decodeLength(t);for(let e=0;e<n;e++)r.push(new Uint8Array(guardedSplice(t,0,He)));const o=je.deserialize(new Uint8Array(t));return new VersionedTransaction(o,r)}sign(e){const t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const n of e){const e=r.findIndex((e=>e.equals(n.publicKey)));index_browser_esm_assert(e>=0,`Cannot sign with non signer key ${n.publicKey.toBase58()}`),this.signatures[e]=sign(t,n.secretKey)}}addSignature(e,t){index_browser_esm_assert(64===t.byteLength,"Signature must be 64 bytes long");const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex((t=>t.equals(e)));index_browser_esm_assert(r>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[r]=t}}const Xe=new PublicKey("SysvarC1ock11111111111111111111111111111111"),Ze=new PublicKey("SysvarEpochSchedu1e111111111111111111111111"),Qe=new PublicKey("Sysvar1nstructions1111111111111111111111111"),et=new PublicKey("SysvarRecentB1ockHashes11111111111111111111"),tt=new PublicKey("SysvarRent111111111111111111111111111111111"),rt=new PublicKey("SysvarRewards111111111111111111111111111111"),nt=new PublicKey("SysvarS1otHashes111111111111111111111111111"),ot=new PublicKey("SysvarS1otHistory11111111111111111111111111"),it=new PublicKey("SysvarStakeHistory1111111111111111111111111");async function sendAndConfirmTransaction(e,t,r,n){const o=n&&{skipPreflight:n.skipPreflight,preflightCommitment:n.preflightCommitment||n.commitment,maxRetries:n.maxRetries,minContextSlot:n.minContextSlot},i=await e.sendTransaction(t,r,o);let s;if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)s=(await e.confirmTransaction({abortSignal:n?.abortSignal,signature:i,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},n&&n.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){const{nonceInstruction:r}=t.nonceInfo,o=r.keys[0].pubkey;s=(await e.confirmTransaction({abortSignal:n?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:o,nonceValue:t.nonceInfo.nonce,signature:i},n&&n.commitment)).value}else null!=n?.abortSignal&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),s=(await e.confirmTransaction(i,n&&n.commitment)).value;if(s.err)throw new Error(`Transaction ${i} failed (${JSON.stringify(s)})`);return i}function sleep(e){return new Promise((t=>setTimeout(t,e)))}function encodeData(e,t){const r=e.layout.span>=0?e.layout.span:getAlloc(e,t),n=o.Buffer.alloc(r),i=Object.assign({instruction:e.index},t);return e.layout.encode(i,n),n}function decodeData$1(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.instruction!==e.index)throw new Error(`invalid instruction; instruction index mismatch ${r.instruction} != ${e.index}`);return r}const st=oe.nu64("lamportsPerSignature"),at=oe.struct([oe.u32("version"),oe.u32("state"),publicKey("authorizedPubkey"),publicKey("nonce"),oe.struct([st],"feeCalculator")]),ct=at.span;class NonceAccount{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=at.decode(toBuffer(e),0);return new NonceAccount({authorizedPubkey:new PublicKey(t.authorizedPubkey),nonce:new PublicKey(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const ut=(dt=8,e=>{const t=(0,oe.blob)(dt,e),{encode:r,decode:n}=(e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}))(t),i=t;return i.decode=(e,t)=>{const r=n(e,t);return(0,ie.toBigIntLE)(o.Buffer.from(r))},i.encode=(e,t,n)=>{const o=(0,ie.toBufferLE)(e,dt);return r(o,t,n)},i});var dt;class SystemInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=oe.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(_t))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a SystemInstruction");return r}static decodeCreateAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t,space:r,programId:n}=decodeData$1(_t.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new PublicKey(n)}}static decodeTransfer(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t}=decodeData$1(_t.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t,seed:r,programId:n}=decodeData$1(_t.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new PublicKey(n)}}static decodeAllocate(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{space:t}=decodeData$1(_t.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,space:n,programId:o}=decodeData$1(_t.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new PublicKey(t),seed:r,space:n,programId:new PublicKey(o)}}static decodeAssign(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{programId:t}=decodeData$1(_t.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new PublicKey(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,programId:n}=decodeData$1(_t.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new PublicKey(t),seed:r,programId:new PublicKey(n)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{base:t,seed:r,lamports:n,space:o,programId:i}=decodeData$1(_t.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new PublicKey(t),seed:r,lamports:n,space:o,programId:new PublicKey(i)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{authorized:t}=decodeData$1(_t.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new PublicKey(t)}}static decodeNonceAdvance(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),decodeData$1(_t.AdvanceNonceAccount,e.data),{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=decodeData$1(_t.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t}=decodeData$1(_t.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new PublicKey(t)}}static checkProgramId(e){if(!e.equals(SystemProgram.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const _t=Object.freeze({Create:{index:0,layout:oe.struct([oe.u32("instruction"),oe.ns64("lamports"),oe.ns64("space"),publicKey("programId")])},Assign:{index:1,layout:oe.struct([oe.u32("instruction"),publicKey("programId")])},Transfer:{index:2,layout:oe.struct([oe.u32("instruction"),ut("lamports")])},CreateWithSeed:{index:3,layout:oe.struct([oe.u32("instruction"),publicKey("base"),rustString("seed"),oe.ns64("lamports"),oe.ns64("space"),publicKey("programId")])},AdvanceNonceAccount:{index:4,layout:oe.struct([oe.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:oe.struct([oe.u32("instruction"),oe.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:oe.struct([oe.u32("instruction"),publicKey("authorized")])},AuthorizeNonceAccount:{index:7,layout:oe.struct([oe.u32("instruction"),publicKey("authorized")])},Allocate:{index:8,layout:oe.struct([oe.u32("instruction"),oe.ns64("space")])},AllocateWithSeed:{index:9,layout:oe.struct([oe.u32("instruction"),publicKey("base"),rustString("seed"),oe.ns64("space"),publicKey("programId")])},AssignWithSeed:{index:10,layout:oe.struct([oe.u32("instruction"),publicKey("base"),rustString("seed"),publicKey("programId")])},TransferWithSeed:{index:11,layout:oe.struct([oe.u32("instruction"),ut("lamports"),rustString("seed"),publicKey("programId")])},UpgradeNonceAccount:{index:12,layout:oe.struct([oe.u32("instruction")])}});class SystemProgram{constructor(){}static createAccount(e){const t=encodeData(_t.Create,{lamports:e.lamports,space:e.space,programId:toBuffer(e.programId.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;if("basePubkey"in e){t=encodeData(_t.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}else{t=encodeData(_t.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;if("basePubkey"in e){t=encodeData(_t.AssignWithSeed,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=encodeData(_t.Assign,{programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=encodeData(_t.CreateWithSeed,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:toBuffer(e.programId.toBuffer())});let r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new TransactionInstruction({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){const t=new Transaction;"basePubkey"in e&&"seed"in e?t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:ct,programId:this.programId})):t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:ct,programId:this.programId}));const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){const t=encodeData(_t.InitializeNonceAccount,{authorized:toBuffer(e.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:et,isSigner:!1,isWritable:!1},{pubkey:tt,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new TransactionInstruction(r)}static nonceAdvance(e){const t=encodeData(_t.AdvanceNonceAccount),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:et,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new TransactionInstruction(r)}static nonceWithdraw(e){const t=encodeData(_t.WithdrawNonceAccount,{lamports:e.lamports});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:et,isSigner:!1,isWritable:!1},{pubkey:tt,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){const t=encodeData(_t.AuthorizeNonceAccount,{authorized:toBuffer(e.newAuthorizedPubkey.toBuffer())});return new TransactionInstruction({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;if("basePubkey"in e){t=encodeData(_t.AllocateWithSeed,{base:toBuffer(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:toBuffer(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=encodeData(_t.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new TransactionInstruction({keys:r,programId:this.programId,data:t})}}SystemProgram.programId=new PublicKey("11111111111111111111111111111111");const lt=$e-300;class Loader{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/Loader.chunkSize)+1+1)}static async load(e,t,r,n,i){{const o=await e.getMinimumBalanceForRentExemption(i.length),s=await e.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==s){if(s.executable)return console.error("Program load failed, account is already executable"),!1;s.data.length!==i.length&&(a=a||new Transaction,a.add(SystemProgram.allocate({accountPubkey:r.publicKey,space:i.length}))),s.owner.equals(n)||(a=a||new Transaction,a.add(SystemProgram.assign({accountPubkey:r.publicKey,programId:n}))),s.lamports<o&&(a=a||new Transaction,a.add(SystemProgram.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:o-s.lamports})))}else a=(new Transaction).add(SystemProgram.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:o>0?o:1,space:i.length,programId:n}));null!==a&&await sendAndConfirmTransaction(e,a,[t,r],{commitment:"confirmed"})}const s=oe.struct([oe.u32("instruction"),oe.u32("offset"),oe.u32("bytesLength"),oe.u32("bytesLengthPadding"),oe.seq(oe.u8("byte"),oe.offset(oe.u32(),-8),"bytes")]),a=Loader.chunkSize;let c=0,u=i,d=[];for(;u.length>0;){const i=u.slice(0,a),_=o.Buffer.alloc(a+16);s.encode({instruction:0,offset:c,bytes:i,bytesLength:0,bytesLengthPadding:0},_);const l=(new Transaction).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:n,data:_});if(d.push(sendAndConfirmTransaction(e,l,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")){const e=4;await sleep(1e3/e)}c+=a,u=u.slice(a)}await Promise.all(d);{const i=oe.struct([oe.u32("instruction")]),s=o.Buffer.alloc(i.span);i.encode({instruction:1},s);const a=(new Transaction).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:tt,isSigner:!1,isWritable:!1}],programId:n,data:s}),c="processed",u=await e.sendTransaction(a,[t,r],{preflightCommitment:c}),{context:d,value:_}=await e.confirmTransaction({signature:u,lastValidBlockHeight:a.lastValidBlockHeight,blockhash:a.recentBlockhash},c);if(_.err)throw new Error(`Transaction ${u} failed (${JSON.stringify(_)})`);for(;;){try{if(await e.getSlot({commitment:c})>d.slot)break}catch{}await new Promise((e=>setTimeout(e,Math.round(200))))}}return!0}}Loader.chunkSize=lt;const Rt=new PublicKey("BPFLoader2111111111111111111111111111111111");class BpfLoader{static getMinNumSignatures(e){return Loader.getMinNumSignatures(e)}static load(e,t,r,n,o){return Loader.load(e,t,r,o,n)}}function getDefaultExportFromCjs(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Et=Object.prototype.toString,ht=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};function stringify(e,t){var r,n,o,i,s,a,c;if(!0===e)return"true";if(!1===e)return"false";switch(typeof e){case"object":if(null===e)return null;if(e.toJSON&&"function"==typeof e.toJSON)return stringify(e.toJSON(),t);if("[object Array]"===(c=Et.call(e))){for(o="[",n=e.length-1,r=0;r<n;r++)o+=stringify(e[r],!0)+",";return n>-1&&(o+=stringify(e[r],!0)),o+"]"}if("[object Object]"===c){for(n=(i=ht(e).sort()).length,o="",r=0;r<n;)void 0!==(a=stringify(e[s=i[r]],!1))&&(o&&(o+=","),o+=JSON.stringify(s)+":"+a),r++;return"{"+o+"}"}return JSON.stringify(e);case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(e);default:return isFinite(e)?e:null}}var At=getDefaultExportFromCjs((function(e){var t=stringify(e,!1);if(void 0!==t)return""+t}));function trailingZeros(e){let t=0;for(;e>1;)e/=2,t++;return t}class EpochSchedule{constructor(e,t,r,n,o){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=n,this.firstNormalSlot=o}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const t=trailingZeros(function nextPowerOfTwo(e){return 0===e?1:(e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,1+(e|=e>>32))}(e+32+1))-trailingZeros(32)-1;return[t,e-(this.getSlotsInEpoch(t)-32)]}{const t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?32*(Math.pow(2,e)-1):(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+trailingZeros(32)):this.slotsPerEpoch}}class SendTransactionError extends Error{constructor(e,t){super(e),this.logs=void 0,this.logs=t}}const St={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class SolanaJSONRPCError extends Error{constructor({code:e,message:t,data:r},n){super(null!=n?`${n}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}var gt=globalThis.fetch;class RpcWebSocketClient extends ue.A{constructor(e,t,r){super((e=>{const r=(0,de.A)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return this.underlyingSocket="socket"in r?r.socket:r,r}),e,t,r),this.underlyingSocket=void 0}call(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.call(...e):Promise.reject(new Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.notify(...e):Promise.reject(new Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class AddressLookupTableAccount{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){const e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){const t=function decodeData(e,t){let r;try{r=e.layout.decode(t)}catch(e){throw new Error("invalid instruction; "+e)}if(r.typeIndex!==e.index)throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(Ot,e),r=e.length-56;index_browser_esm_assert(r>=0,"lookup table is invalid"),index_browser_esm_assert(r%32==0,"lookup table is invalid");const n=r/32,{addresses:o}=oe.struct([oe.seq(publicKey(),n,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new PublicKey(t.authority[0]):void 0,addresses:o.map((e=>new PublicKey(e)))}}}const Ot={index:1,layout:oe.struct([oe.u32("typeIndex"),ut("deactivationSlot"),oe.nu64("lastExtendedSlot"),oe.u8("lastExtendedStartIndex"),oe.u8(),oe.seq(publicKey(),oe.offset(oe.u8(),-1),"authority")])},ft=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;const mt=(0,se.au)((0,se.KJ)(PublicKey),(0,se.Yj)(),(e=>new PublicKey(e))),pt=(0,se.PV)([(0,se.Yj)(),(0,se.eu)("base64")]),Nt=(0,se.au)((0,se.KJ)(o.Buffer),pt,(e=>o.Buffer.from(e[0],"base64"))),It=3e4;function extractCommitmentFromConfig(e){let t,r;if("string"==typeof e)t=e;else if(e){const{commitment:n,...o}=e;t=n,r=o}return{commitment:t,config:r}}function createRpcResult(e){return(0,se.KC)([(0,se.NW)({jsonrpc:(0,se.eu)("2.0"),id:(0,se.Yj)(),result:e}),(0,se.NW)({jsonrpc:(0,se.eu)("2.0"),id:(0,se.Yj)(),error:(0,se.NW)({code:(0,se.L5)(),message:(0,se.Yj)(),data:(0,se.lq)((0,se.bz)())})})])}const Tt=createRpcResult((0,se.L5)());function jsonRpcResult(e){return(0,se.au)(createRpcResult(e),Tt,(t=>"error"in t?t:{...t,result:(0,se.vt)(t.result,e)}))}function jsonRpcResultAndContext(e){return jsonRpcResult((0,se.NW)({context:(0,se.NW)({slot:(0,se.ai)()}),value:e}))}function notificationResultAndContext(e){return(0,se.NW)({context:(0,se.NW)({slot:(0,se.ai)()}),value:e})}function versionedMessageFromResponse(e,t){return 0===e?new MessageV0({header:t.header,staticAccountKeys:t.accountKeys.map((e=>new PublicKey(e))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:Z().decode(e.data)}))),addressTableLookups:t.addressTableLookups}):new Message(t)}const bt=(0,se.NW)({foundation:(0,se.ai)(),foundationTerm:(0,se.ai)(),initial:(0,se.ai)(),taper:(0,se.ai)(),terminal:(0,se.ai)()}),yt=jsonRpcResult((0,se.YO)((0,se.me)((0,se.NW)({epoch:(0,se.ai)(),effectiveSlot:(0,se.ai)(),amount:(0,se.ai)(),postBalance:(0,se.ai)(),commission:(0,se.lq)((0,se.me)((0,se.ai)()))})))),Ct=(0,se.YO)((0,se.NW)({slot:(0,se.ai)(),prioritizationFee:(0,se.ai)()})),wt=(0,se.NW)({total:(0,se.ai)(),validator:(0,se.ai)(),foundation:(0,se.ai)(),epoch:(0,se.ai)()}),Lt=(0,se.NW)({epoch:(0,se.ai)(),slotIndex:(0,se.ai)(),slotsInEpoch:(0,se.ai)(),absoluteSlot:(0,se.ai)(),blockHeight:(0,se.lq)((0,se.ai)()),transactionCount:(0,se.lq)((0,se.ai)())}),kt=(0,se.NW)({slotsPerEpoch:(0,se.ai)(),leaderScheduleSlotOffset:(0,se.ai)(),warmup:(0,se.zM)(),firstNormalEpoch:(0,se.ai)(),firstNormalSlot:(0,se.ai)()}),Dt=(0,se.g1)((0,se.Yj)(),(0,se.YO)((0,se.ai)())),Pt=(0,se.me)((0,se.KC)([(0,se.NW)({}),(0,se.Yj)()])),xt=(0,se.NW)({err:Pt}),vt=(0,se.eu)("receivedSignature"),Bt=(0,se.NW)({"solana-core":(0,se.Yj)(),"feature-set":(0,se.lq)((0,se.ai)())}),Ut=jsonRpcResultAndContext((0,se.NW)({err:(0,se.me)((0,se.KC)([(0,se.NW)({}),(0,se.Yj)()])),logs:(0,se.me)((0,se.YO)((0,se.Yj)())),accounts:(0,se.lq)((0,se.me)((0,se.YO)((0,se.me)((0,se.NW)({executable:(0,se.zM)(),owner:(0,se.Yj)(),lamports:(0,se.ai)(),data:(0,se.YO)((0,se.Yj)()),rentEpoch:(0,se.lq)((0,se.ai)())}))))),unitsConsumed:(0,se.lq)((0,se.ai)()),returnData:(0,se.lq)((0,se.me)((0,se.NW)({programId:(0,se.Yj)(),data:(0,se.PV)([(0,se.Yj)(),(0,se.eu)("base64")])})))})),Mt=jsonRpcResultAndContext((0,se.NW)({byIdentity:(0,se.g1)((0,se.Yj)(),(0,se.YO)((0,se.ai)())),range:(0,se.NW)({firstSlot:(0,se.ai)(),lastSlot:(0,se.ai)()})}));const Ft=jsonRpcResult(bt),zt=jsonRpcResult(wt),Kt=jsonRpcResult(Ct),Vt=jsonRpcResult(Lt),Wt=jsonRpcResult(kt),$t=jsonRpcResult(Dt),Gt=jsonRpcResult((0,se.ai)()),Ht=jsonRpcResultAndContext((0,se.NW)({total:(0,se.ai)(),circulating:(0,se.ai)(),nonCirculating:(0,se.ai)(),nonCirculatingAccounts:(0,se.YO)(mt)})),Yt=(0,se.NW)({amount:(0,se.Yj)(),uiAmount:(0,se.me)((0,se.ai)()),decimals:(0,se.ai)(),uiAmountString:(0,se.lq)((0,se.Yj)())}),jt=jsonRpcResultAndContext((0,se.YO)((0,se.NW)({address:mt,amount:(0,se.Yj)(),uiAmount:(0,se.me)((0,se.ai)()),decimals:(0,se.ai)(),uiAmountString:(0,se.lq)((0,se.Yj)())}))),qt=jsonRpcResultAndContext((0,se.YO)((0,se.NW)({pubkey:mt,account:(0,se.NW)({executable:(0,se.zM)(),owner:mt,lamports:(0,se.ai)(),data:Nt,rentEpoch:(0,se.ai)()})}))),Jt=(0,se.NW)({program:(0,se.Yj)(),parsed:(0,se.L5)(),space:(0,se.ai)()}),Xt=jsonRpcResultAndContext((0,se.YO)((0,se.NW)({pubkey:mt,account:(0,se.NW)({executable:(0,se.zM)(),owner:mt,lamports:(0,se.ai)(),data:Jt,rentEpoch:(0,se.ai)()})}))),Zt=jsonRpcResultAndContext((0,se.YO)((0,se.NW)({lamports:(0,se.ai)(),address:mt}))),Qt=(0,se.NW)({executable:(0,se.zM)(),owner:mt,lamports:(0,se.ai)(),data:Nt,rentEpoch:(0,se.ai)()}),er=(0,se.NW)({pubkey:mt,account:Qt}),tr=(0,se.au)((0,se.KC)([(0,se.KJ)(o.Buffer),Jt]),(0,se.KC)([pt,Jt]),(e=>Array.isArray(e)?(0,se.vt)(e,Nt):e)),rr=(0,se.NW)({executable:(0,se.zM)(),owner:mt,lamports:(0,se.ai)(),data:tr,rentEpoch:(0,se.ai)()}),nr=(0,se.NW)({pubkey:mt,account:rr}),or=(0,se.NW)({state:(0,se.KC)([(0,se.eu)("active"),(0,se.eu)("inactive"),(0,se.eu)("activating"),(0,se.eu)("deactivating")]),active:(0,se.ai)(),inactive:(0,se.ai)()}),ir=jsonRpcResult((0,se.YO)((0,se.NW)({signature:(0,se.Yj)(),slot:(0,se.ai)(),err:Pt,memo:(0,se.me)((0,se.Yj)()),blockTime:(0,se.lq)((0,se.me)((0,se.ai)()))}))),sr=jsonRpcResult((0,se.YO)((0,se.NW)({signature:(0,se.Yj)(),slot:(0,se.ai)(),err:Pt,memo:(0,se.me)((0,se.Yj)()),blockTime:(0,se.lq)((0,se.me)((0,se.ai)()))}))),ar=(0,se.NW)({subscription:(0,se.ai)(),result:notificationResultAndContext(Qt)}),cr=(0,se.NW)({pubkey:mt,account:Qt}),ur=(0,se.NW)({subscription:(0,se.ai)(),result:notificationResultAndContext(cr)}),dr=(0,se.NW)({parent:(0,se.ai)(),slot:(0,se.ai)(),root:(0,se.ai)()}),_r=(0,se.NW)({subscription:(0,se.ai)(),result:dr}),lr=(0,se.KC)([(0,se.NW)({type:(0,se.KC)([(0,se.eu)("firstShredReceived"),(0,se.eu)("completed"),(0,se.eu)("optimisticConfirmation"),(0,se.eu)("root")]),slot:(0,se.ai)(),timestamp:(0,se.ai)()}),(0,se.NW)({type:(0,se.eu)("createdBank"),parent:(0,se.ai)(),slot:(0,se.ai)(),timestamp:(0,se.ai)()}),(0,se.NW)({type:(0,se.eu)("frozen"),slot:(0,se.ai)(),timestamp:(0,se.ai)(),stats:(0,se.NW)({numTransactionEntries:(0,se.ai)(),numSuccessfulTransactions:(0,se.ai)(),numFailedTransactions:(0,se.ai)(),maxTransactionsPerEntry:(0,se.ai)()})}),(0,se.NW)({type:(0,se.eu)("dead"),slot:(0,se.ai)(),timestamp:(0,se.ai)(),err:(0,se.Yj)()})]),Rr=(0,se.NW)({subscription:(0,se.ai)(),result:lr}),Er=(0,se.NW)({subscription:(0,se.ai)(),result:notificationResultAndContext((0,se.KC)([xt,vt]))}),hr=(0,se.NW)({subscription:(0,se.ai)(),result:(0,se.ai)()}),Ar=(0,se.NW)({pubkey:(0,se.Yj)(),gossip:(0,se.me)((0,se.Yj)()),tpu:(0,se.me)((0,se.Yj)()),rpc:(0,se.me)((0,se.Yj)()),version:(0,se.me)((0,se.Yj)())}),Sr=(0,se.NW)({votePubkey:(0,se.Yj)(),nodePubkey:(0,se.Yj)(),activatedStake:(0,se.ai)(),epochVoteAccount:(0,se.zM)(),epochCredits:(0,se.YO)((0,se.PV)([(0,se.ai)(),(0,se.ai)(),(0,se.ai)()])),commission:(0,se.ai)(),lastVote:(0,se.ai)(),rootSlot:(0,se.me)((0,se.ai)())}),gr=jsonRpcResult((0,se.NW)({current:(0,se.YO)(Sr),delinquent:(0,se.YO)(Sr)})),Or=(0,se.KC)([(0,se.eu)("processed"),(0,se.eu)("confirmed"),(0,se.eu)("finalized")]),fr=(0,se.NW)({slot:(0,se.ai)(),confirmations:(0,se.me)((0,se.ai)()),err:Pt,confirmationStatus:(0,se.lq)(Or)}),mr=jsonRpcResultAndContext((0,se.YO)((0,se.me)(fr))),pr=jsonRpcResult((0,se.ai)()),Nr=(0,se.NW)({accountKey:mt,writableIndexes:(0,se.YO)((0,se.ai)()),readonlyIndexes:(0,se.YO)((0,se.ai)())}),Ir=(0,se.NW)({signatures:(0,se.YO)((0,se.Yj)()),message:(0,se.NW)({accountKeys:(0,se.YO)((0,se.Yj)()),header:(0,se.NW)({numRequiredSignatures:(0,se.ai)(),numReadonlySignedAccounts:(0,se.ai)(),numReadonlyUnsignedAccounts:(0,se.ai)()}),instructions:(0,se.YO)((0,se.NW)({accounts:(0,se.YO)((0,se.ai)()),data:(0,se.Yj)(),programIdIndex:(0,se.ai)()})),recentBlockhash:(0,se.Yj)(),addressTableLookups:(0,se.lq)((0,se.YO)(Nr))})}),Tr=(0,se.NW)({pubkey:mt,signer:(0,se.zM)(),writable:(0,se.zM)(),source:(0,se.lq)((0,se.KC)([(0,se.eu)("transaction"),(0,se.eu)("lookupTable")]))}),br=(0,se.NW)({accountKeys:(0,se.YO)(Tr),signatures:(0,se.YO)((0,se.Yj)())}),yr=(0,se.NW)({parsed:(0,se.L5)(),program:(0,se.Yj)(),programId:mt}),Cr=(0,se.NW)({accounts:(0,se.YO)(mt),data:(0,se.Yj)(),programId:mt}),wr=(0,se.KC)([Cr,yr]),Lr=(0,se.KC)([(0,se.NW)({parsed:(0,se.L5)(),program:(0,se.Yj)(),programId:(0,se.Yj)()}),(0,se.NW)({accounts:(0,se.YO)((0,se.Yj)()),data:(0,se.Yj)(),programId:(0,se.Yj)()})]),kr=(0,se.au)(wr,Lr,(e=>"accounts"in e?(0,se.vt)(e,Cr):(0,se.vt)(e,yr))),Dr=(0,se.NW)({signatures:(0,se.YO)((0,se.Yj)()),message:(0,se.NW)({accountKeys:(0,se.YO)(Tr),instructions:(0,se.YO)(kr),recentBlockhash:(0,se.Yj)(),addressTableLookups:(0,se.lq)((0,se.me)((0,se.YO)(Nr)))})}),Pr=(0,se.NW)({accountIndex:(0,se.ai)(),mint:(0,se.Yj)(),owner:(0,se.lq)((0,se.Yj)()),uiTokenAmount:Yt}),xr=(0,se.NW)({writable:(0,se.YO)(mt),readonly:(0,se.YO)(mt)}),vr=(0,se.NW)({err:Pt,fee:(0,se.ai)(),innerInstructions:(0,se.lq)((0,se.me)((0,se.YO)((0,se.NW)({index:(0,se.ai)(),instructions:(0,se.YO)((0,se.NW)({accounts:(0,se.YO)((0,se.ai)()),data:(0,se.Yj)(),programIdIndex:(0,se.ai)()}))})))),preBalances:(0,se.YO)((0,se.ai)()),postBalances:(0,se.YO)((0,se.ai)()),logMessages:(0,se.lq)((0,se.me)((0,se.YO)((0,se.Yj)()))),preTokenBalances:(0,se.lq)((0,se.me)((0,se.YO)(Pr))),postTokenBalances:(0,se.lq)((0,se.me)((0,se.YO)(Pr))),loadedAddresses:(0,se.lq)(xr),computeUnitsConsumed:(0,se.lq)((0,se.ai)())}),Br=(0,se.NW)({err:Pt,fee:(0,se.ai)(),innerInstructions:(0,se.lq)((0,se.me)((0,se.YO)((0,se.NW)({index:(0,se.ai)(),instructions:(0,se.YO)(kr)})))),preBalances:(0,se.YO)((0,se.ai)()),postBalances:(0,se.YO)((0,se.ai)()),logMessages:(0,se.lq)((0,se.me)((0,se.YO)((0,se.Yj)()))),preTokenBalances:(0,se.lq)((0,se.me)((0,se.YO)(Pr))),postTokenBalances:(0,se.lq)((0,se.me)((0,se.YO)(Pr))),loadedAddresses:(0,se.lq)(xr),computeUnitsConsumed:(0,se.lq)((0,se.ai)())}),Ur=(0,se.KC)([(0,se.eu)(0),(0,se.eu)("legacy")]),Mr=(0,se.NW)({pubkey:(0,se.Yj)(),lamports:(0,se.ai)(),postBalance:(0,se.me)((0,se.ai)()),rewardType:(0,se.me)((0,se.Yj)()),commission:(0,se.lq)((0,se.me)((0,se.ai)()))}),Fr=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),transactions:(0,se.YO)((0,se.NW)({transaction:Ir,meta:(0,se.me)(vr),version:(0,se.lq)(Ur)})),rewards:(0,se.lq)((0,se.YO)(Mr)),blockTime:(0,se.me)((0,se.ai)()),blockHeight:(0,se.me)((0,se.ai)())}))),zr=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),rewards:(0,se.lq)((0,se.YO)(Mr)),blockTime:(0,se.me)((0,se.ai)()),blockHeight:(0,se.me)((0,se.ai)())}))),Kr=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),transactions:(0,se.YO)((0,se.NW)({transaction:br,meta:(0,se.me)(vr),version:(0,se.lq)(Ur)})),rewards:(0,se.lq)((0,se.YO)(Mr)),blockTime:(0,se.me)((0,se.ai)()),blockHeight:(0,se.me)((0,se.ai)())}))),Vr=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),transactions:(0,se.YO)((0,se.NW)({transaction:Dr,meta:(0,se.me)(Br),version:(0,se.lq)(Ur)})),rewards:(0,se.lq)((0,se.YO)(Mr)),blockTime:(0,se.me)((0,se.ai)()),blockHeight:(0,se.me)((0,se.ai)())}))),Wr=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),transactions:(0,se.YO)((0,se.NW)({transaction:br,meta:(0,se.me)(Br),version:(0,se.lq)(Ur)})),rewards:(0,se.lq)((0,se.YO)(Mr)),blockTime:(0,se.me)((0,se.ai)()),blockHeight:(0,se.me)((0,se.ai)())}))),$r=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),rewards:(0,se.lq)((0,se.YO)(Mr)),blockTime:(0,se.me)((0,se.ai)()),blockHeight:(0,se.me)((0,se.ai)())}))),Gr=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),transactions:(0,se.YO)((0,se.NW)({transaction:Ir,meta:(0,se.me)(vr)})),rewards:(0,se.lq)((0,se.YO)(Mr)),blockTime:(0,se.me)((0,se.ai)())}))),Hr=jsonRpcResult((0,se.me)((0,se.NW)({blockhash:(0,se.Yj)(),previousBlockhash:(0,se.Yj)(),parentSlot:(0,se.ai)(),signatures:(0,se.YO)((0,se.Yj)()),blockTime:(0,se.me)((0,se.ai)())}))),Yr=jsonRpcResult((0,se.me)((0,se.NW)({slot:(0,se.ai)(),meta:(0,se.me)(vr),blockTime:(0,se.lq)((0,se.me)((0,se.ai)())),transaction:Ir,version:(0,se.lq)(Ur)}))),jr=jsonRpcResult((0,se.me)((0,se.NW)({slot:(0,se.ai)(),transaction:Dr,meta:(0,se.me)(Br),blockTime:(0,se.lq)((0,se.me)((0,se.ai)())),version:(0,se.lq)(Ur)}))),qr=jsonRpcResultAndContext((0,se.NW)({blockhash:(0,se.Yj)(),feeCalculator:(0,se.NW)({lamportsPerSignature:(0,se.ai)()})})),Jr=jsonRpcResultAndContext((0,se.NW)({blockhash:(0,se.Yj)(),lastValidBlockHeight:(0,se.ai)()})),Xr=jsonRpcResultAndContext((0,se.zM)()),Zr=(0,se.NW)({slot:(0,se.ai)(),numTransactions:(0,se.ai)(),numSlots:(0,se.ai)(),samplePeriodSecs:(0,se.ai)()}),Qr=jsonRpcResult((0,se.YO)(Zr)),en=jsonRpcResultAndContext((0,se.me)((0,se.NW)({feeCalculator:(0,se.NW)({lamportsPerSignature:(0,se.ai)()})}))),tn=jsonRpcResult((0,se.Yj)()),rn=jsonRpcResult((0,se.Yj)()),nn=(0,se.NW)({err:Pt,logs:(0,se.YO)((0,se.Yj)()),signature:(0,se.Yj)()}),on=(0,se.NW)({result:notificationResultAndContext(nn),subscription:(0,se.ai)()}),sn={"solana-client":"js/0.0.0-development"};class Connection{constructor(e,t){let r,n,o,i,s,a;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{const e={};return async t=>{const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgs([],r,void 0,n),i=At(o);return e[i]=e[i]??(async()=>{try{const e=await this._rpcRequest("getBlockHeight",o),t=(0,se.vt)(e,jsonRpcResult((0,se.ai)()));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get block height information");return t.result}finally{delete e[i]}})(),await e[i]}})(),t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,r=t.wsEndpoint,n=t.httpHeaders,o=t.fetch,i=t.fetchMiddleware,s=t.disableRetryOnRateLimit,a=t.httpAgent),this._rpcEndpoint=function assertEndpointUrl(e){if(!1===/^https?:/.test(e))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=r||function makeWebsocketUrl(e){const t=e.match(ft);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);const[r,n,o,i]=t,s=e.startsWith("https:")?"wss:":"ws:",a=null==o?null:parseInt(o.slice(1),10);return`${s}//${n}${null==a?"":`:${a+1}`}${i}`}(e),this._rpcClient=function createRpcClient(e,t,r,n,o,i){const s=r||gt;let a;return null!=i&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),n&&(a=async(e,t)=>{const r=await new Promise(((r,o)=>{try{n(e,t,((e,t)=>r([e,t])))}catch(e){o(e)}}));return await s(...r)}),new(ce())((async(r,n)=>{const i={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},sn)};try{let t,r=5,c=500;for(;t=a?await a(e,i):await s(e,i),429===t.status&&!0!==o&&(r-=1,0!==r);)console.error(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${c}ms delay...`),await sleep(c),c*=2;const u=await t.text();t.ok?n(null,u):n(new Error(`${t.status} ${t.statusText}: ${u}`))}catch(e){e instanceof Error&&n(e)}}),{})}(e,n,o,i,s,a),this._rpcRequest=function createRpcRequest(e){return(t,r)=>new Promise(((n,o)=>{e.request(t,r,((e,t)=>{e?o(e):n(t)}))}))}(this._rpcClient),this._rpcBatchRequest=function createRpcBatchRequest(e){return t=>new Promise(((r,n)=>{0===t.length&&r([]);const o=t.map((t=>e.request(t.methodName,t.args)));e.request(o,((e,t)=>{e?n(e):r(t)}))}))}(this._rpcClient),this._rpcWebSocket=new RpcWebSocketClient(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgs([e.toBase58()],r,void 0,n),i=await this._rpcRequest("getBalance",o),s=(0,se.vt)(i,jsonRpcResultAndContext((0,se.ai)()));if("error"in s)throw new SolanaJSONRPCError(s.error,`failed to get balance for ${e.toBase58()}`);return s.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)}))}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]),r=(0,se.vt)(t,jsonRpcResult((0,se.me)((0,se.ai)())));if("error"in r)throw new SolanaJSONRPCError(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,se.vt)(e,jsonRpcResult((0,se.ai)()));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,se.vt)(e,Gt);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[t]),n=(0,se.vt)(r,Ht);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get supply");return n.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenSupply",r),o=(0,se.vt)(n,jsonRpcResultAndContext(Yt));if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get token supply");return o.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenAccountBalance",r),o=(0,se.vt)(n,jsonRpcResultAndContext(Yt));if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get token account balance");return o.result}async getTokenAccountsByOwner(e,t,r){const{commitment:n,config:o}=extractCommitmentFromConfig(r);let i=[e.toBase58()];"mint"in t?i.push({mint:t.mint.toBase58()}):i.push({programId:t.programId.toBase58()});const s=this._buildArgs(i,n,"base64",o),a=await this._rpcRequest("getTokenAccountsByOwner",s),c=(0,se.vt)(a,qt);if("error"in c)throw new SolanaJSONRPCError(c.error,`failed to get token accounts owned by account ${e.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(e,t,r){let n=[e.toBase58()];"mint"in t?n.push({mint:t.mint.toBase58()}):n.push({programId:t.programId.toBase58()});const o=this._buildArgs(n,r,"jsonParsed"),i=await this._rpcRequest("getTokenAccountsByOwner",o),s=(0,se.vt)(i,Xt);if("error"in s)throw new SolanaJSONRPCError(s.error,`failed to get token accounts owned by account ${e.toBase58()}`);return s.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],n=await this._rpcRequest("getLargestAccounts",r),o=(0,se.vt)(n,Zt);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get largest accounts");return o.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenLargestAccounts",r),o=(0,se.vt)(n,jt);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get token largest accounts");return o.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgs([e.toBase58()],r,"base64",n),i=await this._rpcRequest("getAccountInfo",o),s=(0,se.vt)(i,jsonRpcResultAndContext((0,se.me)(Qt)));if("error"in s)throw new SolanaJSONRPCError(s.error,`failed to get info about account ${e.toBase58()}`);return s.result}async getParsedAccountInfo(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgs([e.toBase58()],r,"jsonParsed",n),i=await this._rpcRequest("getAccountInfo",o),s=(0,se.vt)(i,jsonRpcResultAndContext((0,se.me)(rr)));if("error"in s)throw new SolanaJSONRPCError(s.error,`failed to get info about account ${e.toBase58()}`);return s.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(t){throw new Error("failed to get info about account "+e.toBase58()+": "+t)}}async getMultipleParsedAccounts(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=e.map((e=>e.toBase58())),i=this._buildArgs([o],r,"jsonParsed",n),s=await this._rpcRequest("getMultipleAccounts",i),a=(0,se.vt)(s,jsonRpcResultAndContext((0,se.YO)((0,se.me)(rr))));if("error"in a)throw new SolanaJSONRPCError(a.error,`failed to get info for accounts ${o}`);return a.result}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=e.map((e=>e.toBase58())),i=this._buildArgs([o],r,"base64",n),s=await this._rpcRequest("getMultipleAccounts",i),a=(0,se.vt)(s,jsonRpcResultAndContext((0,se.YO)((0,se.me)(Qt))));if("error"in a)throw new SolanaJSONRPCError(a.error,`failed to get info for accounts ${o}`);return a.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){const{commitment:n,config:o}=extractCommitmentFromConfig(t),i=this._buildArgs([e.toBase58()],n,void 0,{...o,epoch:null!=r?r:o?.epoch}),s=await this._rpcRequest("getStakeActivation",i),a=(0,se.vt)(s,jsonRpcResult(or));if("error"in a)throw new SolanaJSONRPCError(a.error,`failed to get Stake Activation ${e.toBase58()}`);return a.result}async getProgramAccounts(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),{encoding:o,...i}=n||{},s=this._buildArgs([e.toBase58()],r,o||"base64",i),a=await this._rpcRequest("getProgramAccounts",s),c=(0,se.YO)(er),u=!0===i.withContext?(0,se.vt)(a,jsonRpcResultAndContext(c)):(0,se.vt)(a,jsonRpcResult(c));if("error"in u)throw new SolanaJSONRPCError(u.error,`failed to get accounts owned by program ${e.toBase58()}`);return u.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgs([e.toBase58()],r,"jsonParsed",n),i=await this._rpcRequest("getProgramAccounts",o),s=(0,se.vt)(i,jsonRpcResult((0,se.YO)(nr)));if("error"in s)throw new SolanaJSONRPCError(s.error,`failed to get accounts owned by program ${e.toBase58()}`);return s.result}async confirmTransaction(e,t){let r,n;if("string"==typeof e)r=e;else{const t=e;if(t.abortSignal?.aborted)return Promise.reject(t.abortSignal.reason);r=t.signature}try{n=Z().decode(r)}catch(e){throw new Error("signature must be base58 encoded: "+r)}return index_browser_esm_assert(64===n.length,"signature has invalid length"),"string"==typeof e?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise(((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",(()=>{r(e.reason)})))}))}getTransactionConfirmationPromise({commitment:e,signature:t}){let r,n,o=!1;return{abortConfirmation:()=>{n&&(n(),n=void 0),null!=r&&(this.removeSignatureListener(r),r=void 0)},confirmationPromise:new Promise(((i,s)=>{try{r=this.onSignature(t,((e,t)=>{r=void 0;const n={context:t,value:e};i({__type:qe.PROCESSED,response:n})}),e);const a=new Promise((e=>{null==r?e():n=this._onSubscriptionStateChange(r,(t=>{"subscribed"===t&&e()}))}));(async()=>{if(await a,o)return;const r=await this.getSignatureStatus(t);if(o)return;if(null==r)return;const{context:n,value:c}=r;if(null!=c)if(c?.err)s(c.err);else{switch(e){case"confirmed":case"single":case"singleGossip":if("processed"===c.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===c.confirmationStatus||"confirmed"===c.confirmationStatus)return}o=!0,i({__type:qe.PROCESSED,response:{context:n,value:c}})}})()}catch(e){s(e)}}))}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:n}}){let o=!1;const i=new Promise((t=>{const checkBlockHeight=async()=>{try{return await this.getBlockHeight(e)}catch(e){return-1}};(async()=>{let e=await checkBlockHeight();if(!o){for(;e<=r;){if(await sleep(1e3),o)return;if(e=await checkBlockHeight(),o)return}t({__type:qe.BLOCKHEIGHT_EXCEEDED})}})()})),{abortConfirmation:s,confirmationPromise:a}=this.getTransactionConfirmationPromise({commitment:e,signature:n}),c=this.getCancellationPromise(t);let u;try{const e=await Promise.race([c,a,i]);if(e.__type!==qe.PROCESSED)throw new TransactionExpiredBlockheightExceededError(n);u=e.response}finally{o=!0,s()}return u}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:n,nonceValue:o,signature:i}}){let s=!1;const a=new Promise((t=>{let i=o,a=null;const getCurrentNonceValue=async()=>{try{const{context:t,value:o}=await this.getNonceAndContext(n,{commitment:e,minContextSlot:r});return a=t.slot,o?.nonce}catch(e){return i}};(async()=>{if(i=await getCurrentNonceValue(),!s)for(;;){if(o!==i)return void t({__type:qe.NONCE_INVALID,slotInWhichNonceDidAdvance:a});if(await sleep(2e3),s)return;if(i=await getCurrentNonceValue(),s)return}})()})),{abortConfirmation:c,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:e,signature:i}),d=this.getCancellationPromise(t);let _;try{const t=await Promise.race([d,u,a]);if(t.__type===qe.PROCESSED)_=t.response;else{let n;for(;;){const e=await this.getSignatureStatus(i);if(null==e)break;if(!(e.context.slot<(t.slotInWhichNonceDidAdvance??r))){n=e;break}await sleep(400)}if(!n?.value)throw new TransactionExpiredNonceInvalidError(i);{const t=e||"finalized",{confirmationStatus:r}=n.value;switch(t){case"processed":case"recent":if("processed"!==r&&"confirmed"!==r&&"finalized"!==r)throw new TransactionExpiredNonceInvalidError(i);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==r&&"finalized"!==r)throw new TransactionExpiredNonceInvalidError(i);break;case"finalized":case"max":case"root":if("finalized"!==r)throw new TransactionExpiredNonceInvalidError(i)}_={context:n.context,value:{err:n.value.err}}}}}finally{s=!0,c()}return _}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r;const n=new Promise((t=>{let n=this._confirmTransactionInitialTimeout||6e4;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":n=this._confirmTransactionInitialTimeout||3e4}r=setTimeout((()=>t({__type:qe.TIMED_OUT,timeoutMs:n})),n)})),{abortConfirmation:o,confirmationPromise:i}=this.getTransactionConfirmationPromise({commitment:e,signature:t});let s;try{const e=await Promise.race([i,n]);if(e.__type!==qe.PROCESSED)throw new TransactionExpiredTimeoutError(t,e.timeoutMs/1e3);s=e.response}finally{clearTimeout(r),o()}return s}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]),t=(0,se.vt)(e,jsonRpcResult((0,se.YO)(Ar)));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),n=(0,se.vt)(r,gr);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get vote accounts");return n.result}async getSlot(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e),n=this._buildArgs([],t,void 0,r),o=await this._rpcRequest("getSlot",n),i=(0,se.vt)(o,jsonRpcResult((0,se.ai)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get slot");return i.result}async getSlotLeader(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e),n=this._buildArgs([],t,void 0,r),o=await this._rpcRequest("getSlotLeader",n),i=(0,se.vt)(o,jsonRpcResult((0,se.Yj)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get slot leader");return i.result}async getSlotLeaders(e,t){const r=[e,t],n=await this._rpcRequest("getSlotLeaders",r),o=(0,se.vt)(n,jsonRpcResult((0,se.YO)(mt)));if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get slot leaders");return o.result}async getSignatureStatus(e,t){const{context:r,value:n}=await this.getSignatureStatuses([e],t);index_browser_esm_assert(1===n.length);return{context:r,value:n[0]}}async getSignatureStatuses(e,t){const r=[e];t&&r.push(t);const n=await this._rpcRequest("getSignatureStatuses",r),o=(0,se.vt)(n,mr);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get signature status");return o.result}async getTransactionCount(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e),n=this._buildArgs([],t,void 0,r),o=await this._rpcRequest("getTransactionCount",n),i=(0,se.vt)(o,jsonRpcResult((0,se.ai)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get transaction count");return i.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),n=(0,se.vt)(r,Ft);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get inflation");return n.result}async getInflationReward(e,t,r){const{commitment:n,config:o}=extractCommitmentFromConfig(r),i=this._buildArgs([e.map((e=>e.toBase58()))],n,void 0,{...o,epoch:null!=t?t:o?.epoch}),s=await this._rpcRequest("getInflationReward",i),a=(0,se.vt)(s,yt);if("error"in a)throw new SolanaJSONRPCError(a.error,"failed to get inflation reward");return a.result}async getInflationRate(){const e=await this._rpcRequest("getInflationRate",[]),t=(0,se.vt)(e,zt);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e),n=this._buildArgs([],t,void 0,r),o=await this._rpcRequest("getEpochInfo",n),i=(0,se.vt)(o,Vt);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get epoch info");return i.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]),t=(0,se.vt)(e,Wt);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get epoch schedule");const r=t.result;return new EpochSchedule(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,se.vt)(e,$t);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getMinimumBalanceForRentExemption",r),o=(0,se.vt)(n,pr);return"error"in o?(console.warn("Unable to fetch minimum balance for rent exemption"),0):o.result}async getRecentBlockhashAndContext(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),n=(0,se.vt)(r,qr);if("error"in n)throw new SolanaJSONRPCError(n.error,"failed to get recent blockhash");return n.result}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,se.vt)(t,Qr);if("error"in r)throw new SolanaJSONRPCError(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getFeeCalculatorForBlockhash",r),o=(0,se.vt)(n,en);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get fee calculator");const{context:i,value:s}=o.result;return{context:i,value:null!==s?s.feeCalculator:null}}async getFeeForMessage(e,t){const r=toBuffer(e.serialize()).toString("base64"),n=this._buildArgs([r],t),o=await this._rpcRequest("getFeeForMessage",n),i=(0,se.vt)(o,jsonRpcResultAndContext((0,se.me)((0,se.ai)())));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get fee for message");if(null===i.result)throw new Error("invalid blockhash");return i.result}async getRecentPrioritizationFees(e){const t=e?.lockedWritableAccounts?.map((e=>e.toBase58())),r=t?.length?[t]:[],n=await this._rpcRequest("getRecentPrioritizationFees",r),o=(0,se.vt)(n,Kt);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get recent prioritization fees");return o.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(e){throw new Error("failed to get recent blockhash: "+e)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e),n=this._buildArgs([],t,void 0,r),o=await this._rpcRequest("getLatestBlockhash",n),i=(0,se.vt)(o,Jr);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get latest blockhash");return i.result}async isBlockhashValid(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgs([e],r,void 0,n),i=await this._rpcRequest("isBlockhashValid",o),s=(0,se.vt)(i,Xr);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to determine if the blockhash `"+e+"`is valid");return s.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]),t=(0,se.vt)(e,jsonRpcResult(Bt));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get version");return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]),t=(0,se.vt)(e,jsonRpcResult((0,se.Yj)()));if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgsAtLeastConfirmed([e],r,void 0,n),i=await this._rpcRequest("getBlock",o);try{switch(n?.transactionDetails){case"accounts":{const e=(0,se.vt)(i,Kr);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,se.vt)(i,zr);if("error"in e)throw e.error;return e.result}default:{const e=(0,se.vt)(i,Fr);if("error"in e)throw e.error;const{result:t}=e;return t?{...t,transactions:t.transactions.map((({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:versionedMessageFromResponse(r,e.message)},version:r})))}:null}}}catch(e){throw new SolanaJSONRPCError(e,"failed to get confirmed block")}}async getParsedBlock(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),i=await this._rpcRequest("getBlock",o);try{switch(n?.transactionDetails){case"accounts":{const e=(0,se.vt)(i,Wr);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,se.vt)(i,$r);if("error"in e)throw e.error;return e.result}default:{const e=(0,se.vt)(i,Vr);if("error"in e)throw e.error;return e.result}}}catch(e){throw new SolanaJSONRPCError(e,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){const{commitment:n,...o}=e;r=n,t=o}const n=this._buildArgs([],r,"base64",t),o=await this._rpcRequest("getBlockProduction",n),i=(0,se.vt)(o,Mt);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get block production information");return i.result}async getTransaction(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgsAtLeastConfirmed([e],r,void 0,n),i=await this._rpcRequest("getTransaction",o),s=(0,se.vt)(i,Yr);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get transaction");const a=s.result;return a?{...a,transaction:{...a.transaction,message:versionedMessageFromResponse(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),i=await this._rpcRequest("getTransaction",o),s=(0,se.vt)(i,jr);if("error"in s)throw new SolanaJSONRPCError(s.error,"failed to get transaction");return s.result}async getParsedTransactions(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n)})));return(await this._rpcBatchRequest(o)).map((e=>{const t=(0,se.vt)(e,jr);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get transactions");return t.result}))}async getTransactions(e,t){const{commitment:r,config:n}=extractCommitmentFromConfig(t),o=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,n)})));return(await this._rpcBatchRequest(o)).map((e=>{const t=(0,se.vt)(e,Yr);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get transactions");const r=t.result;return r?{...r,transaction:{...r.transaction,message:versionedMessageFromResponse(r.version,r.transaction.message)}}:r}))}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedBlock",r),o=(0,se.vt)(n,Gr);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get confirmed block");const i=o.result;if(!i)throw new Error("Confirmed block "+e+" not found");const s={...i,transactions:i.transactions.map((({transaction:e,meta:t})=>{const r=new Message(e.message);return{meta:t,transaction:{...e,message:r}}}))};return{...s,transactions:s.transactions.map((({transaction:e,meta:t})=>({meta:t,transaction:Transaction.populate(e.message,e.signatures)})))}}async getBlocks(e,t,r){const n=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),o=await this._rpcRequest("getBlocks",n),i=(0,se.vt)(o,jsonRpcResult((0,se.YO)((0,se.ai)())));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get blocks");return i.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getBlock",r),o=(0,se.vt)(n,Hr);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get block");const i=o.result;if(!i)throw new Error("Block "+e+" not found");return i}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getConfirmedBlock",r),o=(0,se.vt)(n,Hr);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get confirmed block");const i=o.result;if(!i)throw new Error("Confirmed block "+e+" not found");return i}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedTransaction",r),o=(0,se.vt)(n,Yr);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get transaction");const i=o.result;if(!i)return i;const s=new Message(i.transaction.message),a=i.transaction.signatures;return{...i,transaction:Transaction.populate(s,a)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),n=await this._rpcRequest("getConfirmedTransaction",r),o=(0,se.vt)(n,jr);if("error"in o)throw new SolanaJSONRPCError(o.error,"failed to get confirmed transaction");return o.result}async getParsedConfirmedTransactions(e,t){const r=e.map((e=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((e=>{const t=(0,se.vt)(e,jr);if("error"in t)throw new SolanaJSONRPCError(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(e,t,r){let n={},o=await this.getFirstAvailableBlock();for(;!("until"in n)&&!(--t<=0||t<o);)try{const e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(n.until=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}let i=await this.getSlot("finalized");for(;!("before"in n||++r>i);)try{const e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(n.before=e.signatures[e.signatures.length-1].toString())}catch(e){if(e instanceof Error&&e.message.includes("skipped"))continue;throw e}return(await this.getConfirmedSignaturesForAddress2(e,n)).map((e=>e.signature))}async getConfirmedSignaturesForAddress2(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),o=await this._rpcRequest("getConfirmedSignaturesForAddress2",n),i=(0,se.vt)(o,ir);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get confirmed signatures for address");return i.result}async getSignaturesForAddress(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),o=await this._rpcRequest("getSignaturesForAddress",n),i=(0,se.vt)(o,sr);if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get signatures for address");return i.result}async getAddressLookupTable(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let o=null;return null!==n&&(o=new AddressLookupTableAccount({key:e,state:AddressLookupTableAccount.deserialize(n.data)})),{context:r,value:o}}async getNonceAndContext(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let o=null;return null!==n&&(o=NonceAccount.fromAccountData(n.data)),{context:r,value:o}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)}))}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),n=(0,se.vt)(r,tn);if("error"in n)throw new SolanaJSONRPCError(n.error,`airdrop to ${e.toBase58()} failed`);return n.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await sleep(100);const e=Date.now()-this._blockhashInfo.lastFetch>=It;if(null!==this._blockhashInfo.latestBlockhash&&!e)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let e=0;e<50;e++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await sleep(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=extractCommitmentFromConfig(e),n=this._buildArgs([],t,"base64",r),o=await this._rpcRequest("getStakeMinimumDelegation",n),i=(0,se.vt)(o,jsonRpcResultAndContext((0,se.ai)()));if("error"in i)throw new SolanaJSONRPCError(i.error,"failed to get stake minimum delegation");return i.result}async simulateTransaction(e,t,r){if("message"in e){const n=e.serialize(),i=o.Buffer.from(n).toString("base64");if(Array.isArray(t)||void 0!==r)throw new Error("Invalid arguments");const s=t||{};s.encoding="base64","commitment"in s||(s.commitment=this.commitment);const a=[i,s],c=await this._rpcRequest("simulateTransaction",a),u=(0,se.vt)(c,Ut);if("error"in u)throw new Error("failed to simulate transaction: "+u.error.message);return u.result}let n;if(e instanceof Transaction){let t=e;n=new Transaction,n.feePayer=t.feePayer,n.instructions=e.instructions,n.nonceInfo=t.nonceInfo,n.signatures=t.signatures}else n=Transaction.populate(e),n._message=n._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const i=t;if(n.nonceInfo&&i)n.sign(...i);else{let e=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(e);if(n.lastValidBlockHeight=t.lastValidBlockHeight,n.recentBlockhash=t.blockhash,!i)break;if(n.sign(...i),!n.signature)throw new Error("!signature");const r=n.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}e=!0}}const s=n._compile(),a=s.serialize(),c=n._serialize(a).toString("base64"),u={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:s.nonProgramIds()).map((e=>e.toBase58()));u.accounts={encoding:"base64",addresses:e}}i&&(u.sigVerify=!0);const d=[c,u],_=await this._rpcRequest("simulateTransaction",d),l=(0,se.vt)(_,Ut);if("error"in l){let e;if("data"in l.error&&(e=l.error.data.logs,e&&Array.isArray(e))){const t="\n    ",r=t+e.join(t);console.error(l.error.message,r)}throw new SendTransactionError("failed to simulate transaction: "+l.error.message,e)}return l.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const r=e.serialize();return await this.sendRawTransaction(r,t)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const n=t;if(e.nonceInfo)e.sign(...n);else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);if(e.lastValidBlockHeight=r.lastValidBlockHeight,e.recentBlockhash=r.blockhash,e.sign(...n),!e.signature)throw new Error("!signature");const o=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(o)){this._blockhashInfo.transactionSignatures.push(o);break}t=!0}}const o=e.serialize();return await this.sendRawTransaction(o,r)}async sendRawTransaction(e,t){const r=toBuffer(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){const r={encoding:"base64"},n=t&&t.skipPreflight,o=!0===n?"processed":t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),n&&(r.skipPreflight=n),o&&(r.preflightCommitment=o);const i=[e,r],s=await this._rpcRequest("sendTransaction",i),a=(0,se.vt)(s,rn);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new SendTransactionError("failed to send transaction: "+a.error.message,e)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()}),5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==e?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([e,t])=>{this._setSubscription(e,{...t,state:"pending"})}))):this._updateSubscriptions()}_setSubscription(e,t){const r=this._subscriptionsByHash[e]?.state;if(this._subscriptionsByHash[e]=t,r!==t.state){const r=this._subscriptionStateChangeCallbacksByHash[e];r&&r.forEach((e=>{try{e(t.state)}catch{}}))}}_onSubscriptionStateChange(e,t){const r=this._subscriptionHashByClientSubscriptionId[e];if(null==r)return()=>{};const n=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;return n.add(t),()=>{n.delete(t),0===n.size&&delete this._subscriptionStateChangeCallbacksByHash[r]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log(`Error when closing socket connection: ${e.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const e=this._rpcWebSocketGeneration,isCurrentConnectionStillActive=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async e=>{const t=this._subscriptionsByHash[e];if(void 0!==t)switch(t.state){case"pending":case"unsubscribed":if(0===t.callbacks.size)return delete this._subscriptionsByHash[e],"unsubscribed"===t.state&&delete this._subscriptionCallbacksByServerSubscriptionId[t.serverSubscriptionId],void await this._updateSubscriptions();await(async()=>{const{args:r,method:n}=t;try{this._setSubscription(e,{...t,state:"subscribing"});const o=await this._rpcWebSocket.call(n,r);this._setSubscription(e,{...t,serverSubscriptionId:o,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[o]=t.callbacks,await this._updateSubscriptions()}catch(o){if(o instanceof Error&&console.error(`${n} error for argument`,r,o.message),!isCurrentConnectionStillActive())return;this._setSubscription(e,{...t,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===t.callbacks.size&&await(async()=>{const{serverSubscriptionId:r,unsubscribeMethod:n}=t;if(this._subscriptionsAutoDisposedByRpc.has(r))this._subscriptionsAutoDisposedByRpc.delete(r);else{this._setSubscription(e,{...t,state:"unsubscribing"}),this._setSubscription(e,{...t,state:"unsubscribing"});try{await this._rpcWebSocket.call(n,[r])}catch(r){if(r instanceof Error&&console.error(`${n} error:`,r.message),!isCurrentConnectionStillActive())return;return this._setSubscription(e,{...t,state:"subscribed"}),void await this._updateSubscriptions()}}this._setSubscription(e,{...t,state:"unsubscribed"}),await this._updateSubscriptions()})()}})))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach((e=>{try{e(...t)}catch(e){console.error(e)}}))}_wsOnAccountNotification(e){const{result:t,subscription:r}=(0,se.vt)(e,ar);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++,n=At([e.method,t]),o=this._subscriptionsByHash[n];return void 0===o?this._subscriptionsByHash[n]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:o.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=n,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];const t=this._subscriptionsByHash[n];index_browser_esm_assert(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){const n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},n)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=(0,se.vt)(e,ur);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,n){const o=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",n?{filters:n}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},o)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const n=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},n)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=(0,se.vt)(e,on);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=(0,se.vt)(e,_r);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=(0,se.vt)(e,Rr);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,n){const o=t||this._commitment;if(o||r||n){let t={};r&&(t.encoding=r),o&&(t.commitment=o),n&&(t=Object.assign(t,n)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,n){const o=t||this._commitment;if(o&&!["confirmed","finalized"].includes(o))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,n)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=(0,se.vt)(e,Er);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const n=this._buildArgs([e],r||this._commitment||"finalized"),o=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(o)}catch(e){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},n);return o}onSignatureWithOptions(e,t,r){const{commitment:n,...o}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},i=this._buildArgs([e],n,void 0,o),s=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(s)}catch(e){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return s}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=(0,se.vt)(e,hr);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class Keypair{constructor(e){this._keypair=void 0,this._keypair=e??generateKeypair()}static generate(){return new Keypair(generateKeypair())}static fromSecretKey(e,t){if(64!==e.byteLength)throw new Error("bad secret key size");const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32),n=Be(t);for(let e=0;e<32;e++)if(r[e]!==n[e])throw new Error("provided secretKey is invalid")}return new Keypair({publicKey:r,secretKey:e})}static fromSeed(e){const t=Be(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new Keypair({publicKey:t,secretKey:r})}get publicKey(){return new PublicKey(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const an=Object.freeze({CreateLookupTable:{index:0,layout:oe.struct([oe.u32("instruction"),ut("recentSlot"),oe.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:oe.struct([oe.u32("instruction")])},ExtendLookupTable:{index:2,layout:oe.struct([oe.u32("instruction"),ut(),oe.seq(publicKey(),oe.offset(oe.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:oe.struct([oe.u32("instruction")])},CloseLookupTable:{index:4,layout:oe.struct([oe.u32("instruction")])}});class AddressLookupTableInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=oe.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(an))if(n.index==t){r=e;break}if(!r)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return r}static decodeCreateLookupTable(e){this.checkProgramId(e.programId),this.checkKeysLength(e.keys,4);const{recentSlot:t}=decodeData$1(an.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){if(this.checkProgramId(e.programId),e.keys.length<2)throw new Error(`invalid instruction; found ${e.keys.length} keys, expected at least 2`);const{addresses:t}=decodeData$1(an.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:void 0,addresses:t.map((e=>new PublicKey(e)))}}static decodeCloseLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,3),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(AddressLookupTableProgram.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}class AddressLookupTableProgram{constructor(){}static createLookupTable(e){const[t,r]=PublicKey.findProgramAddressSync([e.authority.toBuffer(),(0,ie.toBufferLE)(BigInt(e.recentSlot),8)],this.programId),n=encodeData(an.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:SystemProgram.programId,isSigner:!1,isWritable:!1}];return[new TransactionInstruction({programId:this.programId,keys:o,data:n}),t]}static freezeLookupTable(e){const t=encodeData(an.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new TransactionInstruction({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){const t=encodeData(an.ExtendLookupTable,{addresses:e.addresses.map((e=>e.toBytes()))}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:SystemProgram.programId,isSigner:!1,isWritable:!1}),new TransactionInstruction({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){const t=encodeData(an.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new TransactionInstruction({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){const t=encodeData(an.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new TransactionInstruction({programId:this.programId,keys:r,data:t})}}AddressLookupTableProgram.programId=new PublicKey("AddressLookupTab1e1111111111111111111111111");class ComputeBudgetInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=oe.u8("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(cn))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return r}static decodeRequestUnits(e){this.checkProgramId(e.programId);const{units:t,additionalFee:r}=decodeData$1(cn.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);const{bytes:t}=decodeData$1(cn.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);const{units:t}=decodeData$1(cn.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);const{microLamports:t}=decodeData$1(cn.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(ComputeBudgetProgram.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const cn=Object.freeze({RequestUnits:{index:0,layout:oe.struct([oe.u8("instruction"),oe.u32("units"),oe.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:oe.struct([oe.u8("instruction"),oe.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:oe.struct([oe.u8("instruction"),oe.u32("units")])},SetComputeUnitPrice:{index:3,layout:oe.struct([oe.u8("instruction"),ut("microLamports")])}});class ComputeBudgetProgram{constructor(){}static requestUnits(e){const t=encodeData(cn.RequestUnits,e);return new TransactionInstruction({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){const t=encodeData(cn.RequestHeapFrame,e);return new TransactionInstruction({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){const t=encodeData(cn.SetComputeUnitLimit,e);return new TransactionInstruction({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){const t=encodeData(cn.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new TransactionInstruction({keys:[],programId:this.programId,data:t})}}ComputeBudgetProgram.programId=new PublicKey("ComputeBudget111111111111111111111111111111");const un=oe.struct([oe.u8("numSignatures"),oe.u8("padding"),oe.u16("signatureOffset"),oe.u16("signatureInstructionIndex"),oe.u16("publicKeyOffset"),oe.u16("publicKeyInstructionIndex"),oe.u16("messageDataOffset"),oe.u16("messageDataSize"),oe.u16("messageInstructionIndex")]);class Ed25519Program{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,instructionIndex:i}=e;index_browser_esm_assert(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),index_browser_esm_assert(64===n.length,`Signature must be 64 bytes but received ${n.length} bytes`);const s=un.span,a=s+t.length,c=a+n.length,u=o.Buffer.alloc(c+r.length),d=null==i?65535:i;return un.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:d,publicKeyOffset:s,publicKeyInstructionIndex:d,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:d},u),u.fill(t,s),u.fill(n,a),u.fill(r,c),new TransactionInstruction({keys:[],programId:Ed25519Program.programId,data:u})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;index_browser_esm_assert(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const e=Keypair.fromSecretKey(t),o=e.publicKey.toBytes(),i=sign(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:o,message:r,signature:i,instructionIndex:n})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}Ed25519Program.programId=new PublicKey("Ed25519SigVerify111111111111111111111111111");xe.utils.isValidPrivateKey;const dn=xe.getPublicKey,_n=oe.struct([oe.u8("numSignatures"),oe.u16("signatureOffset"),oe.u8("signatureInstructionIndex"),oe.u16("ethAddressOffset"),oe.u8("ethAddressInstructionIndex"),oe.u16("messageDataOffset"),oe.u16("messageDataSize"),oe.u8("messageInstructionIndex"),oe.blob(20,"ethAddress"),oe.blob(64,"signature"),oe.u8("recoveryId")]);class Secp256k1Program{constructor(){}static publicKeyToEthAddress(e){index_browser_esm_assert(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return o.Buffer.from(pe(toBuffer(e))).slice(-20)}catch(e){throw new Error(`Error constructing Ethereum address: ${e}`)}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,recoveryId:o,instructionIndex:i}=e;return Secp256k1Program.createInstructionWithEthAddress({ethAddress:Secp256k1Program.publicKeyToEthAddress(t),message:r,signature:n,recoveryId:o,instructionIndex:i})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:n,recoveryId:i,instructionIndex:s=0}=e;let a;a="string"==typeof t?t.startsWith("0x")?o.Buffer.from(t.substr(2),"hex"):o.Buffer.from(t,"hex"):t,index_browser_esm_assert(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+n.length+1,d=o.Buffer.alloc(_n.span+r.length);return _n.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:s,ethAddressOffset:12,ethAddressInstructionIndex:s,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:s,signature:toBuffer(n),ethAddress:toBuffer(a),recoveryId:i},d),d.fill(toBuffer(r),_n.span),new TransactionInstruction({keys:[],programId:Secp256k1Program.programId,data:d})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;index_browser_esm_assert(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const e=toBuffer(t),i=dn(e,!1).slice(1),s=o.Buffer.from(pe(toBuffer(r))),[a,c]=((e,t)=>{const r=xe.sign(e,t);return[r.toCompactRawBytes(),r.recovery]})(s,e);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:a,recoveryId:c,instructionIndex:n})}catch(e){throw new Error(`Error creating instruction; ${e}`)}}}var ln;Secp256k1Program.programId=new PublicKey("KeccakSecp256k11111111111111111111111111111");const Rn=new PublicKey("StakeConfig11111111111111111111111111111111");class Authorized{constructor(e,t){this.staker=void 0,this.withdrawer=void 0,this.staker=e,this.withdrawer=t}}class Lockup{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}ln=Lockup,Lockup.default=new ln(0,0,PublicKey.default);class StakeInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=oe.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(En))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a StakeInstruction");return r}static decodeInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t,lockup:r}=decodeData$1(En.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new Authorized(new PublicKey(t.staker),new PublicKey(t.withdrawer)),lockup:new Lockup(r.unixTimestamp,r.epoch,new PublicKey(r.custodian))}}static decodeDelegate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,6),decodeData$1(En.Delegate,e.data),{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,stakeAuthorizationType:r}=decodeData$1(En.Authorize,e.data),n={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new PublicKey(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(n.custodianPubkey=e.keys[3].pubkey),n}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:n,authorityOwner:o}=decodeData$1(En.AuthorizeWithSeed,e.data),i={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:n,authorityOwner:new PublicKey(o),newAuthorizedPubkey:new PublicKey(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(i.custodianPubkey=e.keys[3].pubkey),i}static decodeSplit(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=decodeData$1(En.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),decodeData$1(En.Merge,e.data),{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=decodeData$1(En.Withdraw,e.data),r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};return e.keys.length>5&&(r.custodianPubkey=e.keys[5].pubkey),r}static decodeDeactivate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),decodeData$1(En.Deactivate,e.data),{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(StakeProgram.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const En=Object.freeze({Initialize:{index:0,layout:oe.struct([oe.u32("instruction"),((e="authorized")=>oe.struct([publicKey("staker"),publicKey("withdrawer")],e))(),((e="lockup")=>oe.struct([oe.ns64("unixTimestamp"),oe.ns64("epoch"),publicKey("custodian")],e))()])},Authorize:{index:1,layout:oe.struct([oe.u32("instruction"),publicKey("newAuthorized"),oe.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:oe.struct([oe.u32("instruction")])},Split:{index:3,layout:oe.struct([oe.u32("instruction"),oe.ns64("lamports")])},Withdraw:{index:4,layout:oe.struct([oe.u32("instruction"),oe.ns64("lamports")])},Deactivate:{index:5,layout:oe.struct([oe.u32("instruction")])},Merge:{index:7,layout:oe.struct([oe.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:oe.struct([oe.u32("instruction"),publicKey("newAuthorized"),oe.u32("stakeAuthorizationType"),rustString("authoritySeed"),publicKey("authorityOwner")])}}),hn=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class StakeProgram{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:n}=e,o=n||Lockup.default,i=encodeData(En.Initialize,{authorized:{staker:toBuffer(r.staker.toBuffer()),withdrawer:toBuffer(r.withdrawer.toBuffer())},lockup:{unixTimestamp:o.unixTimestamp,epoch:o.epoch,custodian:toBuffer(o.custodian.toBuffer())}}),s={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:tt,isSigner:!1,isWritable:!1}],programId:this.programId,data:i};return new TransactionInstruction(s)}static createAccountWithSeed(e){const t=new Transaction;t.add(SystemProgram.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:o}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:o}))}static createAccount(e){const t=new Transaction;t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:o}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:o}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:n}=e,o=encodeData(En.Delegate);return(new Transaction).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:Xe,isSigner:!1,isWritable:!1},{pubkey:it,isSigner:!1,isWritable:!1},{pubkey:Rn,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,stakeAuthorizationType:o,custodianPubkey:i}=e,s=encodeData(En.Authorize,{newAuthorized:toBuffer(n.toBuffer()),stakeAuthorizationType:o.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:Xe,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!0,isWritable:!1}),(new Transaction).add({keys:a,programId:this.programId,data:s})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:n,authorityOwner:o,newAuthorizedPubkey:i,stakeAuthorizationType:s,custodianPubkey:a}=e,c=encodeData(En.AuthorizeWithSeed,{newAuthorized:toBuffer(i.toBuffer()),stakeAuthorizationType:s.index,authoritySeed:n,authorityOwner:toBuffer(o.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:Xe,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!0,isWritable:!1}),(new Transaction).add({keys:u,programId:this.programId,data:c})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,lamports:o}=e,i=encodeData(En.Split,{lamports:o});return new TransactionInstruction({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static split(e,t){const r=new Transaction;return r.add(SystemProgram.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:t,space:this.space,programId:this.programId})),r.add(this.splitInstruction(e))}static splitWithSeed(e,t){const{stakePubkey:r,authorizedPubkey:n,splitStakePubkey:o,basePubkey:i,seed:s,lamports:a}=e,c=new Transaction;return c.add(SystemProgram.allocate({accountPubkey:o,basePubkey:i,seed:s,space:this.space,programId:this.programId})),t&&t>0&&c.add(SystemProgram.transfer({fromPubkey:e.authorizedPubkey,toPubkey:o,lamports:t})),c.add(this.splitInstruction({stakePubkey:r,authorizedPubkey:n,splitStakePubkey:o,lamports:a}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:n}=e,o=encodeData(En.Merge);return(new Transaction).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:Xe,isSigner:!1,isWritable:!1},{pubkey:it,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!0,isWritable:!1}],programId:this.programId,data:o})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:n,lamports:o,custodianPubkey:i}=e,s=encodeData(En.Withdraw,{lamports:o}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:Xe,isSigner:!1,isWritable:!1},{pubkey:it,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!0,isWritable:!1}),(new Transaction).add({keys:a,programId:this.programId,data:s})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e,n=encodeData(En.Deactivate);return(new Transaction).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:Xe,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}}StakeProgram.programId=new PublicKey("Stake11111111111111111111111111111111111111"),StakeProgram.space=200;class VoteInit{constructor(e,t,r,n){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=e,this.authorizedVoter=t,this.authorizedWithdrawer=r,this.commission=n}}class VoteInstruction{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=oe.u32("instruction").decode(e.data);let r;for(const[e,n]of Object.entries(An))if(n.index==t){r=e;break}if(!r)throw new Error("Instruction type incorrect; not a VoteInstruction");return r}static decodeInitializeAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,4);const{voteInit:t}=decodeData$1(An.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new VoteInit(new PublicKey(t.nodePubkey),new PublicKey(t.authorizedVoter),new PublicKey(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,voteAuthorizationType:r}=decodeData$1(An.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new PublicKey(t),voteAuthorizationType:{index:r}}}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:r,newAuthorized:n,voteAuthorizationType:o}}=decodeData$1(An.AuthorizeWithSeed,e.data);return{currentAuthorityDerivedKeyBasePubkey:e.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new PublicKey(t),currentAuthorityDerivedKeySeed:r,newAuthorizedPubkey:new PublicKey(n),voteAuthorizationType:{index:o},votePubkey:e.keys[0].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=decodeData$1(An.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(VoteProgram.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const An=Object.freeze({InitializeAccount:{index:0,layout:oe.struct([oe.u32("instruction"),((e="voteInit")=>oe.struct([publicKey("nodePubkey"),publicKey("authorizedVoter"),publicKey("authorizedWithdrawer"),oe.u8("commission")],e))()])},Authorize:{index:1,layout:oe.struct([oe.u32("instruction"),publicKey("newAuthorized"),oe.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:oe.struct([oe.u32("instruction"),oe.ns64("lamports")])},UpdateValidatorIdentity:{index:4,layout:oe.struct([oe.u32("instruction")])},AuthorizeWithSeed:{index:10,layout:oe.struct([oe.u32("instruction"),((e="voteAuthorizeWithSeedArgs")=>oe.struct([oe.u32("voteAuthorizationType"),publicKey("currentAuthorityDerivedKeyOwnerPubkey"),rustString("currentAuthorityDerivedKeySeed"),publicKey("newAuthorized")],e))()])}}),Sn=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class VoteProgram{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:n}=e,o=encodeData(An.InitializeAccount,{voteInit:{nodePubkey:toBuffer(n.nodePubkey.toBuffer()),authorizedVoter:toBuffer(n.authorizedVoter.toBuffer()),authorizedWithdrawer:toBuffer(n.authorizedWithdrawer.toBuffer()),commission:n.commission}}),i={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:tt,isSigner:!1,isWritable:!1},{pubkey:Xe,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:o};return new TransactionInstruction(i)}static createAccount(e){const t=new Transaction;return t.add(SystemProgram.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,voteAuthorizationType:o}=e,i=encodeData(An.Authorize,{newAuthorized:toBuffer(n.toBuffer()),voteAuthorizationType:o.index}),s=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:Xe,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new Transaction).add({keys:s,programId:this.programId,data:i})}static authorizeWithSeed(e){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:n,newAuthorizedPubkey:o,voteAuthorizationType:i,votePubkey:s}=e,a=encodeData(An.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:toBuffer(r.toBuffer()),currentAuthorityDerivedKeySeed:n,newAuthorized:toBuffer(o.toBuffer()),voteAuthorizationType:i.index}}),c=[{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:Xe,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new Transaction).add({keys:c,programId:this.programId,data:a})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:n,toPubkey:o}=e,i=encodeData(An.Withdraw,{lamports:n}),s=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new Transaction).add({keys:s,programId:this.programId,data:i})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw new Error("Withdraw will leave vote account with insufficient funds.");return VoteProgram.withdraw(e)}static updateValidatorIdentity(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,nodePubkey:n}=e,o=encodeData(An.UpdateValidatorIdentity),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new Transaction).add({keys:i,programId:this.programId,data:o})}}VoteProgram.programId=new PublicKey("Vote111111111111111111111111111111111111111"),VoteProgram.space=3762;const gn=new PublicKey("Va1idator1nfo111111111111111111111111111111"),On=(0,se.NW)({name:(0,se.Yj)(),website:(0,se.lq)((0,se.Yj)()),details:(0,se.lq)((0,se.Yj)()),keybaseUsername:(0,se.lq)((0,se.Yj)())});class ValidatorInfo{constructor(e,t){this.key=void 0,this.info=void 0,this.key=e,this.info=t}static fromConfigData(e){let t=[...e];if(2!==decodeLength(t))return null;const r=[];for(let e=0;e<2;e++){const e=new PublicKey(guardedSplice(t,0,Ke)),n=1===guardedShift(t);r.push({publicKey:e,isSigner:n})}if(r[0].publicKey.equals(gn)&&r[1].isSigner){const e=rustString().decode(o.Buffer.from(t)),n=JSON.parse(e);return(0,se.vA)(n,On),new ValidatorInfo(r[1].publicKey,n)}return null}}const fn=new PublicKey("Vote111111111111111111111111111111111111111"),mn=oe.struct([publicKey("nodePubkey"),publicKey("authorizedWithdrawer"),oe.u8("commission"),oe.nu64(),oe.seq(oe.struct([oe.nu64("slot"),oe.u32("confirmationCount")]),oe.offset(oe.u32(),-8),"votes"),oe.u8("rootSlotValid"),oe.nu64("rootSlot"),oe.nu64(),oe.seq(oe.struct([oe.nu64("epoch"),publicKey("authorizedVoter")]),oe.offset(oe.u32(),-8),"authorizedVoters"),oe.struct([oe.seq(oe.struct([publicKey("authorizedPubkey"),oe.nu64("epochOfLastAuthorizedSwitch"),oe.nu64("targetEpoch")]),32,"buf"),oe.nu64("idx"),oe.u8("isEmpty")],"priorVoters"),oe.nu64(),oe.seq(oe.struct([oe.nu64("epoch"),oe.nu64("credits"),oe.nu64("prevCredits")]),oe.offset(oe.u32(),-8),"epochCredits"),oe.struct([oe.nu64("slot"),oe.nu64("timestamp")],"lastTimestamp")]);class VoteAccount{constructor(e){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=e.nodePubkey,this.authorizedWithdrawer=e.authorizedWithdrawer,this.commission=e.commission,this.rootSlot=e.rootSlot,this.votes=e.votes,this.authorizedVoters=e.authorizedVoters,this.priorVoters=e.priorVoters,this.epochCredits=e.epochCredits,this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){const t=mn.decode(toBuffer(e),4);let r=t.rootSlot;return t.rootSlotValid||(r=null),new VoteAccount({nodePubkey:new PublicKey(t.nodePubkey),authorizedWithdrawer:new PublicKey(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:r,authorizedVoters:t.authorizedVoters.map(parseAuthorizedVoter),priorVoters:getPriorVoters(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function parseAuthorizedVoter({authorizedVoter:e,epoch:t}){return{epoch:t,authorizedVoter:new PublicKey(e)}}function parsePriorVoters({authorizedPubkey:e,epochOfLastAuthorizedSwitch:t,targetEpoch:r}){return{authorizedPubkey:new PublicKey(e),epochOfLastAuthorizedSwitch:t,targetEpoch:r}}function getPriorVoters({buf:e,idx:t,isEmpty:r}){return r?[]:[...e.slice(t+1).map(parsePriorVoters),...e.slice(0,t).map(parsePriorVoters)]}const pn={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function clusterApiUrl(e,t){const r=!1===t?"http":"https";if(!e)return pn[r].devnet;const n=pn[r][e];if(!n)throw new Error(`Unknown ${r} cluster: ${e}`);return n}async function sendAndConfirmRawTransaction(e,t,r,n){let o,i;r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")||r&&Object.prototype.hasOwnProperty.call(r,"nonceValue")?(o=r,i=n):i=r;const s=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,minContextSlot:i.minContextSlot},a=await e.sendRawTransaction(t,s),c=i&&i.commitment,u=o?e.confirmTransaction(o,c):e.confirmTransaction(a,c),d=(await u).value;if(d.err)throw new Error(`Raw transaction ${a} failed (${JSON.stringify(d)})`);return a}const Nn=1e9},69026:(e,t,r)=>{var n=r(901048).Buffer;const o=r(828985),i=r(712628);class CommonClient extends o.EventEmitter{address;rpc_id;queue;options;autoconnect;ready;reconnect;reconnect_timer_id;reconnect_interval;max_reconnects;rest_options;current_reconnects;generate_request_id;socket;webSocketFactory;dataPack;constructor(e,t="ws://localhost:8080",{autoconnect:r=!0,reconnect:n=!0,reconnect_interval:o=1e3,max_reconnects:s=5,...a}={},c,u){super(),this.webSocketFactory=e,this.queue={},this.rpc_id=0,this.address=t,this.autoconnect=r,this.ready=!1,this.reconnect=n,this.reconnect_timer_id=void 0,this.reconnect_interval=o,this.max_reconnects=s,this.rest_options=a,this.current_reconnects=0,this.generate_request_id=c||(()=>++this.rpc_id),this.dataPack=u||new i.DefaultDataPack,this.autoconnect&&this._connect(this.address,{autoconnect:this.autoconnect,reconnect:this.reconnect,reconnect_interval:this.reconnect_interval,max_reconnects:this.max_reconnects,...this.rest_options})}connect(){this.socket||this._connect(this.address,{autoconnect:this.autoconnect,reconnect:this.reconnect,reconnect_interval:this.reconnect_interval,max_reconnects:this.max_reconnects,...this.rest_options})}call(e,t,r,n){return n||"object"!=typeof r||(n=r,r=null),new Promise(((o,i)=>{if(!this.ready)return i(new Error("socket not ready"));const s=this.generate_request_id(e,t),a={jsonrpc:"2.0",method:e,params:t||void 0,id:s};this.socket.send(this.dataPack.encode(a),n,(e=>{if(e)return i(e);this.queue[s]={promise:[o,i]},r&&(this.queue[s].timeout=setTimeout((()=>{delete this.queue[s],i(new Error("reply timeout"))}),r))}))}))}async login(e){const t=await this.call("rpc.login",e);if(!t)throw new Error("authentication failed");return t}async listMethods(){return await this.call("__listMethods")}notify(e,t){return new Promise(((r,n)=>{if(!this.ready)return n(new Error("socket not ready"));const o={jsonrpc:"2.0",method:e,params:t};this.socket.send(this.dataPack.encode(o),(e=>{if(e)return n(e);r()}))}))}async subscribe(e){"string"==typeof e&&(e=[e]);const t=await this.call("rpc.on",e);if("string"==typeof e&&"ok"!==t[e])throw new Error("Failed subscribing to an event '"+e+"' with: "+t[e]);return t}async unsubscribe(e){"string"==typeof e&&(e=[e]);const t=await this.call("rpc.off",e);if("string"==typeof e&&"ok"!==t[e])throw new Error("Failed unsubscribing from an event with: "+t);return t}close(e,t){this.socket.close(e||1e3,t)}setAutoReconnect(e){this.reconnect=e}setReconnectInterval(e){this.reconnect_interval=e}setMaxReconnects(e){this.max_reconnects=e}_connect(e,t){clearTimeout(this.reconnect_timer_id),this.socket=this.webSocketFactory(e,t),this.socket.addEventListener("open",(()=>{this.ready=!0,this.emit("open"),this.current_reconnects=0})),this.socket.addEventListener("message",(({data:e})=>{e instanceof ArrayBuffer&&(e=n.from(e).toString());try{e=this.dataPack.decode(e)}catch(e){return}if(e.notification&&this.listeners(e.notification).length){if(!Object.keys(e.params).length)return this.emit(e.notification);const t=[e.notification];if(e.params.constructor===Object)t.push(e.params);else for(let r=0;r<e.params.length;r++)t.push(e.params[r]);return Promise.resolve().then((()=>{this.emit.apply(this,t)}))}if(!this.queue[e.id])return e.method?Promise.resolve().then((()=>{this.emit(e.method,e?.params)})):void 0;"error"in e=="result"in e&&this.queue[e.id].promise[1](new Error('Server response malformed. Response must include either "result" or "error", but not both.')),this.queue[e.id].timeout&&clearTimeout(this.queue[e.id].timeout),e.error?this.queue[e.id].promise[1](e.error):this.queue[e.id].promise[0](e.result),delete this.queue[e.id]})),this.socket.addEventListener("error",(e=>this.emit("error",e))),this.socket.addEventListener("close",(({code:r,reason:n})=>{this.ready&&setTimeout((()=>this.emit("close",r,n)),0),this.ready=!1,this.socket=void 0,1e3!==r&&(this.current_reconnects++,this.reconnect&&(this.max_reconnects>this.current_reconnects||0===this.max_reconnects)&&(this.reconnect_timer_id=setTimeout((()=>this._connect(e,t)),this.reconnect_interval)))}))}}t.A=CommonClient},131392:(e,t,r)=>{const n=r(828985);class WebSocketBrowserImpl extends n.EventEmitter{socket;constructor(e,t,r){super(),this.socket=new window.WebSocket(e,r),this.socket.onopen=()=>this.emit("open"),this.socket.onmessage=e=>this.emit("message",e.data),this.socket.onerror=e=>this.emit("error",e),this.socket.onclose=e=>{this.emit("close",e.code,e.reason)}}send(e,t,r){const n=r||t;try{this.socket.send(e),n()}catch(e){n(e)}}close(e,t){this.socket.close(e,t)}addEventListener(e,t,r){this.socket.addEventListener(e,t,r)}}t.A=function default_1(e,t){return new WebSocketBrowserImpl(e,t)}},712628:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createError=t.DefaultDataPack=void 0;const r=new Map([[-32e3,"Event not provided"],[-32600,"Invalid Request"],[-32601,"Method not found"],[-32602,"Invalid params"],[-32603,"Internal error"],[-32604,"Params not found"],[-32605,"Method forbidden"],[-32606,"Event forbidden"],[-32700,"Parse error"]]);t.DefaultDataPack=class DefaultDataPack{encode(e){return JSON.stringify(e)}decode(e){return JSON.parse(e)}},t.createError=function createError(e,t){const n={code:e,message:r.get(e)||"Internal Server Error"};return t&&(n.data=t),n}},457477:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.encodeDecode=void 0;t.encodeDecode=e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)})},86103:(e,t,r)=>{var n=r(901048).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.u256be=t.u256=t.u192be=t.u192=t.u128be=t.u128=t.u64be=t.u64=t.bigIntBE=t.bigInt=void 0;const o=r(878918),i=r(856115),s=r(457477);t.bigInt=e=>t=>{const r=(0,o.blob)(e,t),{encode:a,decode:c}=(0,s.encodeDecode)(r),u=r;return u.decode=(e,t)=>{const r=c(e,t);return(0,i.toBigIntLE)(n.from(r))},u.encode=(t,r,n)=>{const o=(0,i.toBufferLE)(t,e);return a(o,r,n)},u};t.bigIntBE=e=>t=>{const r=(0,o.blob)(e,t),{encode:a,decode:c}=(0,s.encodeDecode)(r),u=r;return u.decode=(e,t)=>{const r=c(e,t);return(0,i.toBigIntBE)(n.from(r))},u.encode=(t,r,n)=>{const o=(0,i.toBufferBE)(t,e);return a(o,r,n)},u},t.u64=(0,t.bigInt)(8),t.u64be=(0,t.bigIntBE)(8),t.u128=(0,t.bigInt)(16),t.u128be=(0,t.bigIntBE)(16),t.u192=(0,t.bigInt)(24),t.u192be=(0,t.bigIntBE)(24),t.u256=(0,t.bigInt)(32),t.u256be=(0,t.bigIntBE)(32)},409609:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.decimal=t.WAD=void 0;const o=n(r(755553)),i=r(457477),s=r(86103);t.WAD=new o.default("1e+18");t.decimal=e=>{const r=(0,s.u128)(e),{encode:n,decode:a}=(0,i.encodeDecode)(r),c=r;return c.decode=(e,r)=>{const n=a(e,r).toString();return new o.default(n).div(t.WAD)},c.encode=(e,r,o)=>{const i=BigInt(e.times(t.WAD).integerValue().toString());return n(i,r,o)},c}},432510:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),o(r(457477),t),o(r(86103),t),o(r(409609),t),o(r(760507),t),o(r(922547),t)},760507:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.bool=void 0;const n=r(878918),o=r(457477);t.bool=e=>{const t=(0,n.u8)(e),{encode:r,decode:i}=(0,o.encodeDecode)(t),s=t;return s.decode=(e,t)=>!!i(e,t),s.encode=(e,t,n)=>{const o=Number(e);return r(o,t,n)},s}},922547:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.publicKey=void 0;const n=r(878918),o=r(629862),i=r(457477);t.publicKey=e=>{const t=(0,n.blob)(32,e),{encode:r,decode:s}=(0,i.encodeDecode)(t),a=t;return a.decode=(e,t)=>{const r=s(e,t);return new o.PublicKey(r)},a.encode=(e,t,n)=>{const o=e.toBuffer();return r(o,t,n)},a}},268117:(e,t,r)=>{var n=r(797467);function assertByteArrayHasEnoughBytesForCodec(e,t,r,o=0){const i=r.length-o;if(i<t)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH,{bytesLength:i,codecDescription:e,expected:t})}function assertByteArrayOffsetIsNotOutOfRange(e,t,r){if(t<0||t>r)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE,{bytesLength:r,codecDescription:e,offset:t})}var padBytes=(e,t)=>{if(e.length>=t)return e;const r=new Uint8Array(t).fill(0);return r.set(e),r},fixBytes=(e,t)=>padBytes(e.length<=t?e:e.slice(0,t),t);function getEncodedSize(e,t){return"fixedSize"in t?t.fixedSize:t.getSizeFromValue(e)}function createEncoder(e){return Object.freeze({...e,encode:t=>{const r=new Uint8Array(getEncodedSize(t,e));return e.write(t,r,0),r}})}function createDecoder(e){return Object.freeze({...e,decode:(t,r=0)=>e.read(t,r)[0]})}function createCodec(e){return Object.freeze({...e,decode:(t,r=0)=>e.read(t,r)[0],encode:t=>{const r=new Uint8Array(getEncodedSize(t,e));return e.write(t,r,0),r}})}function isFixedSize(e){return"fixedSize"in e&&"number"==typeof e.fixedSize}function assertIsFixedSize(e){if(!isFixedSize(e))throw new n.SolanaError(n.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH)}function isVariableSize(e){return!isFixedSize(e)}function combineCodec(e,t){if(isFixedSize(e)!==isFixedSize(t))throw new n.SolanaError(n.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);if(isFixedSize(e)&&isFixedSize(t)&&e.fixedSize!==t.fixedSize)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH,{decoderFixedSize:t.fixedSize,encoderFixedSize:e.fixedSize});if(!isFixedSize(e)&&!isFixedSize(t)&&e.maxSize!==t.maxSize)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH,{decoderMaxSize:t.maxSize,encoderMaxSize:e.maxSize});return{...t,...e,decode:t.decode,encode:e.encode,read:t.read,write:e.write}}function fixEncoder(e,t){return createEncoder({fixedSize:t,write:(r,n,o)=>{const i=e.encode(r),s=i.length>t?i.slice(0,t):i;return n.set(s,o),o+t}})}function fixDecoder(e,t){return createDecoder({fixedSize:t,read:(r,n)=>{assertByteArrayHasEnoughBytesForCodec("fixCodec",t,r,n),(n>0||r.length>t)&&(r=r.slice(n,n+t)),isFixedSize(e)&&(r=fixBytes(r,e.fixedSize));const[o]=e.read(r,0);return[o,n+t]}})}function mapEncoder(e,t){return createEncoder({...isVariableSize(e)?{...e,getSizeFromValue:r=>e.getSizeFromValue(t(r))}:e,write:(r,n,o)=>e.write(t(r),n,o)})}function mapDecoder(e,t){return createDecoder({...e,read:(r,n)=>{const[o,i]=e.read(r,n);return[t(o,r,n),i]}})}function offsetEncoder(e,t){return createEncoder({...e,write:(r,n,o)=>{const wrapBytes=e=>modulo(e,n.length),i=t.preOffset?t.preOffset({bytes:n,preOffset:o,wrapBytes}):o;assertByteArrayOffsetIsNotOutOfRange("offsetEncoder",i,n.length);const s=e.write(r,n,i),a=t.postOffset?t.postOffset({bytes:n,newPreOffset:i,postOffset:s,preOffset:o,wrapBytes}):s;return assertByteArrayOffsetIsNotOutOfRange("offsetEncoder",a,n.length),a}})}function offsetDecoder(e,t){return createDecoder({...e,read:(r,n)=>{const wrapBytes=e=>modulo(e,r.length),o=t.preOffset?t.preOffset({bytes:r,preOffset:n,wrapBytes}):n;assertByteArrayOffsetIsNotOutOfRange("offsetDecoder",o,r.length);const[i,s]=e.read(r,o),a=t.postOffset?t.postOffset({bytes:r,newPreOffset:o,postOffset:s,preOffset:n,wrapBytes}):s;return assertByteArrayOffsetIsNotOutOfRange("offsetDecoder",a,r.length),[i,a]}})}function modulo(e,t){return 0===t?0:(e%t+t)%t}function resizeEncoder(e,t){if(isFixedSize(e)){const r=t(e.fixedSize);if(r<0)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,{bytesLength:r,codecDescription:"resizeEncoder"});return createEncoder({...e,fixedSize:r})}return createEncoder({...e,getSizeFromValue:r=>{const o=t(e.getSizeFromValue(r));if(o<0)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,{bytesLength:o,codecDescription:"resizeEncoder"});return o}})}function resizeDecoder(e,t){if(isFixedSize(e)){const r=t(e.fixedSize);if(r<0)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH,{bytesLength:r,codecDescription:"resizeDecoder"});return createDecoder({...e,fixedSize:r})}return e}function padLeftEncoder(e,t){return offsetEncoder(resizeEncoder(e,(e=>e+t)),{preOffset:({preOffset:e})=>e+t})}function padRightEncoder(e,t){return offsetEncoder(resizeEncoder(e,(e=>e+t)),{postOffset:({postOffset:e})=>e+t})}function padLeftDecoder(e,t){return offsetDecoder(resizeDecoder(e,(e=>e+t)),{preOffset:({preOffset:e})=>e+t})}function padRightDecoder(e,t){return offsetDecoder(resizeDecoder(e,(e=>e+t)),{postOffset:({postOffset:e})=>e+t})}function reverseEncoder(e){return assertIsFixedSize(e),createEncoder({...e,write:(t,r,n)=>{const o=e.write(t,r,n),i=r.slice(n,n+e.fixedSize).reverse();return r.set(i,n),o}})}function reverseDecoder(e){return assertIsFixedSize(e),createDecoder({...e,read:(t,r)=>{const n=r+e.fixedSize;if(0===r&&t.length===n)return e.read(t.reverse(),r);const o=t.slice();return o.set(t.slice(r,n).reverse(),r),e.read(o,r)}})}t.assertByteArrayHasEnoughBytesForCodec=assertByteArrayHasEnoughBytesForCodec,t.assertByteArrayIsNotEmptyForCodec=function assertByteArrayIsNotEmptyForCodec(e,t,r=0){if(t.length-r<=0)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY,{codecDescription:e})},t.assertByteArrayOffsetIsNotOutOfRange=assertByteArrayOffsetIsNotOutOfRange,t.assertIsFixedSize=assertIsFixedSize,t.assertIsVariableSize=function assertIsVariableSize(e){if(!isVariableSize(e))throw new n.SolanaError(n.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH)},t.combineCodec=combineCodec,t.createCodec=createCodec,t.createDecoder=createDecoder,t.createEncoder=createEncoder,t.fixBytes=fixBytes,t.fixCodec=function fixCodec(e,t){return combineCodec(fixEncoder(e,t),fixDecoder(e,t))},t.fixDecoder=fixDecoder,t.fixEncoder=fixEncoder,t.getEncodedSize=getEncodedSize,t.isFixedSize=isFixedSize,t.isVariableSize=isVariableSize,t.mapCodec=function mapCodec(e,t,r){return createCodec({...mapEncoder(e,t),read:r?mapDecoder(e,r).read:e.read})},t.mapDecoder=mapDecoder,t.mapEncoder=mapEncoder,t.mergeBytes=e=>{const t=e.filter((e=>e.length));if(0===t.length)return e.length?e[0]:new Uint8Array;if(1===t.length)return t[0];const r=t.reduce(((e,t)=>e+t.length),0),n=new Uint8Array(r);let o=0;return t.forEach((e=>{n.set(e,o),o+=e.length})),n},t.offsetCodec=function offsetCodec(e,t){return combineCodec(offsetEncoder(e,t),offsetDecoder(e,t))},t.offsetDecoder=offsetDecoder,t.offsetEncoder=offsetEncoder,t.padBytes=padBytes,t.padLeftCodec=function padLeftCodec(e,t){return combineCodec(padLeftEncoder(e,t),padLeftDecoder(e,t))},t.padLeftDecoder=padLeftDecoder,t.padLeftEncoder=padLeftEncoder,t.padRightCodec=function padRightCodec(e,t){return combineCodec(padRightEncoder(e,t),padRightDecoder(e,t))},t.padRightDecoder=padRightDecoder,t.padRightEncoder=padRightEncoder,t.resizeCodec=function resizeCodec(e,t){return combineCodec(resizeEncoder(e,t),resizeDecoder(e,t))},t.resizeDecoder=resizeDecoder,t.resizeEncoder=resizeEncoder,t.reverseCodec=function reverseCodec(e){return combineCodec(reverseEncoder(e),reverseDecoder(e))},t.reverseDecoder=reverseDecoder,t.reverseEncoder=reverseEncoder},797467:(e,t)=>{var r=(()=>!1)(),n=-32700,o=-32603,i=-32602,s=-32601,a=-32600,c=-32016,u=-32015,d=-32014,_=-32013,l=-32012,R=-32011,E=-32010,A=-32009,S=-32008,g=-32007,O=-32006,f=-32005,m=-32004,p=-32003,N=-32002,I=-32001,T=28e5,b=2800001,y=2800002,C=2800003,w=2800004,L=2800005,k=2800006,D=2800007,P=2800008,x=2800009,v=2800010,B=323e4,U=32300001,M=3230002,F=3230003,z=3230004,K=361e4,V=3610001,W=3610002,$=3610003,G=3610004,H=3610005,Y=3610006,j=3704e3,q=3704001,J=3704002,X=3704003,Z=4128e3,Q=4128001,ee=4128002,te=4615e3,re=4615001,ne=4615002,oe=4615003,ie=4615004,se=4615005,ae=4615006,ce=4615007,ue=4615008,de=4615009,_e=4615010,le=4615011,Re=4615012,Ee=4615013,he=4615014,Ae=4615015,Se=4615016,ge=4615017,Oe=4615018,fe=4615019,me=4615020,pe=4615021,Ne=4615022,Ie=4615023,Te=4615024,be=4615025,ye=4615026,Ce=4615027,we=4615028,Le=4615029,ke=4615030,De=4615031,Pe=4615032,xe=4615033,ve=4615034,Be=4615035,Ue=4615036,Me=4615037,Fe=4615038,ze=4615039,Ke=4615040,Ve=4615041,We=4615042,$e=4615043,Ge=4615044,He=4615045,Ye=4615046,je=4615047,qe=4615048,Je=4615049,Xe=4615050,Ze=4615051,Qe=4615052,et=4615053,tt=4615054,rt=5508e3,nt=5508001,ot=5508002,it=5508003,st=5508004,at=5508005,ct=5508006,ut=5508007,dt=5508008,_t=5508009,lt=5508010,Rt=5663e3,Et=5663001,ht=5663002,At=5663003,St=5663004,gt=5663005,Ot=5663006,ft=5663007,mt=5663008,pt=5663009,Nt=5663010,It=5663011,Tt=5663012,bt=5663013,yt=5663014,Ct=705e4,wt=7050001,Lt=7050002,kt=7050003,Dt=7050004,Pt=7050005,xt=7050006,vt=7050007,Bt=7050008,Ut=7050009,Mt=7050010,Ft=7050011,zt=7050012,Kt=7050013,Vt=7050014,Wt=7050015,$t=7050016,Gt=7050017,Ht=7050018,Yt=7050019,jt=7050020,qt=7050021,Jt=7050022,Xt=7050023,Zt=7050024,Qt=7050025,er=7050026,tr=7050027,rr=7050028,nr=7050029,or=7050030,ir=7050031,sr=7050032,ar=7050033,cr=7050034,ur=7050035,dr=7050036,_r=8078e3,lr=8078001,Rr=8078002,Er=8078003,hr=8078004,Ar=8078005,Sr=8078006,gr=8078007,Or=8078008,fr=8078009,mr=8078010,pr=8078011,Nr=8078012,Ir=8078013,Tr=8078014,br=81e5,yr=8100001,Cr=8100002,wr=819e4,Lr=8190001,kr=8190002,Dr=8190003,Pr=8190004,xr=99e5,vr=9900001,Br=9900002,Ur=9900003,Mr={[B]:"Account not found at address: $address",[z]:"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.",[F]:"Expected decoded account at address: $address",[M]:"Failed to decode account data at address: $address",[U]:"Accounts not found at addresses: $addresses",[x]:"Unable to find a viable program address bump seed.",[y]:"$putativeAddress is not a base58-encoded address.",[T]:"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.",[C]:"The `CryptoKey` must be an `Ed25519` public key.",[P]:"Invalid seeds; point must fall off the Ed25519 curve.",[w]:"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].",[k]:"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.",[D]:"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.",[L]:"Expected program derived address bump to be in the range [0, 255], got: $bump.",[v]:"Program address cannot end with PDA marker.",[b]:"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.",4:"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.",1:"The network has progressed past the last block for which this transaction could have been committed.",[_r]:"Codec [$codecDescription] cannot decode empty byte arrays.",[Ar]:"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].",[Sr]:"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].",[hr]:"Encoder and decoder must either both be fixed-size or variable-size.",[Or]:"Enum discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.",[Rr]:"Expected a fixed-size codec, got a variable-size one.",[Ir]:"Codec [$codecDescription] expected a positive byte length, got $bytesLength.",[Er]:"Expected a variable-size codec, got a fixed-size one.",[lr]:"Codec [$codecDescription] expected $expected bytes, got $bytesLength.",[fr]:"Invalid data enum variant. Expected one of [$variants], got $value.",[gr]:"Expected [$codecDescription] to have $expected items, got $actual.",[mr]:"Invalid scalar enum variant. Expected one of [$variants] or a number between $minRange and $maxRange, got $value.",[Nr]:"Invalid value $value for base $base with alphabet $alphabet.",[pr]:"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.",[Tr]:"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.",[de]:"instruction requires an uninitialized account",[Ie]:"instruction tries to borrow reference for an account which is already borrowed",[Te]:"instruction left account with an outstanding borrowed reference",[pe]:"program other than the account's owner changed the size of the account data",[se]:"account data too small for instruction",[Ne]:"instruction expected an executable account",[Ye]:"An account does not have enough lamports to be rent-exempt",[qe]:"Program arithmetic overflowed",[He]:"Failed to serialize or deserialize account data: $encodedData",[tt]:"Builtin programs must consume compute units",[Pe]:"Cross-program invocation call depth too deep",[Fe]:"Computational budget exceeded",[ye]:"custom program error: #$code",[ge]:"instruction contains duplicate accounts",[be]:"instruction modifications of multiply-passed account differ",[ke]:"executable accounts must be rent exempt",[we]:"instruction changed executable accounts data",[Le]:"instruction changed the balance of an executable account",[Oe]:"instruction changed executable bit of an account",[he]:"instruction modified data of an account it does not own",[Ee]:"instruction spent from the balance of an account it does not own",[re]:"generic instruction error",[Xe]:"Provided owner is not allowed",[$e]:"Account is immutable",[Ge]:"Incorrect authority provided",[ce]:"incorrect program id for instruction",[ae]:"insufficient funds for instruction",[ie]:"invalid account data for instruction",[je]:"Invalid account owner",[ne]:"invalid program argument",[Ce]:"program returned invalid error code",[oe]:"invalid instruction data",[Me]:"Failed to reallocate account data",[Ue]:"Provided seeds do not result in a valid address",[Ze]:"Accounts data allocations exceeded the maximum allowed per transaction",[Qe]:"Max accounts exceeded",[et]:"Max instruction trace length exceeded",[Be]:"Length of the seed is too long for address generation",[xe]:"An account required by the instruction is missing",[ue]:"missing required signature for instruction",[Re]:"instruction illegally modified the program id of an account",[me]:"insufficient account keys for instruction",[ze]:"Cross-program invocation with unauthorized signer or writable account",[Ke]:"Failed to create program execution environment",[We]:"Program failed to compile",[Ve]:"Program failed to complete",[Se]:"instruction modified data of a read-only account",[Ae]:"instruction changed the balance of a read-only account",[ve]:"Cross-program invocation reentrancy not allowed for this instruction",[fe]:"instruction modified rent epoch of an account",[le]:"sum of account balances before and after instruction do not match",[_e]:"instruction requires an initialized account",[te]:"",[De]:"Unsupported program id",[Je]:"Unsupported sysvar",[Z]:"The instruction does not have any accounts.",[Q]:"The instruction does not have any data.",[ee]:"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.",5:"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.",2:"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`",[Br]:"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[Ur]:"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[vr]:"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[xr]:"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[o]:"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)",[i]:"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)",[a]:"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)",[s]:"JSON-RPC error: The method does not exist / is not available ($__serverMessage)",[n]:"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)",[l]:"$__serverMessage",[I]:"$__serverMessage",[m]:"$__serverMessage",[d]:"$__serverMessage",[E]:"$__serverMessage",[A]:"$__serverMessage",[c]:"Minimum context slot has not been reached",[f]:"Node is unhealthy; behind by $numSlotsBehind slots",[S]:"No snapshot",[N]:"Transaction simulation failed",[g]:"$__serverMessage",[R]:"Transaction history is not available from this node",[O]:"$__serverMessage",[_]:"Transaction signature length mismatch",[p]:"Transaction signature verification failure",[u]:"$__serverMessage",[j]:"Key pair bytes must be of length 64, got $byteLength.",[q]:"Expected private key bytes with length 32. Actual length: $actualLength.",[J]:"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.",[X]:"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.",6:"Lamports value must be in the range [0, 2e64-1]",7:"`$value` cannot be parsed as a `BigInt`",8:"`$value` cannot be parsed as a `Number`",3:"No nonce account could be found at address `$nonceAccountAddress`",[wr]:"Either the notification name must end in 'Notifications' or the API must supply a subscription creator function for the notification '$notificationName' to map between the notification name and the subscribe/unsubscribe method names.",[Lr]:"Failed to obtain a subscription id from the server",[kr]:"WebSocket was closed before payload could be added to the send buffer",[Dr]:"WebSocket connection closed",[Pr]:"WebSocket failed to connect",[br]:"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.",[Cr]:"HTTP error ($statusCode): $message",[yr]:"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.",[rt]:"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.",[nt]:"The provided value does not implement the `KeyPairSigner` interface",[it]:"The provided value does not implement the `MessageModifyingSigner` interface",[st]:"The provided value does not implement the `MessagePartialSigner` interface",[ot]:"The provided value does not implement any of the `MessageSigner` interfaces",[ct]:"The provided value does not implement the `TransactionModifyingSigner` interface",[ut]:"The provided value does not implement the `TransactionPartialSigner` interface",[dt]:"The provided value does not implement the `TransactionSendingSigner` interface",[at]:"The provided value does not implement any of the `TransactionSigner` interfaces",[_t]:"More than one `TransactionSendingSigner` was identified.",[lt]:"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.",[V]:"No digest implementation could be found.",[K]:"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.",[W]:"This runtime does not support the generation of Ed25519 key pairs.\n\nInstall and import `@solana/webcrypto-ed25519-polyfill` before generating keys in environments that do not support Ed25519.\n\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.",[$]:"No signature verification implementation could be found.",[G]:"No key generation implementation could be found.",[H]:"No signing implementation could be found.",[Y]:"No key export implementation could be found.",9:"Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given",[$t]:"Transaction processing left an account with an outstanding borrowed reference",[wt]:"Account in use",[Lt]:"Account loaded twice",[kt]:"Attempt to debit an account but found no record of a prior credit.",[Xt]:"Transaction loads an address table account that doesn't exist",[vt]:"This transaction has already been processed",[Bt]:"Blockhash not found",[Ut]:"Loader call chain is too deep",[Wt]:"Transactions are currently disabled due to cluster maintenance",[or]:"Transaction contains a duplicate instruction ($index) that is not allowed",[Pt]:"Insufficient funds for fee",[ir]:"Transaction results in an account ($accountIndex) with insufficient funds for rent",[xt]:"This account may not be used to pay transaction fees",[Ft]:"Transaction contains an invalid account reference",[Qt]:"Transaction loads an address table account with invalid data",[er]:"Transaction address table lookup uses an invalid index",[Zt]:"Transaction loads an address table account with an invalid owner",[ar]:"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.",[Kt]:"This program may not be used for executing instructions",[tr]:"Transaction leaves an account with a lower balance than rent-exempt minimum",[Yt]:"Transaction loads a writable account that cannot be written",[sr]:"Transaction exceeded max loaded accounts data size cap",[Mt]:"Transaction requires a fee but has no signature present",[Dt]:"Attempt to load a program that does not exist",[ur]:"Execution of the program referenced by account at index $accountIndex is temporarily restricted.",[cr]:"ResanitizationNeeded",[Vt]:"Transaction failed to sanitize accounts offsets correctly",[zt]:"Transaction did not pass signature verification",[Jt]:"Transaction locked too many accounts",[dr]:"Sum of account balances before and after transaction do not match",[Ct]:"The transaction failed with the error `$errorName`",[Ht]:"Transaction version is unsupported",[qt]:"Transaction would exceed account data limit within the block",[nr]:"Transaction would exceed total account data limit",[jt]:"Transaction would exceed max account limit within the block",[Gt]:"Transaction would exceed max Block Cost Limit",[rr]:"Transaction would exceed max Vote Cost Limit",[Nt]:"Transaction is missing an address at index: $index.",[ht]:"Transaction does not have a blockhash lifetime",[At]:"Transaction is not a durable nonce transaction",[gt]:"Contents of these address lookup tables unknown: $lookupTableAddresses",[Ot]:"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved",[mt]:"No fee payer set in CompiledTransaction",[ft]:"Could not find program address at index $index",[It]:"Transaction is missing a fee payer.",[Tt]:"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.",[yt]:"Transaction first instruction is not advance nonce account instruction.",[bt]:"Transaction with no instructions cannot be durable nonce transaction.",[Rt]:"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees",[Et]:"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable",[pt]:"Transaction is missing signatures for addresses: $addresses.",[St]:"Transaction version must be in the range [0, 127]. `$actualVersion` given"};function encodeValue(e){return Array.isArray(e)?"%5B"+e.map((e=>"string"==typeof e?encodeURIComponent(`"${e.replace(/"/g,'\\"')}"`):encodeValue(e))).join("%2C%20")+"%5D":"bigint"==typeof e?`${e}n`:encodeURIComponent(String(null!=e&&null===Object.getPrototypeOf(e)?{...e}:e))}function encodeObjectContextEntry([e,t]){return`${e}=${encodeValue(t)}`}function getErrorMessage(e,t={}){if(r)return function getHumanReadableErrorMessage(e,t={}){return Mr[e].replace(/(?<!\\)\$(\w+)/g,((e,r)=>r in t?`${t[r]}`:e))}(e,t);{let r=`Solana error #${e}; Decode this error by running \`npx @solana/errors decode ${e}`;return Object.keys(t).length&&(r+=` $"${function encodeContextObject(e){return Object.entries(e).map(encodeObjectContextEntry).join("&")}(t)}"`),`${r}\``}}var Fr=class extends Error{context;constructor(...[e,t]){let r,n;if(t){const{cause:e,...o}=t;e&&(n={cause:e}),Object.keys(o).length>0&&(r=o)}super(getErrorMessage(e,r),n),this.context={__code:e,...r},this.name="SolanaError"}};function safeCaptureStackTrace(...e){"captureStackTrace"in Error&&"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(...e)}function getSolanaErrorFromRpcError({errorCodeBaseOffset:e,getErrorContext:t,orderedErrorNames:r,rpcEnumError:n},o){let i,s;"string"==typeof n?i=n:(i=Object.keys(n)[0],s=n[i]);const a=e+r.indexOf(i),c=t(a,i,s),u=new Fr(a,c);return safeCaptureStackTrace(u,o),u}var zr=["GenericError","InvalidArgument","InvalidInstructionData","InvalidAccountData","AccountDataTooSmall","InsufficientFunds","IncorrectProgramId","MissingRequiredSignature","AccountAlreadyInitialized","UninitializedAccount","UnbalancedInstruction","ModifiedProgramId","ExternalAccountLamportSpend","ExternalAccountDataModified","ReadonlyLamportChange","ReadonlyDataModified","DuplicateAccountIndex","ExecutableModified","RentEpochModified","NotEnoughAccountKeys","AccountDataSizeChanged","AccountNotExecutable","AccountBorrowFailed","AccountBorrowOutstanding","DuplicateAccountOutOfSync","Custom","InvalidError","ExecutableDataModified","ExecutableLamportChange","ExecutableAccountNotRentExempt","UnsupportedProgramId","CallDepth","MissingAccount","ReentrancyNotAllowed","MaxSeedLengthExceeded","InvalidSeeds","InvalidRealloc","ComputationalBudgetExceeded","PrivilegeEscalation","ProgramEnvironmentSetupFailure","ProgramFailedToComplete","ProgramFailedToCompile","Immutable","IncorrectAuthority","BorshIoError","AccountNotRentExempt","InvalidAccountOwner","ArithmeticOverflow","UnsupportedSysvar","IllegalOwner","MaxAccountsDataAllocationsExceeded","MaxAccountsExceeded","MaxInstructionTraceLengthExceeded","BuiltinProgramsMustConsumeComputeUnits"];function getSolanaErrorFromInstructionError(e,t){return getSolanaErrorFromRpcError({errorCodeBaseOffset:4615001,getErrorContext:(t,r,n)=>t===te?{errorName:r,index:e,...void 0!==n?{instructionErrorContext:n}:null}:t===ye?{code:n,index:e}:t===He?{encodedData:n,index:e}:{index:e},orderedErrorNames:zr,rpcEnumError:t},getSolanaErrorFromInstructionError)}var Kr=["AccountInUse","AccountLoadedTwice","AccountNotFound","ProgramAccountNotFound","InsufficientFundsForFee","InvalidAccountForFee","AlreadyProcessed","BlockhashNotFound","CallChainTooDeep","MissingSignatureForFee","InvalidAccountIndex","SignatureFailure","InvalidProgramForExecution","SanitizeFailure","ClusterMaintenance","AccountBorrowOutstanding","WouldExceedMaxBlockCostLimit","UnsupportedVersion","InvalidWritableAccount","WouldExceedMaxAccountCostLimit","WouldExceedAccountDataBlockLimit","TooManyAccountLocks","AddressLookupTableNotFound","InvalidAddressLookupTableOwner","InvalidAddressLookupTableData","InvalidAddressLookupTableIndex","InvalidRentPayingAccount","WouldExceedMaxVoteCostLimit","WouldExceedAccountDataTotalLimit","DuplicateInstruction","InsufficientFundsForRent","MaxLoadedAccountsDataSizeExceeded","InvalidLoadedAccountsDataSizeLimit","ResanitizationNeeded","ProgramExecutionTemporarilyRestricted","UnbalancedTransaction"];function getSolanaErrorFromTransactionError(e){return"object"==typeof e&&"InstructionError"in e?getSolanaErrorFromInstructionError(...e.InstructionError):getSolanaErrorFromRpcError({errorCodeBaseOffset:7050001,getErrorContext:(e,t,r)=>e===Ct?{errorName:t,...void 0!==r?{transactionErrorContext:r}:null}:e===or?{index:r}:e===ir||e===ur?{accountIndex:r.account_index}:void 0,orderedErrorNames:Kr,rpcEnumError:e},getSolanaErrorFromTransactionError)}t.SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND=B,t.SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED=z,t.SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT=F,t.SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT=M,t.SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND=U,t.SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED=x,t.SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS=y,t.SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH=T,t.SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY=C,t.SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE=P,t.SOLANA_ERROR__ADDRESSES__MALFORMED_PDA=w,t.SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED=k,t.SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED=D,t.SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE=L,t.SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER=v,t.SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE=b,t.SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE=4,t.SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED=1,t.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY=_r,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH=Ar,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH=Sr,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH=hr,t.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE=Or,t.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH=Rr,t.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH=Ir,t.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH=Er,t.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH=lr,t.SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT=fr,t.SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS=gr,t.SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT=mr,t.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE=Nr,t.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE=pr,t.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE=Tr,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED=de,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED=Ie,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=Te,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED=pe,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL=se,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE=Ne,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT=Ye,t.SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW=qe,t.SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR=He,t.SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS=tt,t.SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH=Pe,t.SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED=Fe,t.SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM=ye,t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX=ge,t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC=be,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT=ke,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED=we,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE=Le,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED=Oe,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED=he,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND=Ee,t.SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR=re,t.SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER=Xe,t.SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE=$e,t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY=Ge,t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID=ce,t.SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS=ae,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA=ie,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER=je,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT=ne,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR=Ce,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA=oe,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC=Me,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS=Ue,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED=Ze,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED=Qe,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED=et,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED=Be,t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT=xe,t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE=ue,t.SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID=Re,t.SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS=me,t.SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION=ze,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE=Ke,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE=We,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE=Ve,t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED=Se,t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE=Ae,t.SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED=ve,t.SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED=fe,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION=le,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT=_e,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN=te,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID=De,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR=Je,t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS=Z,t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA=Q,t.SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH=ee,t.SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH=5,t.SOLANA_ERROR__INVALID_NONCE=2,t.SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING=Br,t.SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE=Ur,t.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE=vr,t.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING=xr,t.SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR=o,t.SOLANA_ERROR__JSON_RPC__INVALID_PARAMS=i,t.SOLANA_ERROR__JSON_RPC__INVALID_REQUEST=a,t.SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND=s,t.SOLANA_ERROR__JSON_RPC__PARSE_ERROR=n,t.SOLANA_ERROR__JSON_RPC__SCAN_ERROR=l,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP=I,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE=m,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET=d,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX=E,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED=A,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED=c,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY=f,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT=S,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE=N,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED=g,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE=R,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE=O,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH=_,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE=p,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION=u,t.SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH=j,t.SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH=q,t.SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH=J,t.SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE=X,t.SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE=6,t.SOLANA_ERROR__MALFORMED_BIGINT_STRING=7,t.SOLANA_ERROR__MALFORMED_NUMBER_STRING=8,t.SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND=3,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST=wr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID=Lr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED=kr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED=Dr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT=Pr,t.SOLANA_ERROR__RPC__INTEGER_OVERFLOW=br,t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR=Cr,t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN=yr,t.SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS=rt,t.SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER=nt,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER=it,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER=st,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER=ot,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER=ct,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER=ut,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER=dt,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER=at,t.SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS=_t,t.SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING=lt,t.SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED=V,t.SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT=K,t.SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED=W,t.SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED=$,t.SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED=G,t.SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED=H,t.SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED=Y,t.SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE=9,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=$t,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE=wt,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE=Lt,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND=kt,t.SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND=Xt,t.SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED=vt,t.SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND=Bt,t.SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP=Ut,t.SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE=Wt,t.SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION=or,t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE=Pt,t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT=ir,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE=xt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX=Ft,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA=Qt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX=er,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER=Zt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT=ar,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION=Kt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT=tr,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT=Yt,t.SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED=sr,t.SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE=Mt,t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND=Dt,t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED=ur,t.SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED=cr,t.SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE=Vt,t.SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE=zt,t.SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS=Jt,t.SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION=dr,t.SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN=Ct,t.SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION=Ht,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT=qt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT=nr,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT=jt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT=Gt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT=rr,t.SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING=Nt,t.SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME=ht,t.SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME=At,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING=gt,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE=Ot,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING=mt,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND=ft,t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING=It,t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING=Tt,t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE=yt,t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING=bt,t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES=Rt,t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE=Et,t.SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING=pt,t.SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE=St,t.SolanaError=Fr,t.getSolanaErrorFromInstructionError=getSolanaErrorFromInstructionError,t.getSolanaErrorFromJsonRpcError=function getSolanaErrorFromJsonRpcError({code:e,data:t,message:r}){let c;if(e===N){const{err:e,...r}=t,n=e?{cause:getSolanaErrorFromTransactionError(e)}:null;c=new Fr(N,{...r,...n})}else{let _;switch(e){case o:case i:case a:case s:case n:case l:case I:case m:case d:case E:case A:case g:case O:case u:_={__serverMessage:r};break;default:"object"!=typeof t||Array.isArray(t)||(_=t)}c=new Fr(e,_)}return safeCaptureStackTrace(c,getSolanaErrorFromJsonRpcError),c},t.getSolanaErrorFromTransactionError=getSolanaErrorFromTransactionError,t.isSolanaError=function isSolanaError(e,t){return!!(e instanceof Error&&"SolanaError"===e.name)&&(void 0===t||e.context.__code===t)},t.safeCaptureStackTrace=safeCaptureStackTrace},701536:(e,t,r)=>{var n=r(972898),o=r(268117);function assertNumberIsBetweenForCodec(e,t,r,o){if(o<t||o>r)throw new n.SolanaError(n.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE,{codecDescription:e,max:r,min:t,value:o})}var i=(e=>(e[e.LITTLE=0]="LITTLE",e[e.BIG=1]="BIG",e))(i||{});function isLittleEndian(e){return 1!==e?.endian}function numberEncoderFactory(e){return o.createEncoder({fixedSize:e.size,write(t,r,n){e.range&&assertNumberIsBetweenForCodec(e.name,e.range[0],e.range[1],t);const o=new ArrayBuffer(e.size);return e.set(new DataView(o),t,isLittleEndian(e.config)),r.set(new Uint8Array(o),n),n+e.size}})}function numberDecoderFactory(e){return o.createDecoder({fixedSize:e.size,read(t,r=0){o.assertByteArrayIsNotEmptyForCodec(e.name,t,r),o.assertByteArrayHasEnoughBytesForCodec(e.name,e.size,t,r);const n=new DataView(function toArrayBuffer(e,t,r){const n=e.byteOffset+(t??0),o=r??e.byteLength;return e.buffer.slice(n,n+o)}(t,r,e.size));return[e.get(n,isLittleEndian(e.config)),r+e.size]}})}var getF32Encoder=(e={})=>numberEncoderFactory({config:e,name:"f32",set:(e,t,r)=>e.setFloat32(0,t,r),size:4}),getF32Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getFloat32(0,t),name:"f32",size:4}),getF64Encoder=(e={})=>numberEncoderFactory({config:e,name:"f64",set:(e,t,r)=>e.setFloat64(0,t,r),size:8}),getF64Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getFloat64(0,t),name:"f64",size:8}),getI128Encoder=(e={})=>numberEncoderFactory({config:e,name:"i128",range:[-BigInt("0x7fffffffffffffffffffffffffffffff")-1n,BigInt("0x7fffffffffffffffffffffffffffffff")],set:(e,t,r)=>{const n=r?8:0,o=r?0:8;e.setBigInt64(n,BigInt(t)>>64n,r),e.setBigUint64(o,0xffffffffffffffffn&BigInt(t),r)},size:16}),getI128Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>{const r=t?8:0,n=t?0:8;return(e.getBigInt64(r,t)<<64n)+e.getBigUint64(n,t)},name:"i128",size:16}),getI16Encoder=(e={})=>numberEncoderFactory({config:e,name:"i16",range:[-Number("0x7fff")-1,Number("0x7fff")],set:(e,t,r)=>e.setInt16(0,t,r),size:2}),getI16Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getInt16(0,t),name:"i16",size:2}),getI32Encoder=(e={})=>numberEncoderFactory({config:e,name:"i32",range:[-Number("0x7fffffff")-1,Number("0x7fffffff")],set:(e,t,r)=>e.setInt32(0,t,r),size:4}),getI32Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getInt32(0,t),name:"i32",size:4}),getI64Encoder=(e={})=>numberEncoderFactory({config:e,name:"i64",range:[-BigInt("0x7fffffffffffffff")-1n,BigInt("0x7fffffffffffffff")],set:(e,t,r)=>e.setBigInt64(0,BigInt(t),r),size:8}),getI64Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getBigInt64(0,t),name:"i64",size:8}),getI8Encoder=()=>numberEncoderFactory({name:"i8",range:[-Number("0x7f")-1,Number("0x7f")],set:(e,t)=>e.setInt8(0,t),size:1}),getI8Decoder=()=>numberDecoderFactory({get:e=>e.getInt8(0),name:"i8",size:1}),getShortU16Encoder=()=>o.createEncoder({getSizeFromValue:e=>e<=127?1:e<=16383?2:3,maxSize:3,write:(e,t,r)=>{assertNumberIsBetweenForCodec("shortU16",0,65535,e);const n=[0];for(let t=0;;t+=1){const r=e>>7*t;if(0===r)break;const o=127&r;n[t]=o,t>0&&(n[t-1]|=128)}return t.set(n,r),r+n.length}}),getShortU16Decoder=()=>o.createDecoder({maxSize:3,read:(e,t)=>{let r=0,n=0;for(;++n;){const o=n-1,i=e[t+o];if(r|=(127&i)<<7*o,!(128&i))break}return[r,t+n]}}),getU128Encoder=(e={})=>numberEncoderFactory({config:e,name:"u128",range:[0n,BigInt("0xffffffffffffffffffffffffffffffff")],set:(e,t,r)=>{const n=r?8:0,o=r?0:8;e.setBigUint64(n,BigInt(t)>>64n,r),e.setBigUint64(o,0xffffffffffffffffn&BigInt(t),r)},size:16}),getU128Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>{const r=t?8:0,n=t?0:8;return(e.getBigUint64(r,t)<<64n)+e.getBigUint64(n,t)},name:"u128",size:16}),getU16Encoder=(e={})=>numberEncoderFactory({config:e,name:"u16",range:[0,Number("0xffff")],set:(e,t,r)=>e.setUint16(0,t,r),size:2}),getU16Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getUint16(0,t),name:"u16",size:2}),getU32Encoder=(e={})=>numberEncoderFactory({config:e,name:"u32",range:[0,Number("0xffffffff")],set:(e,t,r)=>e.setUint32(0,t,r),size:4}),getU32Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getUint32(0,t),name:"u32",size:4}),getU64Encoder=(e={})=>numberEncoderFactory({config:e,name:"u64",range:[0n,BigInt("0xffffffffffffffff")],set:(e,t,r)=>e.setBigUint64(0,BigInt(t),r),size:8}),getU64Decoder=(e={})=>numberDecoderFactory({config:e,get:(e,t)=>e.getBigUint64(0,t),name:"u64",size:8}),getU8Encoder=()=>numberEncoderFactory({name:"u8",range:[0,Number("0xff")],set:(e,t)=>e.setUint8(0,t),size:1}),getU8Decoder=()=>numberDecoderFactory({get:e=>e.getUint8(0),name:"u8",size:1});t.Endian=i,t.assertNumberIsBetweenForCodec=assertNumberIsBetweenForCodec,t.getF32Codec=(e={})=>o.combineCodec(getF32Encoder(e),getF32Decoder(e)),t.getF32Decoder=getF32Decoder,t.getF32Encoder=getF32Encoder,t.getF64Codec=(e={})=>o.combineCodec(getF64Encoder(e),getF64Decoder(e)),t.getF64Decoder=getF64Decoder,t.getF64Encoder=getF64Encoder,t.getI128Codec=(e={})=>o.combineCodec(getI128Encoder(e),getI128Decoder(e)),t.getI128Decoder=getI128Decoder,t.getI128Encoder=getI128Encoder,t.getI16Codec=(e={})=>o.combineCodec(getI16Encoder(e),getI16Decoder(e)),t.getI16Decoder=getI16Decoder,t.getI16Encoder=getI16Encoder,t.getI32Codec=(e={})=>o.combineCodec(getI32Encoder(e),getI32Decoder(e)),t.getI32Decoder=getI32Decoder,t.getI32Encoder=getI32Encoder,t.getI64Codec=(e={})=>o.combineCodec(getI64Encoder(e),getI64Decoder(e)),t.getI64Decoder=getI64Decoder,t.getI64Encoder=getI64Encoder,t.getI8Codec=()=>o.combineCodec(getI8Encoder(),getI8Decoder()),t.getI8Decoder=getI8Decoder,t.getI8Encoder=getI8Encoder,t.getShortU16Codec=()=>o.combineCodec(getShortU16Encoder(),getShortU16Decoder()),t.getShortU16Decoder=getShortU16Decoder,t.getShortU16Encoder=getShortU16Encoder,t.getU128Codec=(e={})=>o.combineCodec(getU128Encoder(e),getU128Decoder(e)),t.getU128Decoder=getU128Decoder,t.getU128Encoder=getU128Encoder,t.getU16Codec=(e={})=>o.combineCodec(getU16Encoder(e),getU16Decoder(e)),t.getU16Decoder=getU16Decoder,t.getU16Encoder=getU16Encoder,t.getU32Codec=(e={})=>o.combineCodec(getU32Encoder(e),getU32Decoder(e)),t.getU32Decoder=getU32Decoder,t.getU32Encoder=getU32Encoder,t.getU64Codec=(e={})=>o.combineCodec(getU64Encoder(e),getU64Decoder(e)),t.getU64Decoder=getU64Decoder,t.getU64Encoder=getU64Encoder,t.getU8Codec=()=>o.combineCodec(getU8Encoder(),getU8Decoder()),t.getU8Decoder=getU8Decoder,t.getU8Encoder=getU8Encoder},972898:(e,t)=>{var r=(()=>!1)(),n=-32700,o=-32603,i=-32602,s=-32601,a=-32600,c=-32016,u=-32015,d=-32014,_=-32013,l=-32012,R=-32011,E=-32010,A=-32009,S=-32008,g=-32007,O=-32006,f=-32005,m=-32004,p=-32003,N=-32002,I=-32001,T=28e5,b=2800001,y=2800002,C=2800003,w=2800004,L=2800005,k=2800006,D=2800007,P=2800008,x=2800009,v=2800010,B=323e4,U=32300001,M=3230002,F=3230003,z=3230004,K=361e4,V=3610001,W=3610002,$=3610003,G=3610004,H=3610005,Y=3610006,j=3704e3,q=3704001,J=3704002,X=3704003,Z=4128e3,Q=4128001,ee=4128002,te=4615e3,re=4615001,ne=4615002,oe=4615003,ie=4615004,se=4615005,ae=4615006,ce=4615007,ue=4615008,de=4615009,_e=4615010,le=4615011,Re=4615012,Ee=4615013,he=4615014,Ae=4615015,Se=4615016,ge=4615017,Oe=4615018,fe=4615019,me=4615020,pe=4615021,Ne=4615022,Ie=4615023,Te=4615024,be=4615025,ye=4615026,Ce=4615027,we=4615028,Le=4615029,ke=4615030,De=4615031,Pe=4615032,xe=4615033,ve=4615034,Be=4615035,Ue=4615036,Me=4615037,Fe=4615038,ze=4615039,Ke=4615040,Ve=4615041,We=4615042,$e=4615043,Ge=4615044,He=4615045,Ye=4615046,je=4615047,qe=4615048,Je=4615049,Xe=4615050,Ze=4615051,Qe=4615052,et=4615053,tt=4615054,rt=5508e3,nt=5508001,ot=5508002,it=5508003,st=5508004,at=5508005,ct=5508006,ut=5508007,dt=5508008,_t=5508009,lt=5508010,Rt=5663e3,Et=5663001,ht=5663002,At=5663003,St=5663004,gt=5663005,Ot=5663006,ft=5663007,mt=5663008,pt=5663009,Nt=5663010,It=5663011,Tt=5663012,bt=5663013,yt=5663014,Ct=705e4,wt=7050001,Lt=7050002,kt=7050003,Dt=7050004,Pt=7050005,xt=7050006,vt=7050007,Bt=7050008,Ut=7050009,Mt=7050010,Ft=7050011,zt=7050012,Kt=7050013,Vt=7050014,Wt=7050015,$t=7050016,Gt=7050017,Ht=7050018,Yt=7050019,jt=7050020,qt=7050021,Jt=7050022,Xt=7050023,Zt=7050024,Qt=7050025,er=7050026,tr=7050027,rr=7050028,nr=7050029,or=7050030,ir=7050031,sr=7050032,ar=7050033,cr=7050034,ur=7050035,dr=7050036,_r=8078e3,lr=8078001,Rr=8078002,Er=8078003,hr=8078004,Ar=8078005,Sr=8078006,gr=8078007,Or=8078008,fr=8078009,mr=8078010,pr=8078011,Nr=8078012,Ir=8078013,Tr=8078014,br=81e5,yr=8100001,Cr=8100002,wr=819e4,Lr=8190001,kr=8190002,Dr=8190003,Pr=8190004,xr=99e5,vr=9900001,Br=9900002,Ur=9900003,Mr={[B]:"Account not found at address: $address",[z]:"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.",[F]:"Expected decoded account at address: $address",[M]:"Failed to decode account data at address: $address",[U]:"Accounts not found at addresses: $addresses",[x]:"Unable to find a viable program address bump seed.",[y]:"$putativeAddress is not a base58-encoded address.",[T]:"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.",[C]:"The `CryptoKey` must be an `Ed25519` public key.",[P]:"Invalid seeds; point must fall off the Ed25519 curve.",[w]:"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].",[k]:"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.",[D]:"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.",[L]:"Expected program derived address bump to be in the range [0, 255], got: $bump.",[v]:"Program address cannot end with PDA marker.",[b]:"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.",4:"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.",1:"The network has progressed past the last block for which this transaction could have been committed.",[_r]:"Codec [$codecDescription] cannot decode empty byte arrays.",[Ar]:"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].",[Sr]:"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].",[hr]:"Encoder and decoder must either both be fixed-size or variable-size.",[Or]:"Enum discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.",[Rr]:"Expected a fixed-size codec, got a variable-size one.",[Ir]:"Codec [$codecDescription] expected a positive byte length, got $bytesLength.",[Er]:"Expected a variable-size codec, got a fixed-size one.",[lr]:"Codec [$codecDescription] expected $expected bytes, got $bytesLength.",[fr]:"Invalid data enum variant. Expected one of [$variants], got $value.",[gr]:"Expected [$codecDescription] to have $expected items, got $actual.",[mr]:"Invalid scalar enum variant. Expected one of [$variants] or a number between $minRange and $maxRange, got $value.",[Nr]:"Invalid value $value for base $base with alphabet $alphabet.",[pr]:"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.",[Tr]:"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.",[de]:"instruction requires an uninitialized account",[Ie]:"instruction tries to borrow reference for an account which is already borrowed",[Te]:"instruction left account with an outstanding borrowed reference",[pe]:"program other than the account's owner changed the size of the account data",[se]:"account data too small for instruction",[Ne]:"instruction expected an executable account",[Ye]:"An account does not have enough lamports to be rent-exempt",[qe]:"Program arithmetic overflowed",[He]:"Failed to serialize or deserialize account data: $encodedData",[tt]:"Builtin programs must consume compute units",[Pe]:"Cross-program invocation call depth too deep",[Fe]:"Computational budget exceeded",[ye]:"custom program error: #$code",[ge]:"instruction contains duplicate accounts",[be]:"instruction modifications of multiply-passed account differ",[ke]:"executable accounts must be rent exempt",[we]:"instruction changed executable accounts data",[Le]:"instruction changed the balance of an executable account",[Oe]:"instruction changed executable bit of an account",[he]:"instruction modified data of an account it does not own",[Ee]:"instruction spent from the balance of an account it does not own",[re]:"generic instruction error",[Xe]:"Provided owner is not allowed",[$e]:"Account is immutable",[Ge]:"Incorrect authority provided",[ce]:"incorrect program id for instruction",[ae]:"insufficient funds for instruction",[ie]:"invalid account data for instruction",[je]:"Invalid account owner",[ne]:"invalid program argument",[Ce]:"program returned invalid error code",[oe]:"invalid instruction data",[Me]:"Failed to reallocate account data",[Ue]:"Provided seeds do not result in a valid address",[Ze]:"Accounts data allocations exceeded the maximum allowed per transaction",[Qe]:"Max accounts exceeded",[et]:"Max instruction trace length exceeded",[Be]:"Length of the seed is too long for address generation",[xe]:"An account required by the instruction is missing",[ue]:"missing required signature for instruction",[Re]:"instruction illegally modified the program id of an account",[me]:"insufficient account keys for instruction",[ze]:"Cross-program invocation with unauthorized signer or writable account",[Ke]:"Failed to create program execution environment",[We]:"Program failed to compile",[Ve]:"Program failed to complete",[Se]:"instruction modified data of a read-only account",[Ae]:"instruction changed the balance of a read-only account",[ve]:"Cross-program invocation reentrancy not allowed for this instruction",[fe]:"instruction modified rent epoch of an account",[le]:"sum of account balances before and after instruction do not match",[_e]:"instruction requires an initialized account",[te]:"",[De]:"Unsupported program id",[Je]:"Unsupported sysvar",[Z]:"The instruction does not have any accounts.",[Q]:"The instruction does not have any data.",[ee]:"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.",5:"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.",2:"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`",[Br]:"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[Ur]:"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[vr]:"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[xr]:"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[o]:"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)",[i]:"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)",[a]:"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)",[s]:"JSON-RPC error: The method does not exist / is not available ($__serverMessage)",[n]:"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)",[l]:"$__serverMessage",[I]:"$__serverMessage",[m]:"$__serverMessage",[d]:"$__serverMessage",[E]:"$__serverMessage",[A]:"$__serverMessage",[c]:"Minimum context slot has not been reached",[f]:"Node is unhealthy; behind by $numSlotsBehind slots",[S]:"No snapshot",[N]:"Transaction simulation failed",[g]:"$__serverMessage",[R]:"Transaction history is not available from this node",[O]:"$__serverMessage",[_]:"Transaction signature length mismatch",[p]:"Transaction signature verification failure",[u]:"$__serverMessage",[j]:"Key pair bytes must be of length 64, got $byteLength.",[q]:"Expected private key bytes with length 32. Actual length: $actualLength.",[J]:"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.",[X]:"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.",6:"Lamports value must be in the range [0, 2e64-1]",7:"`$value` cannot be parsed as a `BigInt`",8:"`$value` cannot be parsed as a `Number`",3:"No nonce account could be found at address `$nonceAccountAddress`",[wr]:"Either the notification name must end in 'Notifications' or the API must supply a subscription creator function for the notification '$notificationName' to map between the notification name and the subscribe/unsubscribe method names.",[Lr]:"Failed to obtain a subscription id from the server",[kr]:"WebSocket was closed before payload could be added to the send buffer",[Dr]:"WebSocket connection closed",[Pr]:"WebSocket failed to connect",[br]:"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.",[Cr]:"HTTP error ($statusCode): $message",[yr]:"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.",[rt]:"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.",[nt]:"The provided value does not implement the `KeyPairSigner` interface",[it]:"The provided value does not implement the `MessageModifyingSigner` interface",[st]:"The provided value does not implement the `MessagePartialSigner` interface",[ot]:"The provided value does not implement any of the `MessageSigner` interfaces",[ct]:"The provided value does not implement the `TransactionModifyingSigner` interface",[ut]:"The provided value does not implement the `TransactionPartialSigner` interface",[dt]:"The provided value does not implement the `TransactionSendingSigner` interface",[at]:"The provided value does not implement any of the `TransactionSigner` interfaces",[_t]:"More than one `TransactionSendingSigner` was identified.",[lt]:"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.",[V]:"No digest implementation could be found.",[K]:"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.",[W]:"This runtime does not support the generation of Ed25519 key pairs.\n\nInstall and import `@solana/webcrypto-ed25519-polyfill` before generating keys in environments that do not support Ed25519.\n\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.",[$]:"No signature verification implementation could be found.",[G]:"No key generation implementation could be found.",[H]:"No signing implementation could be found.",[Y]:"No key export implementation could be found.",9:"Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given",[$t]:"Transaction processing left an account with an outstanding borrowed reference",[wt]:"Account in use",[Lt]:"Account loaded twice",[kt]:"Attempt to debit an account but found no record of a prior credit.",[Xt]:"Transaction loads an address table account that doesn't exist",[vt]:"This transaction has already been processed",[Bt]:"Blockhash not found",[Ut]:"Loader call chain is too deep",[Wt]:"Transactions are currently disabled due to cluster maintenance",[or]:"Transaction contains a duplicate instruction ($index) that is not allowed",[Pt]:"Insufficient funds for fee",[ir]:"Transaction results in an account ($accountIndex) with insufficient funds for rent",[xt]:"This account may not be used to pay transaction fees",[Ft]:"Transaction contains an invalid account reference",[Qt]:"Transaction loads an address table account with invalid data",[er]:"Transaction address table lookup uses an invalid index",[Zt]:"Transaction loads an address table account with an invalid owner",[ar]:"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.",[Kt]:"This program may not be used for executing instructions",[tr]:"Transaction leaves an account with a lower balance than rent-exempt minimum",[Yt]:"Transaction loads a writable account that cannot be written",[sr]:"Transaction exceeded max loaded accounts data size cap",[Mt]:"Transaction requires a fee but has no signature present",[Dt]:"Attempt to load a program that does not exist",[ur]:"Execution of the program referenced by account at index $accountIndex is temporarily restricted.",[cr]:"ResanitizationNeeded",[Vt]:"Transaction failed to sanitize accounts offsets correctly",[zt]:"Transaction did not pass signature verification",[Jt]:"Transaction locked too many accounts",[dr]:"Sum of account balances before and after transaction do not match",[Ct]:"The transaction failed with the error `$errorName`",[Ht]:"Transaction version is unsupported",[qt]:"Transaction would exceed account data limit within the block",[nr]:"Transaction would exceed total account data limit",[jt]:"Transaction would exceed max account limit within the block",[Gt]:"Transaction would exceed max Block Cost Limit",[rr]:"Transaction would exceed max Vote Cost Limit",[Nt]:"Transaction is missing an address at index: $index.",[ht]:"Transaction does not have a blockhash lifetime",[At]:"Transaction is not a durable nonce transaction",[gt]:"Contents of these address lookup tables unknown: $lookupTableAddresses",[Ot]:"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved",[mt]:"No fee payer set in CompiledTransaction",[ft]:"Could not find program address at index $index",[It]:"Transaction is missing a fee payer.",[Tt]:"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.",[yt]:"Transaction first instruction is not advance nonce account instruction.",[bt]:"Transaction with no instructions cannot be durable nonce transaction.",[Rt]:"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees",[Et]:"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable",[pt]:"Transaction is missing signatures for addresses: $addresses.",[St]:"Transaction version must be in the range [0, 127]. `$actualVersion` given"};function encodeValue(e){return Array.isArray(e)?"%5B"+e.map((e=>"string"==typeof e?encodeURIComponent(`"${e.replace(/"/g,'\\"')}"`):encodeValue(e))).join("%2C%20")+"%5D":"bigint"==typeof e?`${e}n`:encodeURIComponent(String(null!=e&&null===Object.getPrototypeOf(e)?{...e}:e))}function encodeObjectContextEntry([e,t]){return`${e}=${encodeValue(t)}`}function getErrorMessage(e,t={}){if(r)return function getHumanReadableErrorMessage(e,t={}){return Mr[e].replace(/(?<!\\)\$(\w+)/g,((e,r)=>r in t?`${t[r]}`:e))}(e,t);{let r=`Solana error #${e}; Decode this error by running \`npx @solana/errors decode ${e}`;return Object.keys(t).length&&(r+=` $"${function encodeContextObject(e){return Object.entries(e).map(encodeObjectContextEntry).join("&")}(t)}"`),`${r}\``}}var Fr=class extends Error{context;constructor(...[e,t]){let r,n;if(t){const{cause:e,...o}=t;e&&(n={cause:e}),Object.keys(o).length>0&&(r=o)}super(getErrorMessage(e,r),n),this.context={__code:e,...r},this.name="SolanaError"}};function safeCaptureStackTrace(...e){"captureStackTrace"in Error&&"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(...e)}function getSolanaErrorFromRpcError({errorCodeBaseOffset:e,getErrorContext:t,orderedErrorNames:r,rpcEnumError:n},o){let i,s;"string"==typeof n?i=n:(i=Object.keys(n)[0],s=n[i]);const a=e+r.indexOf(i),c=t(a,i,s),u=new Fr(a,c);return safeCaptureStackTrace(u,o),u}var zr=["GenericError","InvalidArgument","InvalidInstructionData","InvalidAccountData","AccountDataTooSmall","InsufficientFunds","IncorrectProgramId","MissingRequiredSignature","AccountAlreadyInitialized","UninitializedAccount","UnbalancedInstruction","ModifiedProgramId","ExternalAccountLamportSpend","ExternalAccountDataModified","ReadonlyLamportChange","ReadonlyDataModified","DuplicateAccountIndex","ExecutableModified","RentEpochModified","NotEnoughAccountKeys","AccountDataSizeChanged","AccountNotExecutable","AccountBorrowFailed","AccountBorrowOutstanding","DuplicateAccountOutOfSync","Custom","InvalidError","ExecutableDataModified","ExecutableLamportChange","ExecutableAccountNotRentExempt","UnsupportedProgramId","CallDepth","MissingAccount","ReentrancyNotAllowed","MaxSeedLengthExceeded","InvalidSeeds","InvalidRealloc","ComputationalBudgetExceeded","PrivilegeEscalation","ProgramEnvironmentSetupFailure","ProgramFailedToComplete","ProgramFailedToCompile","Immutable","IncorrectAuthority","BorshIoError","AccountNotRentExempt","InvalidAccountOwner","ArithmeticOverflow","UnsupportedSysvar","IllegalOwner","MaxAccountsDataAllocationsExceeded","MaxAccountsExceeded","MaxInstructionTraceLengthExceeded","BuiltinProgramsMustConsumeComputeUnits"];function getSolanaErrorFromInstructionError(e,t){return getSolanaErrorFromRpcError({errorCodeBaseOffset:4615001,getErrorContext:(t,r,n)=>t===te?{errorName:r,index:e,...void 0!==n?{instructionErrorContext:n}:null}:t===ye?{code:n,index:e}:t===He?{encodedData:n,index:e}:{index:e},orderedErrorNames:zr,rpcEnumError:t},getSolanaErrorFromInstructionError)}var Kr=["AccountInUse","AccountLoadedTwice","AccountNotFound","ProgramAccountNotFound","InsufficientFundsForFee","InvalidAccountForFee","AlreadyProcessed","BlockhashNotFound","CallChainTooDeep","MissingSignatureForFee","InvalidAccountIndex","SignatureFailure","InvalidProgramForExecution","SanitizeFailure","ClusterMaintenance","AccountBorrowOutstanding","WouldExceedMaxBlockCostLimit","UnsupportedVersion","InvalidWritableAccount","WouldExceedMaxAccountCostLimit","WouldExceedAccountDataBlockLimit","TooManyAccountLocks","AddressLookupTableNotFound","InvalidAddressLookupTableOwner","InvalidAddressLookupTableData","InvalidAddressLookupTableIndex","InvalidRentPayingAccount","WouldExceedMaxVoteCostLimit","WouldExceedAccountDataTotalLimit","DuplicateInstruction","InsufficientFundsForRent","MaxLoadedAccountsDataSizeExceeded","InvalidLoadedAccountsDataSizeLimit","ResanitizationNeeded","ProgramExecutionTemporarilyRestricted","UnbalancedTransaction"];function getSolanaErrorFromTransactionError(e){return"object"==typeof e&&"InstructionError"in e?getSolanaErrorFromInstructionError(...e.InstructionError):getSolanaErrorFromRpcError({errorCodeBaseOffset:7050001,getErrorContext:(e,t,r)=>e===Ct?{errorName:t,...void 0!==r?{transactionErrorContext:r}:null}:e===or?{index:r}:e===ir||e===ur?{accountIndex:r.account_index}:void 0,orderedErrorNames:Kr,rpcEnumError:e},getSolanaErrorFromTransactionError)}t.SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND=B,t.SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED=z,t.SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT=F,t.SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT=M,t.SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND=U,t.SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED=x,t.SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS=y,t.SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH=T,t.SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY=C,t.SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE=P,t.SOLANA_ERROR__ADDRESSES__MALFORMED_PDA=w,t.SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED=k,t.SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED=D,t.SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE=L,t.SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER=v,t.SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE=b,t.SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE=4,t.SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED=1,t.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY=_r,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH=Ar,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH=Sr,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH=hr,t.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE=Or,t.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH=Rr,t.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH=Ir,t.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH=Er,t.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH=lr,t.SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT=fr,t.SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS=gr,t.SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT=mr,t.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE=Nr,t.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE=pr,t.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE=Tr,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED=de,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED=Ie,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=Te,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED=pe,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL=se,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE=Ne,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT=Ye,t.SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW=qe,t.SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR=He,t.SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS=tt,t.SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH=Pe,t.SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED=Fe,t.SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM=ye,t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX=ge,t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC=be,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT=ke,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED=we,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE=Le,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED=Oe,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED=he,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND=Ee,t.SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR=re,t.SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER=Xe,t.SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE=$e,t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY=Ge,t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID=ce,t.SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS=ae,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA=ie,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER=je,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT=ne,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR=Ce,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA=oe,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC=Me,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS=Ue,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED=Ze,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED=Qe,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED=et,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED=Be,t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT=xe,t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE=ue,t.SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID=Re,t.SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS=me,t.SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION=ze,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE=Ke,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE=We,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE=Ve,t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED=Se,t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE=Ae,t.SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED=ve,t.SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED=fe,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION=le,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT=_e,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN=te,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID=De,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR=Je,t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS=Z,t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA=Q,t.SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH=ee,t.SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH=5,t.SOLANA_ERROR__INVALID_NONCE=2,t.SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING=Br,t.SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE=Ur,t.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE=vr,t.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING=xr,t.SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR=o,t.SOLANA_ERROR__JSON_RPC__INVALID_PARAMS=i,t.SOLANA_ERROR__JSON_RPC__INVALID_REQUEST=a,t.SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND=s,t.SOLANA_ERROR__JSON_RPC__PARSE_ERROR=n,t.SOLANA_ERROR__JSON_RPC__SCAN_ERROR=l,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP=I,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE=m,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET=d,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX=E,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED=A,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED=c,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY=f,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT=S,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE=N,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED=g,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE=R,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE=O,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH=_,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE=p,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION=u,t.SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH=j,t.SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH=q,t.SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH=J,t.SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE=X,t.SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE=6,t.SOLANA_ERROR__MALFORMED_BIGINT_STRING=7,t.SOLANA_ERROR__MALFORMED_NUMBER_STRING=8,t.SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND=3,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST=wr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID=Lr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED=kr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED=Dr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT=Pr,t.SOLANA_ERROR__RPC__INTEGER_OVERFLOW=br,t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR=Cr,t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN=yr,t.SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS=rt,t.SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER=nt,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER=it,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER=st,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER=ot,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER=ct,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER=ut,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER=dt,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER=at,t.SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS=_t,t.SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING=lt,t.SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED=V,t.SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT=K,t.SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED=W,t.SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED=$,t.SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED=G,t.SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED=H,t.SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED=Y,t.SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE=9,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=$t,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE=wt,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE=Lt,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND=kt,t.SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND=Xt,t.SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED=vt,t.SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND=Bt,t.SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP=Ut,t.SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE=Wt,t.SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION=or,t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE=Pt,t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT=ir,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE=xt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX=Ft,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA=Qt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX=er,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER=Zt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT=ar,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION=Kt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT=tr,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT=Yt,t.SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED=sr,t.SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE=Mt,t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND=Dt,t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED=ur,t.SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED=cr,t.SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE=Vt,t.SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE=zt,t.SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS=Jt,t.SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION=dr,t.SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN=Ct,t.SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION=Ht,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT=qt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT=nr,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT=jt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT=Gt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT=rr,t.SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING=Nt,t.SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME=ht,t.SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME=At,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING=gt,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE=Ot,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING=mt,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND=ft,t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING=It,t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING=Tt,t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE=yt,t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING=bt,t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES=Rt,t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE=Et,t.SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING=pt,t.SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE=St,t.SolanaError=Fr,t.getSolanaErrorFromInstructionError=getSolanaErrorFromInstructionError,t.getSolanaErrorFromJsonRpcError=function getSolanaErrorFromJsonRpcError({code:e,data:t,message:r}){let c;if(e===N){const{err:e,...r}=t,n=e?{cause:getSolanaErrorFromTransactionError(e)}:null;c=new Fr(N,{...r,...n})}else{let _;switch(e){case o:case i:case a:case s:case n:case l:case I:case m:case d:case E:case A:case g:case O:case u:_={__serverMessage:r};break;default:"object"!=typeof t||Array.isArray(t)||(_=t)}c=new Fr(e,_)}return safeCaptureStackTrace(c,getSolanaErrorFromJsonRpcError),c},t.getSolanaErrorFromTransactionError=getSolanaErrorFromTransactionError,t.isSolanaError=function isSolanaError(e,t){return!!(e instanceof Error&&"SolanaError"===e.name)&&(void 0===t||e.context.__code===t)},t.safeCaptureStackTrace=safeCaptureStackTrace},822319:(e,t,r)=>{var n=r(268117),o=r(878053),i=r(701536),s=r(126222),a=r(414014);Object.keys(n).forEach((function(e){"default"===e||Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:function(){return n[e]}})})),Object.keys(o).forEach((function(e){"default"===e||Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:function(){return o[e]}})})),Object.keys(i).forEach((function(e){"default"===e||Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:function(){return i[e]}})})),Object.keys(s).forEach((function(e){"default"===e||Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:function(){return s[e]}})})),Object.keys(a).forEach((function(e){"default"===e||Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:function(){return a[e]}})}))},878053:(e,t,r)=>{var n=r(268117),o=r(701536),i=r(485341);function assertValidNumberOfItemsForCodec(e,t,r){if(t!==r)throw new i.SolanaError(i.SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS,{actual:r,codecDescription:e,expected:t})}function sumCodecSizes(e){return e.reduce(((e,t)=>null===e||null===t?null:e+t),0)}function getFixedSize(e){return n.isFixedSize(e)?e.fixedSize:null}function getMaxSize(e){return n.isFixedSize(e)?e.fixedSize:e.maxSize??null}function getArrayEncoder(e,t={}){const r=t.size??o.getU32Encoder(),i=computeArrayLikeCodecSize(r,getFixedSize(e)),s=computeArrayLikeCodecSize(r,getMaxSize(e))??void 0;return n.createEncoder({...null!==i?{fixedSize:i}:{getSizeFromValue:t=>("object"==typeof r?n.getEncodedSize(t.length,r):0)+[...t].reduce(((t,r)=>t+n.getEncodedSize(r,e)),0),maxSize:s},write:(t,n,o)=>("number"==typeof r&&assertValidNumberOfItemsForCodec("array",r,t.length),"object"==typeof r&&(o=r.write(t.length,n,o)),t.forEach((t=>{o=e.write(t,n,o)})),o)})}function getArrayDecoder(e,t={}){const r=t.size??o.getU32Decoder(),i=getFixedSize(e),s=computeArrayLikeCodecSize(r,i),a=computeArrayLikeCodecSize(r,getMaxSize(e))??void 0;return n.createDecoder({...null!==s?{fixedSize:s}:{maxSize:a},read:(t,n)=>{const o=[];if("object"==typeof r&&0===t.slice(n).length)return[o,n];if("remainder"===r){for(;n<t.length;){const[r,i]=e.read(t,n);n=i,o.push(r)}return[o,n]}const[i,s]="number"==typeof r?[r,n]:r.read(t,n);n=s;for(let r=0;r<i;r+=1){const[r,i]=e.read(t,n);n=i,o.push(r)}return[o,n]}})}function computeArrayLikeCodecSize(e,t){return"number"!=typeof e?null:0===e?0:null===t?null:t*e}function getBitArrayEncoder(e,t={}){const r=("boolean"==typeof t?{backward:t}:t).backward??!1;return n.createEncoder({fixedSize:e,write(t,n,o){const i=[];for(let n=0;n<e;n+=1){let e=0;for(let o=0;o<8;o+=1){e|=Number(t[8*n+o]??0)<<(r?o:7-o)}r?i.unshift(e):i.push(e)}return n.set(i,o),e}})}function getBitArrayDecoder(e,t={}){const r=("boolean"==typeof t?{backward:t}:t).backward??!1;return n.createDecoder({fixedSize:e,read(t,o){n.assertByteArrayHasEnoughBytesForCodec("bitArray",e,t,o);const i=[];let s=t.slice(o,o+e);return s=r?s.reverse():s,s.forEach((e=>{for(let t=0;t<8;t+=1)r?(i.push(Boolean(1&e)),e>>=1):(i.push(Boolean(128&e)),e<<=1)})),[i,o+e]}})}function getBooleanEncoder(e={}){const t=e.size??o.getU8Encoder();return n.assertIsFixedSize(t),n.mapEncoder(t,(e=>e?1:0))}function getBooleanDecoder(e={}){const t=e.size??o.getU8Decoder();return n.assertIsFixedSize(t),n.mapDecoder(t,(e=>1===Number(e)))}function getBytesEncoder(e={}){const t=e.size??"variable",r=n.createEncoder({getSizeFromValue:e=>e.length,write:(e,t,r)=>(t.set(e,r),r+e.length)});return"variable"===t?r:"number"==typeof t?n.fixEncoder(r,t):n.createEncoder({getSizeFromValue:e=>n.getEncodedSize(e.length,t)+e.length,write:(e,n,o)=>(o=t.write(e.length,n,o),r.write(e,n,o))})}function getBytesDecoder(e={}){const t=e.size??"variable",r=n.createDecoder({read:(e,t)=>{const r=e.slice(t);return[r,t+r.length]}});return"variable"===t?r:"number"==typeof t?n.fixDecoder(r,t):n.createDecoder({read:(e,o)=>{n.assertByteArrayIsNotEmptyForCodec("bytes",e,o);const[i,s]=t.read(e,o),a=Number(i);o=s;const c=e.slice(o,o+a);n.assertByteArrayHasEnoughBytesForCodec("bytes",a,c);const[u,d]=r.read(c,0);return[u,o+=d]}})}function getDataEnumEncoder(e,t={}){const r=t.size??o.getU8Encoder(),i=getDataEnumFixedSize(e,r);return n.createEncoder({...null!==i?{fixedSize:i}:{getSizeFromValue:t=>{const o=getVariantDiscriminator(e,t),i=e[o][1];return n.getEncodedSize(o,r)+n.getEncodedSize(t,i)},maxSize:getDataEnumMaxSize(e,r)},write:(t,n,o)=>{const i=getVariantDiscriminator(e,t);o=r.write(i,n,o);return e[i][1].write(t,n,o)}})}function getDataEnumDecoder(e,t={}){const r=t.size??o.getU8Decoder(),s=getDataEnumFixedSize(e,r);return n.createDecoder({...null!==s?{fixedSize:s}:{maxSize:getDataEnumMaxSize(e,r)},read:(t,o)=>{n.assertByteArrayIsNotEmptyForCodec("dataEnum",t,o);const[s,a]=r.read(t,o);o=a;const c=e[Number(s)]??null;if(!c)throw new i.SolanaError(i.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,{discriminator:s,maxRange:e.length-1,minRange:0});const[u,d]=c[1].read(t,o);return o=d,[{__kind:c[0],...u??{}},o]}})}function getDataEnumFixedSize(e,t){if(0===e.length)return n.isFixedSize(t)?t.fixedSize:null;if(!n.isFixedSize(e[0][1]))return null;const r=e[0][1].fixedSize;return e.every((e=>n.isFixedSize(e[1])&&e[1].fixedSize===r))&&n.isFixedSize(t)?t.fixedSize+r:null}function getDataEnumMaxSize(e,t){const r=function maxCodecSizes(e){return e.reduce(((e,t)=>null===e||null===t?null:Math.max(e,t)),0)}(e.map((([,e])=>getMaxSize(e))));return sumCodecSizes([getMaxSize(t),r])??void 0}function getVariantDiscriminator(e,t){const r=e.findIndex((([e])=>t.__kind===e));if(r<0)throw new i.SolanaError(i.SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT,{value:t.__kind,variants:e.map((([e])=>e))});return r}function getTupleEncoder(e){const t=sumCodecSizes(e.map(getFixedSize)),r=sumCodecSizes(e.map(getMaxSize))??void 0;return n.createEncoder({...null===t?{getSizeFromValue:t=>e.map(((e,r)=>n.getEncodedSize(t[r],e))).reduce(((e,t)=>e+t),0),maxSize:r}:{fixedSize:t},write:(t,r,n)=>(assertValidNumberOfItemsForCodec("tuple",e.length,t.length),e.forEach(((e,o)=>{n=e.write(t[o],r,n)})),n)})}function getTupleDecoder(e){const t=sumCodecSizes(e.map(getFixedSize)),r=sumCodecSizes(e.map(getMaxSize))??void 0;return n.createDecoder({...null===t?{maxSize:r}:{fixedSize:t},read:(t,r)=>{const n=[];return e.forEach((e=>{const[o,i]=e.read(t,r);n.push(o),r=i})),[n,r]}})}function getMapEncoder(e,t,r={}){return n.mapEncoder(getArrayEncoder(getTupleEncoder([e,t]),r),(e=>[...e.entries()]))}function getMapDecoder(e,t,r={}){return n.mapDecoder(getArrayDecoder(getTupleDecoder([e,t]),r),(e=>new Map(e)))}function getNullableEncoder(e,t={}){const r=t.prefix??o.getU8Encoder(),i=t.fixed??!1,s=n.isFixedSize(e)&&n.isFixedSize(r)&&0===e.fixedSize;if(i||s){n.assertIsFixedSize(e),n.assertIsFixedSize(r);const t=r.fixedSize+e.fixedSize;return n.createEncoder({fixedSize:t,write:(n,o,i)=>{const s=r.write(Number(null!==n),o,i);return null!==n&&e.write(n,o,s),i+t}})}return n.createEncoder({getSizeFromValue:t=>n.getEncodedSize(Number(null!==t),r)+(null!==t?n.getEncodedSize(t,e):0),maxSize:sumCodecSizes([r,e].map(getMaxSize))??void 0,write:(t,n,o)=>(o=r.write(Number(null!==t),n,o),null!==t&&(o=e.write(t,n,o)),o)})}function getNullableDecoder(e,t={}){const r=t.prefix??o.getU8Decoder(),i=t.fixed??!1;let s=null;const a=n.isFixedSize(e)&&n.isFixedSize(r)&&0===e.fixedSize;return(i||a)&&(n.assertIsFixedSize(e),n.assertIsFixedSize(r),s=r.fixedSize+e.fixedSize),n.createDecoder({...null===s?{maxSize:sumCodecSizes([r,e].map(getMaxSize))??void 0}:{fixedSize:s},read:(t,n)=>{if(t.length-n<=0)return[null,n];const[o,i]=r.read(t,n);if(0===o)return[null,null!==s?n+s:i];const[a,c]=e.read(t,i);return[a,null!==s?n+s:c]}})}function getScalarEnumEncoder(e,t={}){const r=t.size??o.getU8Encoder(),{minRange:s,maxRange:a,allStringInputs:c,enumKeys:u,enumValues:d}=getScalarEnumStats(e);return n.mapEncoder(r,(e=>{const t="number"==typeof e&&(e<s||e>a),r="string"==typeof e&&!c.includes(e);if(t||r)throw new i.SolanaError(i.SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT,{maxRange:a,minRange:s,value:e,variants:c});if("number"==typeof e)return e;const n=d.indexOf(e);return n>=0?n:u.indexOf(e)}))}function getScalarEnumDecoder(e,t={}){const r=t.size??o.getU8Decoder(),{minRange:s,maxRange:a,enumKeys:c}=getScalarEnumStats(e);return n.mapDecoder(r,(t=>{const r=Number(t);if(r<s||r>a)throw new i.SolanaError(i.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE,{discriminator:r,maxRange:a,minRange:s});return e[c[r]]}))}function getScalarEnumStats(e){const t=Object.values(e).filter((e=>"number"==typeof e)),r=Object.fromEntries(Object.entries(e).slice(t.length)),n=Object.keys(r),o=Object.values(r),i=o.length-1;return{allStringInputs:[...new Set([...n,...o.filter((e=>"string"==typeof e))])],enumKeys:n,enumValues:o,maxRange:i,minRange:0}}function getSetEncoder(e,t={}){return n.mapEncoder(getArrayEncoder(e,t),(e=>[...e]))}function getSetDecoder(e,t={}){return n.mapDecoder(getArrayDecoder(e,t),(e=>new Set(e)))}function getStructEncoder(e){const t=e.map((([,e])=>e)),r=sumCodecSizes(t.map(getFixedSize)),o=sumCodecSizes(t.map(getMaxSize))??void 0;return n.createEncoder({...null===r?{getSizeFromValue:t=>e.map((([e,r])=>n.getEncodedSize(t[e],r))).reduce(((e,t)=>e+t),0),maxSize:o}:{fixedSize:r},write:(t,r,n)=>(e.forEach((([e,o])=>{n=o.write(t[e],r,n)})),n)})}function getStructDecoder(e){const t=e.map((([,e])=>e)),r=sumCodecSizes(t.map(getFixedSize)),o=sumCodecSizes(t.map(getMaxSize))??void 0;return n.createDecoder({...null===r?{maxSize:o}:{fixedSize:r},read:(t,r)=>{const n={};return e.forEach((([e,o])=>{const[i,s]=o.read(t,r);r=s,n[e]=i})),[n,r]}})}function getUnitEncoder(){return n.createEncoder({fixedSize:0,write:(e,t,r)=>r})}function getUnitDecoder(){return n.createDecoder({fixedSize:0,read:(e,t)=>[void 0,t]})}t.assertValidNumberOfItemsForCodec=assertValidNumberOfItemsForCodec,t.getArrayCodec=function getArrayCodec(e,t={}){return n.combineCodec(getArrayEncoder(e,t),getArrayDecoder(e,t))},t.getArrayDecoder=getArrayDecoder,t.getArrayEncoder=getArrayEncoder,t.getBitArrayCodec=function getBitArrayCodec(e,t={}){return n.combineCodec(getBitArrayEncoder(e,t),getBitArrayDecoder(e,t))},t.getBitArrayDecoder=getBitArrayDecoder,t.getBitArrayEncoder=getBitArrayEncoder,t.getBooleanCodec=function getBooleanCodec(e={}){return n.combineCodec(getBooleanEncoder(e),getBooleanDecoder(e))},t.getBooleanDecoder=getBooleanDecoder,t.getBooleanEncoder=getBooleanEncoder,t.getBytesCodec=function getBytesCodec(e={}){return n.combineCodec(getBytesEncoder(e),getBytesDecoder(e))},t.getBytesDecoder=getBytesDecoder,t.getBytesEncoder=getBytesEncoder,t.getDataEnumCodec=function getDataEnumCodec(e,t={}){return n.combineCodec(getDataEnumEncoder(e,t),getDataEnumDecoder(e,t))},t.getDataEnumDecoder=getDataEnumDecoder,t.getDataEnumEncoder=getDataEnumEncoder,t.getMapCodec=function getMapCodec(e,t,r={}){return n.combineCodec(getMapEncoder(e,t,r),getMapDecoder(e,t,r))},t.getMapDecoder=getMapDecoder,t.getMapEncoder=getMapEncoder,t.getNullableCodec=function getNullableCodec(e,t={}){const r=t;return n.combineCodec(getNullableEncoder(e,r),getNullableDecoder(e,r))},t.getNullableDecoder=getNullableDecoder,t.getNullableEncoder=getNullableEncoder,t.getScalarEnumCodec=function getScalarEnumCodec(e,t={}){return n.combineCodec(getScalarEnumEncoder(e,t),getScalarEnumDecoder(e,t))},t.getScalarEnumDecoder=getScalarEnumDecoder,t.getScalarEnumEncoder=getScalarEnumEncoder,t.getSetCodec=function getSetCodec(e,t={}){return n.combineCodec(getSetEncoder(e,t),getSetDecoder(e,t))},t.getSetDecoder=getSetDecoder,t.getSetEncoder=getSetEncoder,t.getStructCodec=function getStructCodec(e){return n.combineCodec(getStructEncoder(e),getStructDecoder(e))},t.getStructDecoder=getStructDecoder,t.getStructEncoder=getStructEncoder,t.getTupleCodec=function getTupleCodec(e){return n.combineCodec(getTupleEncoder(e),getTupleDecoder(e))},t.getTupleDecoder=getTupleDecoder,t.getTupleEncoder=getTupleEncoder,t.getUnitCodec=function getUnitCodec(){return n.combineCodec(getUnitEncoder(),getUnitDecoder())},t.getUnitDecoder=getUnitDecoder,t.getUnitEncoder=getUnitEncoder},126222:(e,t,r)=>{var n=r(485341),o=r(268117),i=r(701536);function assertValidBaseString(e,t,r=t){if(!t.match(new RegExp(`^[${e}]*$`)))throw new n.SolanaError(n.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE,{alphabet:e,base:e.length,value:r})}var getBaseXEncoder=e=>o.createEncoder({getSizeFromValue:t=>{const[r,n]=partitionLeadingZeroes(t,e[0]);if(!n)return t.length;const o=getBigIntFromBaseX(n,e);return r.length+Math.ceil(o.toString(16).length/2)},write(t,r,n){if(assertValidBaseString(e,t),""===t)return n;const[o,i]=partitionLeadingZeroes(t,e[0]);if(!i)return r.set(new Uint8Array(o.length).fill(0),n),n+o.length;let s=getBigIntFromBaseX(i,e);const a=[];for(;s>0n;)a.unshift(Number(s%256n)),s/=256n;const c=[...Array(o.length).fill(0),...a];return r.set(c,n),n+c.length}}),getBaseXDecoder=e=>o.createDecoder({read(t,r){const n=0===r?t:t.slice(r);if(0===n.length)return["",0];let o=n.findIndex((e=>0!==e));o=-1===o?n.length:o;const i=e[0].repeat(o);if(o===n.length)return[i,t.length];const s=function getBaseXFromBigInt(e,t){const r=BigInt(t.length),n=[];for(;e>0n;)n.unshift(t[Number(e%r)]),e/=r;return n.join("")}(n.slice(o).reduce(((e,t)=>256n*e+BigInt(t)),0n),e);return[i+s,t.length]}}),getBaseXCodec=e=>o.combineCodec(getBaseXEncoder(e),getBaseXDecoder(e));function partitionLeadingZeroes(e,t){const[r,n]=e.split(new RegExp(`((?!${t}).*)`));return[r,n]}function getBigIntFromBaseX(e,t){const r=BigInt(t.length);let n=0n;for(const o of e)n*=r,n+=BigInt(t.indexOf(o));return n}var s="0123456789",getBase16Encoder=()=>o.createEncoder({getSizeFromValue:e=>Math.ceil(e.length/2),write(e,t,r){const n=e.toLowerCase();assertValidBaseString("0123456789abcdef",n,e);const o=n.match(/.{1,2}/g),i=o?o.map((e=>parseInt(e,16))):[];return t.set(i,r),i.length+r}}),getBase16Decoder=()=>o.createDecoder({read:(e,t)=>[e.slice(t).reduce(((e,t)=>e+t.toString(16).padStart(2,"0")),""),e.length]}),a="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",getBaseXResliceEncoder=(e,t)=>o.createEncoder({getSizeFromValue:e=>Math.floor(e.length*t/8),write(r,n,o){if(assertValidBaseString(e,r),""===r)return o;const i=reslice([...r].map((t=>e.indexOf(t))),t,8,!1);return n.set(i,o),i.length+o}}),getBaseXResliceDecoder=(e,t)=>o.createDecoder({read(r,n=0){const o=0===n?r:r.slice(n);if(0===o.length)return["",r.length];return[reslice([...o],8,t,!0).map((t=>e[t])).join(""),r.length]}});function reslice(e,t,r,n){const o=[];let i=0,s=0;const a=(1<<r)-1;for(const n of e)for(i=i<<t|n,s+=t;s>=r;)s-=r,o.push(i>>s&a);return n&&s>0&&o.push(i<<r-s&a),o}var c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",getBase64Encoder=()=>o.createEncoder({getSizeFromValue:e=>{try{return atob(e).length}catch(t){throw new n.SolanaError(n.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE,{alphabet:c,base:64,value:e})}},write(e,t,r){try{const n=atob(e).split("").map((e=>e.charCodeAt(0)));return t.set(n,r),n.length+r}catch(t){throw new n.SolanaError(n.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE,{alphabet:c,base:64,value:e})}}}),getBase64Decoder=()=>o.createDecoder({read(e,t=0){const r=e.slice(t);return[btoa(String.fromCharCode(...r)),e.length]}}),removeNullCharacters=e=>e.replace(/\u0000/g,""),u=globalThis.TextDecoder,d=globalThis.TextEncoder,getUtf8Encoder=()=>{let e;return o.createEncoder({getSizeFromValue:t=>(e||=new d).encode(t).length,write:(t,r,n)=>{const o=(e||=new d).encode(t);return r.set(o,n),n+o.length}})},getUtf8Decoder=()=>{let e;return o.createDecoder({read(t,r){const n=(e||=new u).decode(t.slice(r));return[removeNullCharacters(n),t.length]}})};function getStringEncoder(e={}){const t=e.size??i.getU32Encoder(),r=e.encoding??getUtf8Encoder();return"variable"===t?r:"number"==typeof t?o.fixEncoder(r,t):o.createEncoder({getSizeFromValue:e=>{const n=o.getEncodedSize(e,r);return o.getEncodedSize(n,t)+n},write:(e,n,i)=>{const s=o.getEncodedSize(e,r);return i=t.write(s,n,i),r.write(e,n,i)}})}function getStringDecoder(e={}){const t=e.size??i.getU32Decoder(),r=e.encoding??getUtf8Decoder();return"variable"===t?r:"number"==typeof t?o.fixDecoder(r,t):o.createDecoder({read:(e,n=0)=>{o.assertByteArrayIsNotEmptyForCodec("string",e,n);const[i,s]=t.read(e,n),a=Number(i);n=s;const c=e.slice(n,n+a);o.assertByteArrayHasEnoughBytesForCodec("string",a,c);const[u,d]=r.read(c,0);return[u,n+=d]}})}t.assertValidBaseString=assertValidBaseString,t.getBase10Codec=()=>getBaseXCodec(s),t.getBase10Decoder=()=>getBaseXDecoder(s),t.getBase10Encoder=()=>getBaseXEncoder(s),t.getBase16Codec=()=>o.combineCodec(getBase16Encoder(),getBase16Decoder()),t.getBase16Decoder=getBase16Decoder,t.getBase16Encoder=getBase16Encoder,t.getBase58Codec=()=>getBaseXCodec(a),t.getBase58Decoder=()=>getBaseXDecoder(a),t.getBase58Encoder=()=>getBaseXEncoder(a),t.getBase64Codec=()=>o.combineCodec(getBase64Encoder(),getBase64Decoder()),t.getBase64Decoder=getBase64Decoder,t.getBase64Encoder=getBase64Encoder,t.getBaseXCodec=getBaseXCodec,t.getBaseXDecoder=getBaseXDecoder,t.getBaseXEncoder=getBaseXEncoder,t.getBaseXResliceCodec=(e,t)=>o.combineCodec(getBaseXResliceEncoder(e,t),getBaseXResliceDecoder(e,t)),t.getBaseXResliceDecoder=getBaseXResliceDecoder,t.getBaseXResliceEncoder=getBaseXResliceEncoder,t.getStringCodec=function getStringCodec(e={}){return o.combineCodec(getStringEncoder(e),getStringDecoder(e))},t.getStringDecoder=getStringDecoder,t.getStringEncoder=getStringEncoder,t.getUtf8Codec=()=>o.combineCodec(getUtf8Encoder(),getUtf8Decoder()),t.getUtf8Decoder=getUtf8Decoder,t.getUtf8Encoder=getUtf8Encoder,t.padNullCharacters=(e,t)=>e.padEnd(t,"\0"),t.removeNullCharacters=removeNullCharacters},485341:(e,t)=>{var r=(()=>!1)(),n=-32700,o=-32603,i=-32602,s=-32601,a=-32600,c=-32016,u=-32015,d=-32014,_=-32013,l=-32012,R=-32011,E=-32010,A=-32009,S=-32008,g=-32007,O=-32006,f=-32005,m=-32004,p=-32003,N=-32002,I=-32001,T=28e5,b=2800001,y=2800002,C=2800003,w=2800004,L=2800005,k=2800006,D=2800007,P=2800008,x=2800009,v=2800010,B=323e4,U=32300001,M=3230002,F=3230003,z=3230004,K=361e4,V=3610001,W=3610002,$=3610003,G=3610004,H=3610005,Y=3610006,j=3704e3,q=3704001,J=3704002,X=3704003,Z=4128e3,Q=4128001,ee=4128002,te=4615e3,re=4615001,ne=4615002,oe=4615003,ie=4615004,se=4615005,ae=4615006,ce=4615007,ue=4615008,de=4615009,_e=4615010,le=4615011,Re=4615012,Ee=4615013,he=4615014,Ae=4615015,Se=4615016,ge=4615017,Oe=4615018,fe=4615019,me=4615020,pe=4615021,Ne=4615022,Ie=4615023,Te=4615024,be=4615025,ye=4615026,Ce=4615027,we=4615028,Le=4615029,ke=4615030,De=4615031,Pe=4615032,xe=4615033,ve=4615034,Be=4615035,Ue=4615036,Me=4615037,Fe=4615038,ze=4615039,Ke=4615040,Ve=4615041,We=4615042,$e=4615043,Ge=4615044,He=4615045,Ye=4615046,je=4615047,qe=4615048,Je=4615049,Xe=4615050,Ze=4615051,Qe=4615052,et=4615053,tt=4615054,rt=5508e3,nt=5508001,ot=5508002,it=5508003,st=5508004,at=5508005,ct=5508006,ut=5508007,dt=5508008,_t=5508009,lt=5508010,Rt=5663e3,Et=5663001,ht=5663002,At=5663003,St=5663004,gt=5663005,Ot=5663006,ft=5663007,mt=5663008,pt=5663009,Nt=5663010,It=5663011,Tt=5663012,bt=5663013,yt=5663014,Ct=705e4,wt=7050001,Lt=7050002,kt=7050003,Dt=7050004,Pt=7050005,xt=7050006,vt=7050007,Bt=7050008,Ut=7050009,Mt=7050010,Ft=7050011,zt=7050012,Kt=7050013,Vt=7050014,Wt=7050015,$t=7050016,Gt=7050017,Ht=7050018,Yt=7050019,jt=7050020,qt=7050021,Jt=7050022,Xt=7050023,Zt=7050024,Qt=7050025,er=7050026,tr=7050027,rr=7050028,nr=7050029,or=7050030,ir=7050031,sr=7050032,ar=7050033,cr=7050034,ur=7050035,dr=7050036,_r=8078e3,lr=8078001,Rr=8078002,Er=8078003,hr=8078004,Ar=8078005,Sr=8078006,gr=8078007,Or=8078008,fr=8078009,mr=8078010,pr=8078011,Nr=8078012,Ir=8078013,Tr=8078014,br=81e5,yr=8100001,Cr=8100002,wr=819e4,Lr=8190001,kr=8190002,Dr=8190003,Pr=8190004,xr=99e5,vr=9900001,Br=9900002,Ur=9900003,Mr={[B]:"Account not found at address: $address",[z]:"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.",[F]:"Expected decoded account at address: $address",[M]:"Failed to decode account data at address: $address",[U]:"Accounts not found at addresses: $addresses",[x]:"Unable to find a viable program address bump seed.",[y]:"$putativeAddress is not a base58-encoded address.",[T]:"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.",[C]:"The `CryptoKey` must be an `Ed25519` public key.",[P]:"Invalid seeds; point must fall off the Ed25519 curve.",[w]:"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].",[k]:"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.",[D]:"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.",[L]:"Expected program derived address bump to be in the range [0, 255], got: $bump.",[v]:"Program address cannot end with PDA marker.",[b]:"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.",4:"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.",1:"The network has progressed past the last block for which this transaction could have been committed.",[_r]:"Codec [$codecDescription] cannot decode empty byte arrays.",[Ar]:"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].",[Sr]:"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].",[hr]:"Encoder and decoder must either both be fixed-size or variable-size.",[Or]:"Enum discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.",[Rr]:"Expected a fixed-size codec, got a variable-size one.",[Ir]:"Codec [$codecDescription] expected a positive byte length, got $bytesLength.",[Er]:"Expected a variable-size codec, got a fixed-size one.",[lr]:"Codec [$codecDescription] expected $expected bytes, got $bytesLength.",[fr]:"Invalid data enum variant. Expected one of [$variants], got $value.",[gr]:"Expected [$codecDescription] to have $expected items, got $actual.",[mr]:"Invalid scalar enum variant. Expected one of [$variants] or a number between $minRange and $maxRange, got $value.",[Nr]:"Invalid value $value for base $base with alphabet $alphabet.",[pr]:"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.",[Tr]:"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.",[de]:"instruction requires an uninitialized account",[Ie]:"instruction tries to borrow reference for an account which is already borrowed",[Te]:"instruction left account with an outstanding borrowed reference",[pe]:"program other than the account's owner changed the size of the account data",[se]:"account data too small for instruction",[Ne]:"instruction expected an executable account",[Ye]:"An account does not have enough lamports to be rent-exempt",[qe]:"Program arithmetic overflowed",[He]:"Failed to serialize or deserialize account data: $encodedData",[tt]:"Builtin programs must consume compute units",[Pe]:"Cross-program invocation call depth too deep",[Fe]:"Computational budget exceeded",[ye]:"custom program error: #$code",[ge]:"instruction contains duplicate accounts",[be]:"instruction modifications of multiply-passed account differ",[ke]:"executable accounts must be rent exempt",[we]:"instruction changed executable accounts data",[Le]:"instruction changed the balance of an executable account",[Oe]:"instruction changed executable bit of an account",[he]:"instruction modified data of an account it does not own",[Ee]:"instruction spent from the balance of an account it does not own",[re]:"generic instruction error",[Xe]:"Provided owner is not allowed",[$e]:"Account is immutable",[Ge]:"Incorrect authority provided",[ce]:"incorrect program id for instruction",[ae]:"insufficient funds for instruction",[ie]:"invalid account data for instruction",[je]:"Invalid account owner",[ne]:"invalid program argument",[Ce]:"program returned invalid error code",[oe]:"invalid instruction data",[Me]:"Failed to reallocate account data",[Ue]:"Provided seeds do not result in a valid address",[Ze]:"Accounts data allocations exceeded the maximum allowed per transaction",[Qe]:"Max accounts exceeded",[et]:"Max instruction trace length exceeded",[Be]:"Length of the seed is too long for address generation",[xe]:"An account required by the instruction is missing",[ue]:"missing required signature for instruction",[Re]:"instruction illegally modified the program id of an account",[me]:"insufficient account keys for instruction",[ze]:"Cross-program invocation with unauthorized signer or writable account",[Ke]:"Failed to create program execution environment",[We]:"Program failed to compile",[Ve]:"Program failed to complete",[Se]:"instruction modified data of a read-only account",[Ae]:"instruction changed the balance of a read-only account",[ve]:"Cross-program invocation reentrancy not allowed for this instruction",[fe]:"instruction modified rent epoch of an account",[le]:"sum of account balances before and after instruction do not match",[_e]:"instruction requires an initialized account",[te]:"",[De]:"Unsupported program id",[Je]:"Unsupported sysvar",[Z]:"The instruction does not have any accounts.",[Q]:"The instruction does not have any data.",[ee]:"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.",5:"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.",2:"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`",[Br]:"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[Ur]:"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[vr]:"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[xr]:"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant",[o]:"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)",[i]:"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)",[a]:"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)",[s]:"JSON-RPC error: The method does not exist / is not available ($__serverMessage)",[n]:"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)",[l]:"$__serverMessage",[I]:"$__serverMessage",[m]:"$__serverMessage",[d]:"$__serverMessage",[E]:"$__serverMessage",[A]:"$__serverMessage",[c]:"Minimum context slot has not been reached",[f]:"Node is unhealthy; behind by $numSlotsBehind slots",[S]:"No snapshot",[N]:"Transaction simulation failed",[g]:"$__serverMessage",[R]:"Transaction history is not available from this node",[O]:"$__serverMessage",[_]:"Transaction signature length mismatch",[p]:"Transaction signature verification failure",[u]:"$__serverMessage",[j]:"Key pair bytes must be of length 64, got $byteLength.",[q]:"Expected private key bytes with length 32. Actual length: $actualLength.",[J]:"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.",[X]:"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.",6:"Lamports value must be in the range [0, 2e64-1]",7:"`$value` cannot be parsed as a `BigInt`",8:"`$value` cannot be parsed as a `Number`",3:"No nonce account could be found at address `$nonceAccountAddress`",[wr]:"Either the notification name must end in 'Notifications' or the API must supply a subscription creator function for the notification '$notificationName' to map between the notification name and the subscribe/unsubscribe method names.",[Lr]:"Failed to obtain a subscription id from the server",[kr]:"WebSocket was closed before payload could be added to the send buffer",[Dr]:"WebSocket connection closed",[Pr]:"WebSocket failed to connect",[br]:"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.",[Cr]:"HTTP error ($statusCode): $message",[yr]:"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.",[rt]:"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.",[nt]:"The provided value does not implement the `KeyPairSigner` interface",[it]:"The provided value does not implement the `MessageModifyingSigner` interface",[st]:"The provided value does not implement the `MessagePartialSigner` interface",[ot]:"The provided value does not implement any of the `MessageSigner` interfaces",[ct]:"The provided value does not implement the `TransactionModifyingSigner` interface",[ut]:"The provided value does not implement the `TransactionPartialSigner` interface",[dt]:"The provided value does not implement the `TransactionSendingSigner` interface",[at]:"The provided value does not implement any of the `TransactionSigner` interfaces",[_t]:"More than one `TransactionSendingSigner` was identified.",[lt]:"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.",[V]:"No digest implementation could be found.",[K]:"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.",[W]:"This runtime does not support the generation of Ed25519 key pairs.\n\nInstall and import `@solana/webcrypto-ed25519-polyfill` before generating keys in environments that do not support Ed25519.\n\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.",[$]:"No signature verification implementation could be found.",[G]:"No key generation implementation could be found.",[H]:"No signing implementation could be found.",[Y]:"No key export implementation could be found.",9:"Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given",[$t]:"Transaction processing left an account with an outstanding borrowed reference",[wt]:"Account in use",[Lt]:"Account loaded twice",[kt]:"Attempt to debit an account but found no record of a prior credit.",[Xt]:"Transaction loads an address table account that doesn't exist",[vt]:"This transaction has already been processed",[Bt]:"Blockhash not found",[Ut]:"Loader call chain is too deep",[Wt]:"Transactions are currently disabled due to cluster maintenance",[or]:"Transaction contains a duplicate instruction ($index) that is not allowed",[Pt]:"Insufficient funds for fee",[ir]:"Transaction results in an account ($accountIndex) with insufficient funds for rent",[xt]:"This account may not be used to pay transaction fees",[Ft]:"Transaction contains an invalid account reference",[Qt]:"Transaction loads an address table account with invalid data",[er]:"Transaction address table lookup uses an invalid index",[Zt]:"Transaction loads an address table account with an invalid owner",[ar]:"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.",[Kt]:"This program may not be used for executing instructions",[tr]:"Transaction leaves an account with a lower balance than rent-exempt minimum",[Yt]:"Transaction loads a writable account that cannot be written",[sr]:"Transaction exceeded max loaded accounts data size cap",[Mt]:"Transaction requires a fee but has no signature present",[Dt]:"Attempt to load a program that does not exist",[ur]:"Execution of the program referenced by account at index $accountIndex is temporarily restricted.",[cr]:"ResanitizationNeeded",[Vt]:"Transaction failed to sanitize accounts offsets correctly",[zt]:"Transaction did not pass signature verification",[Jt]:"Transaction locked too many accounts",[dr]:"Sum of account balances before and after transaction do not match",[Ct]:"The transaction failed with the error `$errorName`",[Ht]:"Transaction version is unsupported",[qt]:"Transaction would exceed account data limit within the block",[nr]:"Transaction would exceed total account data limit",[jt]:"Transaction would exceed max account limit within the block",[Gt]:"Transaction would exceed max Block Cost Limit",[rr]:"Transaction would exceed max Vote Cost Limit",[Nt]:"Transaction is missing an address at index: $index.",[ht]:"Transaction does not have a blockhash lifetime",[At]:"Transaction is not a durable nonce transaction",[gt]:"Contents of these address lookup tables unknown: $lookupTableAddresses",[Ot]:"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved",[mt]:"No fee payer set in CompiledTransaction",[ft]:"Could not find program address at index $index",[It]:"Transaction is missing a fee payer.",[Tt]:"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.",[yt]:"Transaction first instruction is not advance nonce account instruction.",[bt]:"Transaction with no instructions cannot be durable nonce transaction.",[Rt]:"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees",[Et]:"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable",[pt]:"Transaction is missing signatures for addresses: $addresses.",[St]:"Transaction version must be in the range [0, 127]. `$actualVersion` given"};function encodeValue(e){return Array.isArray(e)?"%5B"+e.map((e=>"string"==typeof e?encodeURIComponent(`"${e.replace(/"/g,'\\"')}"`):encodeValue(e))).join("%2C%20")+"%5D":"bigint"==typeof e?`${e}n`:encodeURIComponent(String(null!=e&&null===Object.getPrototypeOf(e)?{...e}:e))}function encodeObjectContextEntry([e,t]){return`${e}=${encodeValue(t)}`}function getErrorMessage(e,t={}){if(r)return function getHumanReadableErrorMessage(e,t={}){return Mr[e].replace(/(?<!\\)\$(\w+)/g,((e,r)=>r in t?`${t[r]}`:e))}(e,t);{let r=`Solana error #${e}; Decode this error by running \`npx @solana/errors decode ${e}`;return Object.keys(t).length&&(r+=` $"${function encodeContextObject(e){return Object.entries(e).map(encodeObjectContextEntry).join("&")}(t)}"`),`${r}\``}}var Fr=class extends Error{context;constructor(...[e,t]){let r,n;if(t){const{cause:e,...o}=t;e&&(n={cause:e}),Object.keys(o).length>0&&(r=o)}super(getErrorMessage(e,r),n),this.context={__code:e,...r},this.name="SolanaError"}};function safeCaptureStackTrace(...e){"captureStackTrace"in Error&&"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(...e)}function getSolanaErrorFromRpcError({errorCodeBaseOffset:e,getErrorContext:t,orderedErrorNames:r,rpcEnumError:n},o){let i,s;"string"==typeof n?i=n:(i=Object.keys(n)[0],s=n[i]);const a=e+r.indexOf(i),c=t(a,i,s),u=new Fr(a,c);return safeCaptureStackTrace(u,o),u}var zr=["GenericError","InvalidArgument","InvalidInstructionData","InvalidAccountData","AccountDataTooSmall","InsufficientFunds","IncorrectProgramId","MissingRequiredSignature","AccountAlreadyInitialized","UninitializedAccount","UnbalancedInstruction","ModifiedProgramId","ExternalAccountLamportSpend","ExternalAccountDataModified","ReadonlyLamportChange","ReadonlyDataModified","DuplicateAccountIndex","ExecutableModified","RentEpochModified","NotEnoughAccountKeys","AccountDataSizeChanged","AccountNotExecutable","AccountBorrowFailed","AccountBorrowOutstanding","DuplicateAccountOutOfSync","Custom","InvalidError","ExecutableDataModified","ExecutableLamportChange","ExecutableAccountNotRentExempt","UnsupportedProgramId","CallDepth","MissingAccount","ReentrancyNotAllowed","MaxSeedLengthExceeded","InvalidSeeds","InvalidRealloc","ComputationalBudgetExceeded","PrivilegeEscalation","ProgramEnvironmentSetupFailure","ProgramFailedToComplete","ProgramFailedToCompile","Immutable","IncorrectAuthority","BorshIoError","AccountNotRentExempt","InvalidAccountOwner","ArithmeticOverflow","UnsupportedSysvar","IllegalOwner","MaxAccountsDataAllocationsExceeded","MaxAccountsExceeded","MaxInstructionTraceLengthExceeded","BuiltinProgramsMustConsumeComputeUnits"];function getSolanaErrorFromInstructionError(e,t){return getSolanaErrorFromRpcError({errorCodeBaseOffset:4615001,getErrorContext:(t,r,n)=>t===te?{errorName:r,index:e,...void 0!==n?{instructionErrorContext:n}:null}:t===ye?{code:n,index:e}:t===He?{encodedData:n,index:e}:{index:e},orderedErrorNames:zr,rpcEnumError:t},getSolanaErrorFromInstructionError)}var Kr=["AccountInUse","AccountLoadedTwice","AccountNotFound","ProgramAccountNotFound","InsufficientFundsForFee","InvalidAccountForFee","AlreadyProcessed","BlockhashNotFound","CallChainTooDeep","MissingSignatureForFee","InvalidAccountIndex","SignatureFailure","InvalidProgramForExecution","SanitizeFailure","ClusterMaintenance","AccountBorrowOutstanding","WouldExceedMaxBlockCostLimit","UnsupportedVersion","InvalidWritableAccount","WouldExceedMaxAccountCostLimit","WouldExceedAccountDataBlockLimit","TooManyAccountLocks","AddressLookupTableNotFound","InvalidAddressLookupTableOwner","InvalidAddressLookupTableData","InvalidAddressLookupTableIndex","InvalidRentPayingAccount","WouldExceedMaxVoteCostLimit","WouldExceedAccountDataTotalLimit","DuplicateInstruction","InsufficientFundsForRent","MaxLoadedAccountsDataSizeExceeded","InvalidLoadedAccountsDataSizeLimit","ResanitizationNeeded","ProgramExecutionTemporarilyRestricted","UnbalancedTransaction"];function getSolanaErrorFromTransactionError(e){return"object"==typeof e&&"InstructionError"in e?getSolanaErrorFromInstructionError(...e.InstructionError):getSolanaErrorFromRpcError({errorCodeBaseOffset:7050001,getErrorContext:(e,t,r)=>e===Ct?{errorName:t,...void 0!==r?{transactionErrorContext:r}:null}:e===or?{index:r}:e===ir||e===ur?{accountIndex:r.account_index}:void 0,orderedErrorNames:Kr,rpcEnumError:e},getSolanaErrorFromTransactionError)}t.SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND=B,t.SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED=z,t.SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT=F,t.SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT=M,t.SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND=U,t.SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED=x,t.SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS=y,t.SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH=T,t.SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY=C,t.SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE=P,t.SOLANA_ERROR__ADDRESSES__MALFORMED_PDA=w,t.SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED=k,t.SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED=D,t.SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE=L,t.SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER=v,t.SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE=b,t.SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE=4,t.SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED=1,t.SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY=_r,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH=Ar,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH=Sr,t.SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH=hr,t.SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE=Or,t.SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH=Rr,t.SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH=Ir,t.SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH=Er,t.SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH=lr,t.SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT=fr,t.SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS=gr,t.SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT=mr,t.SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE=Nr,t.SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE=pr,t.SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE=Tr,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED=de,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED=Ie,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=Te,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED=pe,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL=se,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE=Ne,t.SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT=Ye,t.SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW=qe,t.SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR=He,t.SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS=tt,t.SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH=Pe,t.SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED=Fe,t.SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM=ye,t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX=ge,t.SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC=be,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT=ke,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED=we,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE=Le,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED=Oe,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED=he,t.SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND=Ee,t.SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR=re,t.SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER=Xe,t.SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE=$e,t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY=Ge,t.SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID=ce,t.SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS=ae,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA=ie,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER=je,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT=ne,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR=Ce,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA=oe,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC=Me,t.SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS=Ue,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED=Ze,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED=Qe,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED=et,t.SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED=Be,t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT=xe,t.SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE=ue,t.SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID=Re,t.SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS=me,t.SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION=ze,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE=Ke,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE=We,t.SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE=Ve,t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED=Se,t.SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE=Ae,t.SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED=ve,t.SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED=fe,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION=le,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT=_e,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN=te,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID=De,t.SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR=Je,t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS=Z,t.SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA=Q,t.SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH=ee,t.SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH=5,t.SOLANA_ERROR__INVALID_NONCE=2,t.SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING=Br,t.SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE=Ur,t.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE=vr,t.SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING=xr,t.SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR=o,t.SOLANA_ERROR__JSON_RPC__INVALID_PARAMS=i,t.SOLANA_ERROR__JSON_RPC__INVALID_REQUEST=a,t.SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND=s,t.SOLANA_ERROR__JSON_RPC__PARSE_ERROR=n,t.SOLANA_ERROR__JSON_RPC__SCAN_ERROR=l,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP=I,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE=m,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET=d,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX=E,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED=A,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED=c,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY=f,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT=S,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE=N,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED=g,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE=R,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE=O,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH=_,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE=p,t.SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION=u,t.SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH=j,t.SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH=q,t.SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH=J,t.SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE=X,t.SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE=6,t.SOLANA_ERROR__MALFORMED_BIGINT_STRING=7,t.SOLANA_ERROR__MALFORMED_NUMBER_STRING=8,t.SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND=3,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST=wr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID=Lr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED=kr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED=Dr,t.SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT=Pr,t.SOLANA_ERROR__RPC__INTEGER_OVERFLOW=br,t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR=Cr,t.SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN=yr,t.SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS=rt,t.SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER=nt,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER=it,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER=st,t.SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER=ot,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER=ct,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER=ut,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER=dt,t.SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER=at,t.SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS=_t,t.SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING=lt,t.SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED=V,t.SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT=K,t.SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED=W,t.SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED=$,t.SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED=G,t.SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED=H,t.SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED=Y,t.SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE=9,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING=$t,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE=wt,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE=Lt,t.SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND=kt,t.SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND=Xt,t.SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED=vt,t.SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND=Bt,t.SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP=Ut,t.SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE=Wt,t.SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION=or,t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE=Pt,t.SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT=ir,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE=xt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX=Ft,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA=Qt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX=er,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER=Zt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT=ar,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION=Kt,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT=tr,t.SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT=Yt,t.SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED=sr,t.SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE=Mt,t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND=Dt,t.SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED=ur,t.SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED=cr,t.SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE=Vt,t.SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE=zt,t.SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS=Jt,t.SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION=dr,t.SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN=Ct,t.SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION=Ht,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT=qt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT=nr,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT=jt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT=Gt,t.SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT=rr,t.SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING=Nt,t.SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME=ht,t.SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME=At,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING=gt,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE=Ot,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING=mt,t.SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND=ft,t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING=It,t.SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING=Tt,t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE=yt,t.SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING=bt,t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES=Rt,t.SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE=Et,t.SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING=pt,t.SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE=St,t.SolanaError=Fr,t.getSolanaErrorFromInstructionError=getSolanaErrorFromInstructionError,t.getSolanaErrorFromJsonRpcError=function getSolanaErrorFromJsonRpcError({code:e,data:t,message:r}){let c;if(e===N){const{err:e,...r}=t,n=e?{cause:getSolanaErrorFromTransactionError(e)}:null;c=new Fr(N,{...r,...n})}else{let _;switch(e){case o:case i:case a:case s:case n:case l:case I:case m:case d:case E:case A:case g:case O:case u:_={__serverMessage:r};break;default:"object"!=typeof t||Array.isArray(t)||(_=t)}c=new Fr(e,_)}return safeCaptureStackTrace(c,getSolanaErrorFromJsonRpcError),c},t.getSolanaErrorFromTransactionError=getSolanaErrorFromTransactionError,t.isSolanaError=function isSolanaError(e,t){return!!(e instanceof Error&&"SolanaError"===e.name)&&(void 0===t||e.context.__code===t)},t.safeCaptureStackTrace=safeCaptureStackTrace},414014:(e,t,r)=>{var n=r(268117),o=r(701536),some=e=>({__option:"Some",value:e}),none=()=>({__option:"None"}),isOption=e=>!!(e&&"object"==typeof e&&"__option"in e&&("Some"===e.__option&&"value"in e||"None"===e.__option)),isSome=e=>"Some"===e.__option;var wrapNullable=e=>null!==e?some(e):none();function getOptionEncoder(e,t={}){const r=t.prefix??o.getU8Encoder(),i=t.fixed??!1,s=n.isFixedSize(e)&&n.isFixedSize(r)&&0===e.fixedSize;if(i||s){n.assertIsFixedSize(e),n.assertIsFixedSize(r);const t=r.fixedSize+e.fixedSize;return n.createEncoder({fixedSize:t,write:(n,o,i)=>{const s=isOption(n)?n:wrapNullable(n),a=r.write(Number(isSome(s)),o,i);return isSome(s)&&e.write(s.value,o,a),i+t}})}return n.createEncoder({getSizeFromValue:t=>{const o=isOption(t)?t:wrapNullable(t);return n.getEncodedSize(Number(isSome(o)),r)+(isSome(o)?n.getEncodedSize(o.value,e):0)},maxSize:sumCodecSizes([r,e].map(getMaxSize))??void 0,write:(t,n,o)=>{const i=isOption(t)?t:wrapNullable(t);return o=r.write(Number(isSome(i)),n,o),isSome(i)&&(o=e.write(i.value,n,o)),o}})}function getOptionDecoder(e,t={}){const r=t.prefix??o.getU8Decoder(),i=t.fixed??!1;let s=null;const a=n.isFixedSize(e)&&n.isFixedSize(r)&&0===e.fixedSize;return(i||a)&&(n.assertIsFixedSize(e),n.assertIsFixedSize(r),s=r.fixedSize+e.fixedSize),n.createDecoder({...null===s?{maxSize:sumCodecSizes([r,e].map(getMaxSize))??void 0}:{fixedSize:s},read:(t,n)=>{if(t.length-n<=0)return[none(),n];const[o,i]=r.read(t,n);if(0===o)return[none(),null!==s?n+s:i];const[a,c]=e.read(t,i);return[some(a),null!==s?n+s:c]}})}function sumCodecSizes(e){return e.reduce(((e,t)=>null===e||null===t?null:e+t),0)}function getMaxSize(e){return n.isFixedSize(e)?e.fixedSize:e.maxSize??null}t.getOptionCodec=function getOptionCodec(e,t={}){return n.combineCodec(getOptionEncoder(e,t),getOptionDecoder(e,t))},t.getOptionDecoder=getOptionDecoder,t.getOptionEncoder=getOptionEncoder,t.isNone=e=>"None"===e.__option,t.isOption=isOption,t.isSome=isSome,t.none=none,t.some=some,t.unwrapOption=function unwrapOption(e,t){return isSome(e)?e.value:t?t():null},t.unwrapOptionRecursively=function unwrapOptionRecursively(e,t){if(!e||ArrayBuffer.isView(e))return e;const next=e=>t?unwrapOptionRecursively(e,t):unwrapOptionRecursively(e);return isOption(e)?isSome(e)?next(e.value):t?t():null:Array.isArray(e)?e.map(next):"object"==typeof e?Object.fromEntries(Object.entries(e).map((([e,t])=>[e,next(t)]))):e},t.wrapNullable=wrapNullable},595055:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TlvInvalidAccountDataError=t.TlvError=void 0;class TlvError extends Error{constructor(e){super(e)}}t.TlvError=TlvError;t.TlvInvalidAccountDataError=class TlvInvalidAccountDataError extends TlvError{constructor(){super(...arguments),this.name="TlvInvalidAccountDataError"}}},258858:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),o(r(788715),t),o(r(696975),t),o(r(595055),t)},788715:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.splDiscriminate=void 0;const n=r(483040);t.splDiscriminate=(e,t=8)=>(0,n.createHash)("sha256").update(e).digest().subarray(0,t)},696975:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TlvState=void 0;const n=r(595055);t.TlvState=class TlvState{constructor(e,t=2,r=2,n=0){this.tlvData=e.subarray(n),this.discriminatorSize=t,this.lengthSize=r}get data(){return this.tlvData}readEntryLength(e,t,r){switch(e){case 1:return r(this.tlvData.readUInt8(t));case 2:return r(this.tlvData.readUInt16LE(t));case 4:return r(this.tlvData.readUInt32LE(t));case 8:return r(this.tlvData.readBigUInt64LE(t))}}firstBytes(e){const t=this.bytesRepeating(e,1);return t.length>0?t[0]:null}bytesRepeating(e,t=0){const r=[];let o=0;for(;o<this.tlvData.length;){if(o+this.discriminatorSize+this.lengthSize>this.tlvData.length)throw new n.TlvInvalidAccountDataError;const i=this.tlvData.subarray(o,o+this.discriminatorSize);o+=this.discriminatorSize;const s=this.readEntryLength(this.lengthSize,o,Number);if(o+=this.lengthSize,o+s>this.tlvData.length)throw new n.TlvInvalidAccountDataError;if(i.equals(e)&&r.push(this.tlvData.subarray(o,o+s)),t>0&&r.length>=t)break;o+=s}return r}discriminators(){const e=[];let t=0;for(;t<this.tlvData.length;){if(t+this.discriminatorSize+this.lengthSize>this.tlvData.length)throw new n.TlvInvalidAccountDataError;const r=this.tlvData.subarray(t,t+this.discriminatorSize);e.push(r),t+=this.discriminatorSize;const o=this.readEntryLength(this.lengthSize,t,Number);if(t+=this.lengthSize,t+o>this.tlvData.length)throw new n.TlvInvalidAccountDataError;t+=o}return e}}},264142:(e,t,r)=>{r.d(t,{EK:()=>s,sy:()=>i,x5:()=>o});var n=r(398532);const o=new n.J3("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"),i=new n.J3("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"),s=new n.J3("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL");new n.J3("So11111111111111111111111111111111111111112"),new n.J3("9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP")},375236:(e,t,r)=>{r.d(t,{JK:()=>TokenInvalidInstructionProgramError,LQ:()=>TokenInvalidInstructionDataError,lu:()=>TokenOwnerOffCurveError,p7:()=>TokenInvalidInstructionTypeError,rO:()=>TokenInvalidInstructionKeysError});class TokenError extends Error{constructor(e){super(e)}}class TokenOwnerOffCurveError extends TokenError{constructor(){super(...arguments),this.name="TokenOwnerOffCurveError"}}class TokenInvalidInstructionProgramError extends TokenError{constructor(){super(...arguments),this.name="TokenInvalidInstructionProgramError"}}class TokenInvalidInstructionKeysError extends TokenError{constructor(){super(...arguments),this.name="TokenInvalidInstructionKeysError"}}class TokenInvalidInstructionDataError extends TokenError{constructor(){super(...arguments),this.name="TokenInvalidInstructionDataError"}}class TokenInvalidInstructionTypeError extends TokenError{constructor(){super(...arguments),this.name="TokenInvalidInstructionTypeError"}}},25047:(e,t,r)=>{r.d(t,{JA:()=>createAssociatedTokenAccountInstruction});var n=r(398532),o=r(264142),i=r(901048).Buffer;function createAssociatedTokenAccountInstruction(e,t,r,n,s=o.x5,a=o.EK){return buildAssociatedTokenAccountInstruction(e,t,r,n,i.alloc(0),s,a)}function buildAssociatedTokenAccountInstruction(e,t,r,i,s,a=o.x5,c=o.EK){const u=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:n.yq.programId,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!1,isWritable:!1}];return new n.fH({keys:u,programId:c,data:s})}},694068:(e,t,r)=>{r.d(t,{pK:()=>decodeInstruction});var n=r(878918),o=r(264142),i=r(375236),s=r(692363),a=(r(398532),r(749064));r(901048).Buffer;const c=(0,n.struct)([(0,n.u8)("instruction"),(0,s._l)("amount")]);function decodeAmountToUiAmountInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==c.span)throw new i.LQ;const{keys:{mint:r},data:n}=function decodeAmountToUiAmountInstructionUnchecked({programId:e,keys:[t],data:r}){return{programId:e,keys:{mint:t},data:c.decode(r)}}(e);if(n.instruction!==a._.AmountToUiAmount)throw new i.p7;if(!r)throw new i.rO;return{programId:t,keys:{mint:r},data:n}}r(901048).Buffer;const u=(0,n.struct)([(0,n.u8)("instruction"),(0,s._l)("amount")]);function decodeApproveInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==u.span)throw new i.LQ;const{keys:{account:r,delegate:n,owner:s,multiSigners:c},data:d}=function decodeApproveInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{account:t,delegate:r,owner:n,multiSigners:o},data:u.decode(i)}}(e);if(d.instruction!==a._.Approve)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{account:r,delegate:n,owner:s,multiSigners:c},data:d}}r(901048).Buffer;const d=(0,n.struct)([(0,n.u8)("instruction"),(0,s._l)("amount"),(0,n.u8)("decimals")]);function decodeApproveCheckedInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==d.span)throw new i.LQ;const{keys:{account:r,mint:n,delegate:s,owner:c,multiSigners:u},data:_}=function decodeApproveCheckedInstructionUnchecked({programId:e,keys:[t,r,n,o,...i],data:s}){return{programId:e,keys:{account:t,mint:r,delegate:n,owner:o,multiSigners:i},data:d.decode(s)}}(e);if(_.instruction!==a._.ApproveChecked)throw new i.p7;if(!(r&&n&&s&&c))throw new i.rO;return{programId:t,keys:{account:r,mint:n,delegate:s,owner:c,multiSigners:u},data:_}}r(901048).Buffer;const _=(0,n.struct)([(0,n.u8)("instruction"),(0,s._l)("amount")]);function decodeBurnInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==_.span)throw new i.LQ;const{keys:{account:r,mint:n,owner:s,multiSigners:c},data:u}=function decodeBurnInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{account:t,mint:r,owner:n,multiSigners:o},data:_.decode(i)}}(e);if(u.instruction!==a._.Burn)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{account:r,mint:n,owner:s,multiSigners:c},data:u}}r(901048).Buffer;const l=(0,n.struct)([(0,n.u8)("instruction"),(0,s._l)("amount"),(0,n.u8)("decimals")]);function decodeBurnCheckedInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==l.span)throw new i.LQ;const{keys:{account:r,mint:n,owner:s,multiSigners:c},data:u}=function decodeBurnCheckedInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{account:t,mint:r,owner:n,multiSigners:o},data:l.decode(i)}}(e);if(u.instruction!==a._.BurnChecked)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{account:r,mint:n,owner:s,multiSigners:c},data:u}}r(901048).Buffer;const R=(0,n.struct)([(0,n.u8)("instruction")]);function decodeCloseAccountInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==R.span)throw new i.LQ;const{keys:{account:r,destination:n,authority:s,multiSigners:c},data:u}=function decodeCloseAccountInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{account:t,destination:r,authority:n,multiSigners:o},data:R.decode(i)}}(e);if(u.instruction!==a._.CloseAccount)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{account:r,destination:n,authority:s,multiSigners:c},data:u}}r(901048).Buffer;const E=(0,n.struct)([(0,n.u8)("instruction")]);function decodeFreezeAccountInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==E.span)throw new i.LQ;const{keys:{account:r,mint:n,authority:s,multiSigners:c},data:u}=function decodeFreezeAccountInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{account:t,mint:r,authority:n,multiSigners:o},data:E.decode(i)}}(e);if(u.instruction!==a._.FreezeAccount)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{account:r,mint:n,authority:s,multiSigners:c},data:u}}r(901048).Buffer;const A=(0,n.struct)([(0,n.u8)("instruction")]);function decodeInitializeAccountInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==A.span)throw new i.LQ;const{keys:{account:r,mint:n,owner:s,rent:c},data:u}=function decodeInitializeAccountInstructionUnchecked({programId:e,keys:[t,r,n,o],data:i}){return{programId:e,keys:{account:t,mint:r,owner:n,rent:o},data:A.decode(i)}}(e);if(u.instruction!==a._.InitializeAccount)throw new i.p7;if(!(r&&n&&s&&c))throw new i.rO;return{programId:t,keys:{account:r,mint:n,owner:s,rent:c},data:u}}r(901048).Buffer;const S=(0,n.struct)([(0,n.u8)("instruction"),(0,s.jE)("owner")]);function decodeInitializeAccount2Instruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==S.span)throw new i.LQ;const{keys:{account:r,mint:n,rent:s},data:c}=function decodeInitializeAccount2InstructionUnchecked({programId:e,keys:[t,r,n],data:o}){return{programId:e,keys:{account:t,mint:r,rent:n},data:S.decode(o)}}(e);if(c.instruction!==a._.InitializeAccount2)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{account:r,mint:n,rent:s},data:c}}r(901048).Buffer;const g=(0,n.struct)([(0,n.u8)("instruction"),(0,s.jE)("owner")]);function decodeInitializeAccount3Instruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==g.span)throw new i.LQ;const{keys:{account:r,mint:n},data:s}=function decodeInitializeAccount3InstructionUnchecked({programId:e,keys:[t,r],data:n}){return{programId:e,keys:{account:t,mint:r},data:g.decode(n)}}(e);if(s.instruction!==a._.InitializeAccount3)throw new i.p7;if(!r||!n)throw new i.rO;return{programId:t,keys:{account:r,mint:n},data:s}}class COptionPublicKeyLayout extends n.Layout{constructor(e){super(-1,e),this.publicKeyLayout=(0,s.jE)()}decode(e,t=0){return 0===e[t]?null:this.publicKeyLayout.decode(e,t+1)}encode(e,t,r=0){return null===e?(t[r]=0,1):(t[r]=1,this.publicKeyLayout.encode(e,t,r+1),33)}getSpan(e,t=0){if(e){return 0===e[t]?1:1+this.publicKeyLayout.span}return 1+this.publicKeyLayout.span}}r(901048).Buffer;const O=(0,n.struct)([(0,n.u8)("instruction"),(0,n.u8)("decimals"),(0,s.jE)("mintAuthority"),new COptionPublicKeyLayout("freezeAuthority")]);function decodeInitializeMintInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==O.span)throw new i.LQ;const{keys:{mint:r,rent:n},data:s}=function decodeInitializeMintInstructionUnchecked({programId:e,keys:[t,r],data:n}){const{instruction:o,decimals:i,mintAuthority:s,freezeAuthority:a}=O.decode(n);return{programId:e,keys:{mint:t,rent:r},data:{instruction:o,decimals:i,mintAuthority:s,freezeAuthority:a}}}(e);if(s.instruction!==a._.InitializeMint)throw new i.p7;if(!r||!n)throw new i.rO;return{programId:t,keys:{mint:r,rent:n},data:s}}r(901048).Buffer;const f=(0,n.struct)([(0,n.u8)("instruction"),(0,n.u8)("decimals"),(0,s.jE)("mintAuthority"),new COptionPublicKeyLayout("freezeAuthority")]);function decodeInitializeMint2Instruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==f.span)throw new i.LQ;const{keys:{mint:r},data:n}=function decodeInitializeMint2InstructionUnchecked({programId:e,keys:[t],data:r}){const{instruction:n,decimals:o,mintAuthority:i,freezeAuthority:s}=f.decode(r);return{programId:e,keys:{mint:t},data:{instruction:n,decimals:o,mintAuthority:i,freezeAuthority:s}}}(e);if(n.instruction!==a._.InitializeMint2)throw new i.p7;if(!r)throw new i.rO;return{programId:t,keys:{mint:r},data:n}}r(901048).Buffer;const m=(0,n.struct)([(0,n.u8)("instruction"),(0,n.u8)("m")]);function decodeInitializeMultisigInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==m.span)throw new i.LQ;const{keys:{account:r,rent:n,signers:s},data:c}=function decodeInitializeMultisigInstructionUnchecked({programId:e,keys:[t,r,...n],data:o}){return{programId:e,keys:{account:t,rent:r,signers:n},data:m.decode(o)}}(e);if(c.instruction!==a._.InitializeMultisig)throw new i.p7;if(!r||!n||!s.length)throw new i.rO;return{programId:t,keys:{account:r,rent:n,signers:s},data:c}}r(901048).Buffer;const p=(0,n.struct)([(0,n.u8)("instruction"),(0,s._l)("amount")]);function decodeMintToInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==p.span)throw new i.LQ;const{keys:{mint:r,destination:n,authority:s,multiSigners:c},data:u}=function decodeMintToInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{mint:t,destination:r,authority:n,multiSigners:o},data:p.decode(i)}}(e);if(u.instruction!==a._.MintTo)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{mint:r,destination:n,authority:s,multiSigners:c},data:u}}r(901048).Buffer;const N=(0,n.struct)([(0,n.u8)("instruction"),(0,s._l)("amount"),(0,n.u8)("decimals")]);function decodeMintToCheckedInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==N.span)throw new i.LQ;const{keys:{mint:r,destination:n,authority:s,multiSigners:c},data:u}=function decodeMintToCheckedInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{mint:t,destination:r,authority:n,multiSigners:o},data:N.decode(i)}}(e);if(u.instruction!==a._.MintToChecked)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{mint:r,destination:n,authority:s,multiSigners:c},data:u}}r(901048).Buffer;const I=(0,n.struct)([(0,n.u8)("instruction")]);function decodeRevokeInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==I.span)throw new i.LQ;const{keys:{account:r,owner:n,multiSigners:s},data:c}=function decodeRevokeInstructionUnchecked({programId:e,keys:[t,r,...n],data:o}){return{programId:e,keys:{account:t,owner:r,multiSigners:n},data:I.decode(o)}}(e);if(c.instruction!==a._.Revoke)throw new i.p7;if(!r||!n)throw new i.rO;return{programId:t,keys:{account:r,owner:n,multiSigners:s},data:c}}var T;r(901048).Buffer;!function(e){e[e.MintTokens=0]="MintTokens",e[e.FreezeAccount=1]="FreezeAccount",e[e.AccountOwner=2]="AccountOwner",e[e.CloseAccount=3]="CloseAccount",e[e.TransferFeeConfig=4]="TransferFeeConfig",e[e.WithheldWithdraw=5]="WithheldWithdraw",e[e.CloseMint=6]="CloseMint",e[e.InterestRate=7]="InterestRate",e[e.PermanentDelegate=8]="PermanentDelegate",e[e.ConfidentialTransferMint=9]="ConfidentialTransferMint",e[e.TransferHookProgramId=10]="TransferHookProgramId",e[e.ConfidentialTransferFeeConfig=11]="ConfidentialTransferFeeConfig",e[e.MetadataPointer=12]="MetadataPointer",e[e.GroupPointer=13]="GroupPointer",e[e.GroupMemberPointer=14]="GroupMemberPointer"}(T||(T={}));const b=(0,n.struct)([(0,n.u8)("instruction"),(0,n.u8)("authorityType"),new COptionPublicKeyLayout("newAuthority")]);function decodeSetAuthorityInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==b.span)throw new i.LQ;const{keys:{account:r,currentAuthority:n,multiSigners:s},data:c}=function decodeSetAuthorityInstructionUnchecked({programId:e,keys:[t,r,...n],data:o}){const{instruction:i,authorityType:s,newAuthority:a}=b.decode(o);return{programId:e,keys:{account:t,currentAuthority:r,multiSigners:n},data:{instruction:i,authorityType:s,newAuthority:a}}}(e);if(c.instruction!==a._.SetAuthority)throw new i.p7;if(!r||!n)throw new i.rO;return{programId:t,keys:{account:r,currentAuthority:n,multiSigners:s},data:c}}r(901048).Buffer;const y=(0,n.struct)([(0,n.u8)("instruction")]);function decodeSyncNativeInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==y.span)throw new i.LQ;const{keys:{account:r},data:n}=function decodeSyncNativeInstructionUnchecked({programId:e,keys:[t],data:r}){return{programId:e,keys:{account:t},data:y.decode(r)}}(e);if(n.instruction!==a._.SyncNative)throw new i.p7;if(!r)throw new i.rO;return{programId:t,keys:{account:r},data:n}}r(901048).Buffer;const C=(0,n.struct)([(0,n.u8)("instruction")]);function decodeThawAccountInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;if(e.data.length!==C.span)throw new i.LQ;const{keys:{account:r,mint:n,authority:s,multiSigners:c},data:u}=function decodeThawAccountInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{account:t,mint:r,authority:n,multiSigners:o},data:C.decode(i)}}(e);if(u.instruction!==a._.ThawAccount)throw new i.p7;if(!r||!n||!s)throw new i.rO;return{programId:t,keys:{account:r,mint:n,authority:s,multiSigners:c},data:u}}var w=r(353594),L=r(302407);r(901048).Buffer;function decodeUiAmountToAmountInstruction(e,t=o.x5){if(!e.programId.equals(t))throw new i.JK;const r=(0,n.struct)([(0,n.u8)("instruction"),(0,n.blob)(e.data.length-1,"amount")]);if(e.data.length!==r.span)throw new i.LQ;const{keys:{mint:s},data:c}=function decodeUiAmountToAmountInstructionUnchecked({programId:e,keys:[t],data:r}){const o=(0,n.struct)([(0,n.u8)("instruction"),(0,n.blob)(r.length-1,"amount")]);return{programId:e,keys:{mint:t},data:o.decode(r)}}(e);if(c.instruction!==a._.UiAmountToAmount)throw new i.p7;if(!s)throw new i.rO;return{programId:t,keys:{mint:s},data:c}}function decodeInstruction(e,t=o.x5){if(!e.data.length)throw new i.LQ;const r=(0,n.u8)().decode(e.data);if(r===a._.InitializeMint)return decodeInitializeMintInstruction(e,t);if(r===a._.InitializeAccount)return decodeInitializeAccountInstruction(e,t);if(r===a._.InitializeMultisig)return decodeInitializeMultisigInstruction(e,t);if(r===a._.Transfer)return(0,w.SC)(e,t);if(r===a._.Approve)return decodeApproveInstruction(e,t);if(r===a._.Revoke)return decodeRevokeInstruction(e,t);if(r===a._.SetAuthority)return decodeSetAuthorityInstruction(e,t);if(r===a._.MintTo)return decodeMintToInstruction(e,t);if(r===a._.Burn)return decodeBurnInstruction(e,t);if(r===a._.CloseAccount)return decodeCloseAccountInstruction(e,t);if(r===a._.FreezeAccount)return decodeFreezeAccountInstruction(e,t);if(r===a._.ThawAccount)return decodeThawAccountInstruction(e,t);if(r===a._.TransferChecked)return(0,L.Ly)(e,t);if(r===a._.ApproveChecked)return decodeApproveCheckedInstruction(e,t);if(r===a._.MintToChecked)return decodeMintToCheckedInstruction(e,t);if(r===a._.BurnChecked)return decodeBurnCheckedInstruction(e,t);if(r===a._.InitializeAccount2)return decodeInitializeAccount2Instruction(e,t);if(r===a._.SyncNative)return decodeSyncNativeInstruction(e,t);if(r===a._.InitializeAccount3)return decodeInitializeAccount3Instruction(e,t);if(r===a._.InitializeMint2)return decodeInitializeMint2Instruction(e,t);if(r===a._.AmountToUiAmount)return decodeAmountToUiAmountInstruction(e,t);if(r===a._.UiAmountToAmount)return decodeUiAmountToAmountInstruction(e,t);if(r===a._.InitializeMultisig2)throw new i.p7;throw new i.p7}},353594:(e,t,r)=>{r.d(t,{SC:()=>decodeTransferInstruction});var n=r(878918),o=r(692363),i=(r(398532),r(264142)),s=r(375236),a=r(749064);r(901048).Buffer;const c=(0,n.struct)([(0,n.u8)("instruction"),(0,o._l)("amount")]);function decodeTransferInstruction(e,t=i.x5){if(!e.programId.equals(t))throw new s.JK;if(e.data.length!==c.span)throw new s.LQ;const{keys:{source:r,destination:n,owner:o,multiSigners:u},data:d}=function decodeTransferInstructionUnchecked({programId:e,keys:[t,r,n,...o],data:i}){return{programId:e,keys:{source:t,destination:r,owner:n,multiSigners:o},data:c.decode(i)}}(e);if(d.instruction!==a._.Transfer)throw new s.p7;if(!r||!n||!o)throw new s.rO;return{programId:t,keys:{source:r,destination:n,owner:o,multiSigners:u},data:d}}},302407:(e,t,r)=>{r.d(t,{fl:()=>createTransferCheckedInstruction,Ly:()=>decodeTransferCheckedInstruction});var n=r(878918),o=r(692363),i=r(398532),s=r(264142),a=r(375236);var c=r(749064),u=r(901048).Buffer;const d=(0,n.struct)([(0,n.u8)("instruction"),(0,o._l)("amount"),(0,n.u8)("decimals")]);function createTransferCheckedInstruction(e,t,r,n,o,a,_=[],l=s.x5){const R=function addSigners(e,t,r){if(r.length){e.push({pubkey:t,isSigner:!1,isWritable:!1});for(const t of r)e.push({pubkey:t instanceof i.J3?t:t.publicKey,isSigner:!0,isWritable:!1})}else e.push({pubkey:t,isSigner:!0,isWritable:!1});return e}([{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!1,isWritable:!0}],n,_),E=u.alloc(d.span);return d.encode({instruction:c._.TransferChecked,amount:BigInt(o),decimals:a},E),new i.fH({keys:R,programId:l,data:E})}function decodeTransferCheckedInstruction(e,t=s.x5){if(!e.programId.equals(t))throw new a.JK;if(e.data.length!==d.span)throw new a.LQ;const{keys:{source:r,mint:n,destination:o,owner:i,multiSigners:u},data:_}=function decodeTransferCheckedInstructionUnchecked({programId:e,keys:[t,r,n,o,...i],data:s}){return{programId:e,keys:{source:t,mint:r,destination:n,owner:o,multiSigners:i},data:d.decode(s)}}(e);if(_.instruction!==c._.TransferChecked)throw new a.p7;if(!(r&&n&&o&&i))throw new a.rO;return{programId:t,keys:{source:r,mint:n,destination:o,owner:i,multiSigners:u},data:_}}},749064:(e,t,r)=>{var n;r.d(t,{_:()=>n}),function(e){e[e.InitializeMint=0]="InitializeMint",e[e.InitializeAccount=1]="InitializeAccount",e[e.InitializeMultisig=2]="InitializeMultisig",e[e.Transfer=3]="Transfer",e[e.Approve=4]="Approve",e[e.Revoke=5]="Revoke",e[e.SetAuthority=6]="SetAuthority",e[e.MintTo=7]="MintTo",e[e.Burn=8]="Burn",e[e.CloseAccount=9]="CloseAccount",e[e.FreezeAccount=10]="FreezeAccount",e[e.ThawAccount=11]="ThawAccount",e[e.TransferChecked=12]="TransferChecked",e[e.ApproveChecked=13]="ApproveChecked",e[e.MintToChecked=14]="MintToChecked",e[e.BurnChecked=15]="BurnChecked",e[e.InitializeAccount2=16]="InitializeAccount2",e[e.SyncNative=17]="SyncNative",e[e.InitializeAccount3=18]="InitializeAccount3",e[e.InitializeMultisig2=19]="InitializeMultisig2",e[e.InitializeMint2=20]="InitializeMint2",e[e.GetAccountDataSize=21]="GetAccountDataSize",e[e.InitializeImmutableOwner=22]="InitializeImmutableOwner",e[e.AmountToUiAmount=23]="AmountToUiAmount",e[e.UiAmountToAmount=24]="UiAmountToAmount",e[e.InitializeMintCloseAuthority=25]="InitializeMintCloseAuthority",e[e.TransferFeeExtension=26]="TransferFeeExtension",e[e.ConfidentialTransferExtension=27]="ConfidentialTransferExtension",e[e.DefaultAccountStateExtension=28]="DefaultAccountStateExtension",e[e.Reallocate=29]="Reallocate",e[e.MemoTransferExtension=30]="MemoTransferExtension",e[e.CreateNativeMint=31]="CreateNativeMint",e[e.InitializeNonTransferableMint=32]="InitializeNonTransferableMint",e[e.InterestBearingMintExtension=33]="InterestBearingMintExtension",e[e.CpiGuardExtension=34]="CpiGuardExtension",e[e.InitializePermanentDelegate=35]="InitializePermanentDelegate",e[e.TransferHookExtension=36]="TransferHookExtension",e[e.MetadataPointerExtension=39]="MetadataPointerExtension",e[e.GroupPointerExtension=40]="GroupPointerExtension",e[e.GroupMemberPointerExtension=41]="GroupMemberPointerExtension"}(n||(n={}))},483053:(e,t,r)=>{r.d(t,{Xt:()=>getAssociatedTokenAddressSync});var n=r(878918),o=r(692363),i=r(398532),s=r(264142),a=r(375236);r(901048).Buffer;const c=(0,n.struct)([(0,n.u32)("mintAuthorityOption"),(0,o.jE)("mintAuthority"),(0,o._l)("supply"),(0,n.u8)("decimals"),(0,o.lc)("isInitialized"),(0,n.u32)("freezeAuthorityOption"),(0,o.jE)("freezeAuthority")]);c.span;function getAssociatedTokenAddressSync(e,t,r=!1,n=s.x5,o=s.EK){if(!r&&!i.J3.isOnCurve(t.toBuffer()))throw new a.lu;const[c]=i.J3.findProgramAddressSync([t.toBuffer(),n.toBuffer(),e.toBuffer()],o);return c}},288297:(e,t,r)=>{function timeoutSignal(e){if(!Number.isInteger(e))throw new TypeError("Expected an integer");const t=new AbortController,r=setTimeout((()=>{t.abort()}),e);return r?.unref?.(),t.signal}r.d(t,{A:()=>timeoutSignal})}}]);