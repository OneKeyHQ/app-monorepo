diff --git a/node_modules/@walletconnect/core/dist/esm/index.js b/node_modules/@walletconnect/core/dist/esm/index.js
index a66eece..fccf73d 100644
--- a/node_modules/@walletconnect/core/dist/esm/index.js
+++ b/node_modules/@walletconnect/core/dist/esm/index.js
@@ -22,7 +22,8 @@ class Connector {
         this._networkId = 0;
         this._rpcUrl = "";
         this._eventManager = new EventManager();
-        this._clientMeta = getClientMeta() || opts.connectorOpts.clientMeta || null;
+        // this._clientMeta = getClientMeta() || opts.connectorOpts.clientMeta || null;
+        this._clientMeta = opts.connectorOpts.clientMeta || getClientMeta() || null;
         this._cryptoLib = opts.cryptoLib;
         this._sessionStorage = opts.sessionStorage || new SessionStorage(opts.connectorOpts.storageId);
         this._qrcodeModal = opts.connectorOpts.qrcodeModal;
@@ -37,7 +38,8 @@ class Connector {
         if (opts.connectorOpts.uri) {
             this.uri = opts.connectorOpts.uri;
         }
-        const session = opts.connectorOpts.session || this._getStorageSession();
+        const session = opts.connectorOpts.session ||
+          (opts.connectorOpts.autoConnectLastSessionOnMount ? this._getStorageSession(): undefined);
         if (session) {
             this.session = session;
         }
@@ -354,7 +356,7 @@ class Connector {
             ],
         });
     }
-    rejectSession(sessionError) {
+    async rejectSession(sessionError) {
         if (this._connected) {
             throw new Error(ERROR_SESSION_CONNECTED);
         }
@@ -363,7 +365,8 @@ class Connector {
             id: this.handshakeId,
             error: { message },
         });
-        this._sendResponse(response);
+        // await is needs here, otherwise disconnect event will set peerId to "" before _transport.send()
+        await this._sendResponse(response);
         this._connected = false;
         this._eventManager.trigger({
             event: "disconnect",
@@ -810,7 +813,9 @@ class Connector {
             event: "transport_error",
             params: ["Websocket connection failed"],
         }));
-        this._transport.open();
+        if (this._transport.closed || this._transport.closing) {
+          this._transport.open();
+        }
     }
     _formatUri() {
         const protocol = this.protocol;
