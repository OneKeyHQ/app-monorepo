diff --git a/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.d.ts b/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.d.ts
index 3265f8f..2c2e17e 100644
--- a/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.d.ts
+++ b/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.d.ts
@@ -1,4 +1,4 @@
 import { RenderQrcodeModalProps } from '../types';
-export default function QrcodeModal({ visible, walletServices, connectToWalletService, uri, onDismiss, division, }: RenderQrcodeModalProps & {
+export default function QrcodeModal({ visible, walletServices, connectToWalletService, uri, onDismiss, division, useNativeDriver, shouldRenderQrcode }: RenderQrcodeModalProps & {
     readonly division: number;
 }): JSX.Element;
diff --git a/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.js b/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.js
index 71a38c4..30f42ac 100644
--- a/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.js
+++ b/node_modules/@walletconnect/react-native-dapp/dist/components/QrcodeModal.js
@@ -12,8 +12,8 @@ const styles = StyleSheet.create({
     noOverflow: { overflow: 'hidden' },
     row: { alignItems: 'center', flexDirection: 'row' },
 });
-const useNativeDriver = Platform.OS !== 'web';
-export default function QrcodeModal({ visible, walletServices, connectToWalletService, uri, onDismiss, division, }) {
+// const useNativeDriver = Platform.OS !== 'web';
+export default function QrcodeModal({ visible, walletServices, connectToWalletService, uri, onDismiss, division, useNativeDriver, shouldRenderQrcode }) {
     const shouldConnectToWalletService = React.useCallback((walletService) => connectToWalletService(walletService, uri), [connectToWalletService, uri]);
     const { width, height } = useWindowDimensions();
     const { opacity, logo, icons } = React.useMemo(() => ({
@@ -69,19 +69,19 @@ export default function QrcodeModal({ visible, walletServices, connectToWalletSe
     const renderItem = React.useCallback(({ item, index }) => {
         return (React.createElement(WalletServiceRow, { key: `k${index}`, style: { opacity: icons }, division: division, walletServices: item, width: modalWidth, height: modalHeight * 0.25, connectToWalletService: shouldConnectToWalletService }));
     }, [modalWidth, modalHeight, division, icons, shouldConnectToWalletService]);
-    const shouldRenderQrcode = Platform.OS === 'web';
+    // const shouldRenderQrcode = Platform.OS === 'web';
     return (React.createElement(Animated.View, { style: [
             styles.absolute,
             styles.noOverflow,
             {
                 width,
                 height,
-                opacity,
+                opacity: 1,
             },
         ], pointerEvents: visible ? 'box-none' : 'none' },
         React.createElement(View, { style: StyleSheet.absoluteFill },
             React.createElement(TouchableOpacity, { style: StyleSheet.absoluteFill, onPress: onDismiss, activeOpacity: 0.98 },
-                React.createElement(Animated.View, { style: [styles.flex, { opacity: Animated.multiply(opacity, 0.95) }, styles.black] }))),
+                React.createElement(Animated.View, { style: [styles.flex, { opacity: 1 }, styles.black] }))),
         React.createElement(View, { style: [StyleSheet.absoluteFill, styles.center], pointerEvents: "box-none" },
             React.createElement(Animated.View, { pointerEvents: visible ? 'box-none' : 'none', style: {
                     width: modalWidth,
@@ -91,7 +91,9 @@ export default function QrcodeModal({ visible, walletServices, connectToWalletSe
                     ],
                 } },
                 React.createElement(TouchableOpacity, { onPress: onPressLogo },
-                    React.createElement(WalletConnectLogo, { width: modalWidth })))),
+                    // React.createElement(WalletConnectLogo, { width: modalWidth, opacity: 0 })
+                    null
+                ))),
         React.createElement(View, { style: [StyleSheet.absoluteFill, styles.center], pointerEvents: visible ? 'box-none' : 'none' },
             React.createElement(Animated.View, { style: { width: modalWidth, height: modalHeight } }, shouldRenderQrcode ? (React.createElement(Animated.View, { style: [
                     StyleSheet.absoluteFill,
diff --git a/node_modules/@walletconnect/react-native-dapp/dist/contexts/WalletConnectContext.js b/node_modules/@walletconnect/react-native-dapp/dist/contexts/WalletConnectContext.js
index b36069a..440bc12 100644
--- a/node_modules/@walletconnect/react-native-dapp/dist/contexts/WalletConnectContext.js
+++ b/node_modules/@walletconnect/react-native-dapp/dist/contexts/WalletConnectContext.js
@@ -4,7 +4,10 @@ const defaultValue = Object.freeze({
     clientMeta: {
         description: "Connect with WalletConnect",
         url: "https://walletconnect.org",
-        icons: ["https://walletconnect.org/walletconnect-logo.png"],
+        icons: [
+          // deepmerge() will keep array items
+          //  "https://walletconnect.org/walletconnect-logo.png"
+        ],
         name: "WalletConnect",
     },
     storageOptions: {
diff --git a/node_modules/@walletconnect/react-native-dapp/dist/providers/WalletConnectProvider.js b/node_modules/@walletconnect/react-native-dapp/dist/providers/WalletConnectProvider.js
index 9b5b1e2..dd16bae 100644
--- a/node_modules/@walletconnect/react-native-dapp/dist/providers/WalletConnectProvider.js
+++ b/node_modules/@walletconnect/react-native-dapp/dist/providers/WalletConnectProvider.js
@@ -187,6 +187,7 @@ export default function WalletConnectProvider({ children, renderQrcodeModal: may
                 ...intermediateValue,
                 walletServices,
                 connectToWalletService,
+                connectorOriginal: connector,
                 connector: Object.assign(Object.create(connector), {
                     ...connector,
                     connect: async (opts) => {
@@ -208,6 +209,7 @@ export default function WalletConnectProvider({ children, renderQrcodeModal: may
             walletServices,
             connectToWalletService,
             connector,
+            connectorOriginal: connector,
         };
     }, [
         intermediateValue,
diff --git a/node_modules/@walletconnect/react-native-dapp/dist/types/index.d.ts b/node_modules/@walletconnect/react-native-dapp/dist/types/index.d.ts
index 1123a0b..841b035 100644
--- a/node_modules/@walletconnect/react-native-dapp/dist/types/index.d.ts
+++ b/node_modules/@walletconnect/react-native-dapp/dist/types/index.d.ts
@@ -51,6 +51,7 @@ export declare type ConnectToWalletServiceCallback = (walletService: WalletServi
 export declare type WalletConnectContextValue = WalletConnectOptions & {
     readonly connectToWalletService: ConnectToWalletServiceCallback;
     readonly connector?: WalletConnect;
+    readonly connectorOriginal?: WalletConnect;
     readonly walletServices: readonly WalletService[];
 };
 export declare type RenderQrcodeModalProps = {
@@ -59,6 +60,8 @@ export declare type RenderQrcodeModalProps = {
     readonly walletServices: readonly WalletService[];
     readonly uri?: string;
     readonly onDismiss: () => unknown;
+    readonly useNativeDriver: boolean;
+    readonly shouldRenderQrcode: boolean;
 };
 export declare type RenderQrcodeModalCallback = (props: RenderQrcodeModalProps) => JSX.Element;
 export declare type WalletConnectProviderProps = WalletConnectOptions & {
