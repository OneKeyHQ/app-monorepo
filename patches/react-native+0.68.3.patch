diff --git a/node_modules/react-native/React/Base/RCTUtils.h b/node_modules/react-native/React/Base/RCTUtils.h
index 135ff2f..a9502dd 100644
--- a/node_modules/react-native/React/Base/RCTUtils.h
+++ b/node_modules/react-native/React/Base/RCTUtils.h
@@ -186,4 +186,6 @@ RCT_EXTERN BOOL RCTValidateTypeOfViewCommandArgument(
     NSString const *commandName,
     NSString const *argPos);
 
+RCT_EXTERN BOOL RCTIsAppActive(void);
+
 NS_ASSUME_NONNULL_END
diff --git a/node_modules/react-native/React/Base/RCTUtils.m b/node_modules/react-native/React/Base/RCTUtils.m
index 961cc36..1c04a85 100644
--- a/node_modules/react-native/React/Base/RCTUtils.m
+++ b/node_modules/react-native/React/Base/RCTUtils.m
@@ -1067,3 +1067,8 @@ RCT_EXTERN BOOL RCTValidateTypeOfViewCommandArgument(
 
   return true;
 }
+
+BOOL RCTIsAppActive(void)
+{
+  return [RCTSharedApplication() applicationState] == UIApplicationStateActive;
+}
\ No newline at end of file
diff --git a/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm b/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm
index b948e8e..78e5389 100644
--- a/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm
+++ b/node_modules/react-native/React/CoreModules/RCTDeviceInfo.mm
@@ -26,8 +26,10 @@ using namespace facebook::react;
 @implementation RCTDeviceInfo {
   UIInterfaceOrientation _currentInterfaceOrientation;
   NSDictionary *_currentInterfaceDimensions;
+  BOOL _isFullscreen;
 }
 
+@synthesize bridge = _bridge;
 @synthesize moduleRegistry = _moduleRegistry;
 
 RCT_EXPORT_MODULE()
@@ -56,10 +58,10 @@ RCT_EXPORT_MODULE()
                                                name:UIApplicationDidChangeStatusBarOrientationNotification
                                              object:nil];
 
-  _currentInterfaceDimensions = RCTExportedDimensions(_moduleRegistry);
+  _currentInterfaceDimensions = RCTExportedDimensions(_moduleRegistry, _bridge);
 
   [[NSNotificationCenter defaultCenter] addObserver:self
-                                           selector:@selector(interfaceFrameDidChange)
+                                           selector:@selector(interfaceOrientationDidChange)
                                                name:UIApplicationDidBecomeActiveNotification
                                              object:nil];
 
@@ -95,15 +97,16 @@ static BOOL RCTIsIPhoneX()
   return isIPhoneX;
 }
 
-static NSDictionary *RCTExportedDimensions(RCTModuleRegistry *moduleRegistry)
+static NSDictionary *RCTExportedDimensions(RCTModuleRegistry *moduleRegistry, RCTBridge *bridge)
 {
   RCTAssertMainQueue();
   RCTDimensions dimensions;
   if (moduleRegistry) {
-    dimensions = RCTGetDimensions(
-        ((RCTAccessibilityManager *)[moduleRegistry moduleForName:"AccessibilityManager"]).multiplier ?: 1.0);
+    RCTAccessibilityManager *accessibilityManager =
+        (RCTAccessibilityManager *)[moduleRegistry moduleForName:"AccessibilityManager"];
+    dimensions = RCTGetDimensions(accessibilityManager ? accessibilityManager.multiplier : 1.0);
   } else {
-    RCTAssert(false, @"ModuleRegistry must be set to properly init dimensions.");
+    RCTAssert(false, @"ModuleRegistry must be set to properly init dimensions. Bridge exists: %d", bridge != nil);
   }
   __typeof(dimensions.window) window = dimensions.window;
   NSDictionary<NSString *, NSNumber *> *dimsWindow = @{
@@ -131,9 +134,10 @@ static NSDictionary *RCTExportedDimensions(RCTModuleRegistry *moduleRegistry)
 {
   __block NSDictionary<NSString *, id> *constants;
   RCTModuleRegistry *moduleRegistry = _moduleRegistry;
+  RCTBridge *bridge = _bridge;
   RCTUnsafeExecuteOnMainQueueSync(^{
     constants = @{
-      @"Dimensions" : RCTExportedDimensions(moduleRegistry),
+      @"Dimensions" : RCTExportedDimensions(moduleRegistry, bridge),
       // Note:
       // This prop is deprecated and will be removed in a future release.
       // Please use this only for a quick and temporary solution.
@@ -148,12 +152,14 @@ static NSDictionary *RCTExportedDimensions(RCTModuleRegistry *moduleRegistry)
 - (void)didReceiveNewContentSizeMultiplier
 {
   RCTModuleRegistry *moduleRegistry = _moduleRegistry;
+  RCTBridge *bridge = _bridge;
   RCTExecuteOnMainQueue(^{
   // Report the event across the bridge.
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wdeprecated-declarations"
-    [[moduleRegistry moduleForName:"EventDispatcher"] sendDeviceEventWithName:@"didUpdateDimensions"
-                                                                         body:RCTExportedDimensions(moduleRegistry)];
+    [[moduleRegistry moduleForName:"EventDispatcher"]
+        sendDeviceEventWithName:@"didUpdateDimensions"
+                           body:RCTExportedDimensions(moduleRegistry, bridge)];
 #pragma clang diagnostic pop
   });
 }
@@ -168,21 +174,36 @@ static NSDictionary *RCTExportedDimensions(RCTModuleRegistry *moduleRegistry)
 
 - (void)_interfaceOrientationDidChange
 {
-  UIInterfaceOrientation nextOrientation = [RCTSharedApplication() statusBarOrientation];
+  UIApplication *application = RCTSharedApplication();
+  UIInterfaceOrientation nextOrientation = [application statusBarOrientation];
+
+  BOOL isRunningInFullScreen =
+      CGRectEqualToRect(application.delegate.window.frame, application.delegate.window.screen.bounds);
+  // We are catching here two situations for multitasking view:
+  // a) The app is in Split View and the container gets resized -> !isRunningInFullScreen
+  // b) The app changes to/from fullscreen example: App runs in slide over mode and goes into fullscreen->
+  // isRunningInFullScreen != _isFullscreen The above two cases a || b can be shortened to !isRunningInFullScreen ||
+  // !_isFullscreen;
+  BOOL isResizingOrChangingToFullscreen = !isRunningInFullScreen || !_isFullscreen;
+  BOOL isOrientationChanging = (UIInterfaceOrientationIsPortrait(_currentInterfaceOrientation) &&
+                                !UIInterfaceOrientationIsPortrait(nextOrientation)) ||
+      (UIInterfaceOrientationIsLandscape(_currentInterfaceOrientation) &&
+       !UIInterfaceOrientationIsLandscape(nextOrientation));
 
   // Update when we go from portrait to landscape, or landscape to portrait
-  if ((UIInterfaceOrientationIsPortrait(_currentInterfaceOrientation) &&
-       !UIInterfaceOrientationIsPortrait(nextOrientation)) ||
-      (UIInterfaceOrientationIsLandscape(_currentInterfaceOrientation) &&
-       !UIInterfaceOrientationIsLandscape(nextOrientation))) {
+  // Also update when the fullscreen state changes (multitasking) and only when the app is in active state.
+  if ((isOrientationChanging || isResizingOrChangingToFullscreen) && RCTIsAppActive()) {
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wdeprecated-declarations"
-    [[_moduleRegistry moduleForName:"EventDispatcher"] sendDeviceEventWithName:@"didUpdateDimensions"
-                                                                          body:RCTExportedDimensions(_moduleRegistry)];
+    [[_moduleRegistry moduleForName:"EventDispatcher"]
+        sendDeviceEventWithName:@"didUpdateDimensions"
+                           body:RCTExportedDimensions(_moduleRegistry, _bridge)];
+    // We only want to track the current _currentInterfaceOrientation and _isFullscreen only
+    // when it happens and only when it is published.
+    _currentInterfaceOrientation = nextOrientation;
+    _isFullscreen = isRunningInFullScreen;
 #pragma clang diagnostic pop
   }
-
-  _currentInterfaceOrientation = nextOrientation;
 }
 
 - (void)interfaceFrameDidChange
@@ -195,17 +216,19 @@ static NSDictionary *RCTExportedDimensions(RCTModuleRegistry *moduleRegistry)
 
 - (void)_interfaceFrameDidChange
 {
-  NSDictionary *nextInterfaceDimensions = RCTExportedDimensions(_moduleRegistry);
+  NSDictionary *nextInterfaceDimensions = RCTExportedDimensions(_moduleRegistry, _bridge);
 
-  if (!([nextInterfaceDimensions isEqual:_currentInterfaceDimensions])) {
+  // update and publish the even only when the app is in active state
+  if (!([nextInterfaceDimensions isEqual:_currentInterfaceDimensions]) && RCTIsAppActive()) {
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wdeprecated-declarations"
     [[_moduleRegistry moduleForName:"EventDispatcher"] sendDeviceEventWithName:@"didUpdateDimensions"
                                                                           body:nextInterfaceDimensions];
+    // We only want to track the current _currentInterfaceOrientation only
+    // when it happens and only when it is published.
+    _currentInterfaceDimensions = nextInterfaceDimensions;
 #pragma clang diagnostic pop
   }
-
-  _currentInterfaceDimensions = nextInterfaceDimensions;
 }
 
 - (std::shared_ptr<TurboModule>)getTurboModule:(const ObjCTurboModule::InitParams &)params
diff --git a/node_modules/react-native/scripts/react_native_pods.rb b/node_modules/react-native/scripts/react_native_pods.rb
index f2ceeda..5349ade 100644
--- a/node_modules/react-native/scripts/react_native_pods.rb
+++ b/node_modules/react-native/scripts/react_native_pods.rb
@@ -242,6 +242,8 @@ def fix_library_search_paths(installer)
 end
 
 def react_native_post_install(installer)
+  turn_off_resource_bundle_react_core(installer)
+
   if has_pod(installer, 'Flipper')
     flipper_post_install(installer)
   end
@@ -661,3 +663,18 @@ def __apply_Xcode_12_5_M1_post_install_workaround(installer)
   time_header = "#{Pod::Config.instance.installation_root.to_s}/Pods/RCT-Folly/folly/portability/Time.h"
   `sed -i -e  $'s/ && (__IPHONE_OS_VERSION_MIN_REQUIRED < __IPHONE_10_0)//' #{time_header}`
 end
+
+
+def turn_off_resource_bundle_react_core(installer)
+  # this is needed for Xcode 14, see more details here https://github.com/facebook/react-native/issues/34673
+  # we should be able to remove this once CocoaPods catches up to it, see more details here https://github.com/CocoaPods/CocoaPods/issues/11402
+  installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
+      if ['React-Core', 'IQKeyboardManagerSwift', 'EXConstants'].include? pod_name.to_s
+          target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
+              resource_bundle_target.build_configurations.each do |config|
+                  config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
+              end
+          end
+      end
+  end
+end
\ No newline at end of file
diff --git a/node_modules/react-native/react.gradle b/node_modules/react-native/react.gradle
index d876b13..0af21f0 100644
--- a/node_modules/react-native/react.gradle
+++ b/node_modules/react-native/react.gradle
@@ -355,13 +355,9 @@ afterEvaluate {
                         from(jsBundleDir)
                     }

-                    // Workaround for Android Gradle Plugin 3.2+ new asset directory
-                    into ("merged_assets/${variant.name}/merge${targetName}Assets/out") {
-                        from(jsBundleDir)
-                    }
-
-                    // Workaround for Android Gradle Plugin 3.4+ new asset directory
-                    into ("merged_assets/${variant.name}/out") {
+                    // https://github.com/facebook/react-native/issues/32338
+                    // Workaround for Android Gradle Plugin 7.2 - 7.3 and React-Native 0.67.x - 0.68.x - Assets directory by christian
+                    into("assets/${variant.name}") {
                         from(jsBundleDir)
                     }
                 }
\ No newline at end of file