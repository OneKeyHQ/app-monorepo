(self.webpackChunkweb=self.webpackChunkweb||[]).push([[9141],{223808:e=>{"use strict";e.exports=function asPromise(e,t){var r=new Array(arguments.length-1),n=0,i=2,s=!0;for(;i<arguments.length;)r[n++]=arguments[i++];return new Promise((function executor(i,o){r[n]=function callback(e){if(s)if(s=!1,e)o(e);else{for(var t=new Array(arguments.length-1),r=0;r<t.length;)t[r++]=arguments[r];i.apply(null,t)}};try{e.apply(t||null,r)}catch(e){s&&(s=!1,o(e))}}))}},113320:(e,t)=>{"use strict";var r=t;r.length=function length(e){var t=e.length;if(!t)return 0;for(var r=0;--t%4>1&&"="===e.charAt(t);)++r;return Math.ceil(3*e.length)/4-r};for(var n=new Array(64),i=new Array(123),s=0;s<64;)i[n[s]=s<26?s+65:s<52?s+71:s<62?s-4:s-59|43]=s++;r.encode=function encode(e,t,r){for(var i,s=null,o=[],a=0,f=0;t<r;){var c=e[t++];switch(f){case 0:o[a++]=n[c>>2],i=(3&c)<<4,f=1;break;case 1:o[a++]=n[i|c>>4],i=(15&c)<<2,f=2;break;case 2:o[a++]=n[i|c>>6],o[a++]=n[63&c],f=0}a>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,o)),a=0)}return f&&(o[a++]=n[i],o[a++]=61,1===f&&(o[a++]=61)),s?(a&&s.push(String.fromCharCode.apply(String,o.slice(0,a))),s.join("")):String.fromCharCode.apply(String,o.slice(0,a))};var o="invalid encoding";r.decode=function decode(e,t,r){for(var n,s=r,a=0,f=0;f<e.length;){var c=e.charCodeAt(f++);if(61===c&&a>1)break;if(void 0===(c=i[c]))throw Error(o);switch(a){case 0:n=c,a=1;break;case 1:t[r++]=n<<2|(48&c)>>4,n=c,a=2;break;case 2:t[r++]=(15&n)<<4|(60&c)>>2,n=c,a=3;break;case 3:t[r++]=(3&n)<<6|c,a=0}}if(1===a)throw Error(o);return r-s},r.test=function test(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}},254132:e=>{"use strict";function codegen(e,t){"string"==typeof e&&(t=e,e=void 0);var r=[];function Codegen(e){if("string"!=typeof e){var t=toString();if(codegen.verbose&&console.log("codegen: "+t),t="return "+t,e){for(var n=Object.keys(e),i=new Array(n.length+1),s=new Array(n.length),o=0;o<n.length;)i[o]=n[o],s[o]=e[n[o++]];return i[o]=t,Function.apply(null,i).apply(null,s)}return Function(t)()}for(var a=new Array(arguments.length-1),f=0;f<a.length;)a[f]=arguments[++f];if(f=0,e=e.replace(/%([%dfijs])/g,(function replace(e,t){var r=a[f++];switch(t){case"d":case"f":return String(Number(r));case"i":return String(Math.floor(r));case"j":return JSON.stringify(r);case"s":return String(r)}return"%"})),f!==a.length)throw Error("parameter count mismatch");return r.push(e),Codegen}function toString(n){return"function "+(n||t||"")+"("+(e&&e.join(",")||"")+"){\n  "+r.join("\n  ")+"\n}"}return Codegen.toString=toString,Codegen}e.exports=codegen,codegen.verbose=!1},172149:e=>{"use strict";function EventEmitter(){this._listeners={}}e.exports=EventEmitter,EventEmitter.prototype.on=function on(e,t,r){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:r||this}),this},EventEmitter.prototype.off=function off(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var r=this._listeners[e],n=0;n<r.length;)r[n].fn===t?r.splice(n,1):++n;return this},EventEmitter.prototype.emit=function emit(e){var t=this._listeners[e];if(t){for(var r=[],n=1;n<arguments.length;)r.push(arguments[n++]);for(n=0;n<t.length;)t[n].fn.apply(t[n++].ctx,r)}return this}},250177:(e,t,r)=>{"use strict";e.exports=fetch;var n=r(223808),i=r(183768)("fs");function fetch(e,t,r){return"function"==typeof t?(r=t,t={}):t||(t={}),r?!t.xhr&&i&&i.readFile?i.readFile(e,(function fetchReadFileCallback(n,i){return n&&"undefined"!=typeof XMLHttpRequest?fetch.xhr(e,t,r):n?r(n):r(null,t.binary?i:i.toString("utf8"))})):fetch.xhr(e,t,r):n(fetch,this,e,t)}fetch.xhr=function fetch_xhr(e,t,r){var n=new XMLHttpRequest;n.onreadystatechange=function fetchOnReadyStateChange(){if(4===n.readyState){if(0!==n.status&&200!==n.status)return r(Error("status "+n.status));if(t.binary){var e=n.response;if(!e){e=[];for(var i=0;i<n.responseText.length;++i)e.push(255&n.responseText.charCodeAt(i))}return r(null,"undefined"!=typeof Uint8Array?new Uint8Array(e):e)}return r(null,n.responseText)}},t.binary&&("overrideMimeType"in n&&n.overrideMimeType("text/plain; charset=x-user-defined"),n.responseType="arraybuffer"),n.open("GET",e),n.send()}},61727:e=>{"use strict";function factory(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),r=new Uint8Array(t.buffer),n=128===r[3];function writeFloat_f32_cpy(e,n,i){t[0]=e,n[i]=r[0],n[i+1]=r[1],n[i+2]=r[2],n[i+3]=r[3]}function writeFloat_f32_rev(e,n,i){t[0]=e,n[i]=r[3],n[i+1]=r[2],n[i+2]=r[1],n[i+3]=r[0]}function readFloat_f32_cpy(e,n){return r[0]=e[n],r[1]=e[n+1],r[2]=e[n+2],r[3]=e[n+3],t[0]}function readFloat_f32_rev(e,n){return r[3]=e[n],r[2]=e[n+1],r[1]=e[n+2],r[0]=e[n+3],t[0]}e.writeFloatLE=n?writeFloat_f32_cpy:writeFloat_f32_rev,e.writeFloatBE=n?writeFloat_f32_rev:writeFloat_f32_cpy,e.readFloatLE=n?readFloat_f32_cpy:readFloat_f32_rev,e.readFloatBE=n?readFloat_f32_rev:readFloat_f32_cpy}():function(){function writeFloat_ieee754(e,t,r,n){var i=t<0?1:0;if(i&&(t=-t),0===t)e(1/t>0?0:2147483648,r,n);else if(isNaN(t))e(2143289344,r,n);else if(t>34028234663852886e22)e((i<<31|2139095040)>>>0,r,n);else if(t<11754943508222875e-54)e((i<<31|Math.round(t/1401298464324817e-60))>>>0,r,n);else{var s=Math.floor(Math.log(t)/Math.LN2);e((i<<31|s+127<<23|8388607&Math.round(t*Math.pow(2,-s)*8388608))>>>0,r,n)}}function readFloat_ieee754(e,t,r){var n=e(t,r),i=2*(n>>31)+1,s=n>>>23&255,o=8388607&n;return 255===s?o?NaN:i*(1/0):0===s?1401298464324817e-60*i*o:i*Math.pow(2,s-150)*(o+8388608)}e.writeFloatLE=writeFloat_ieee754.bind(null,writeUintLE),e.writeFloatBE=writeFloat_ieee754.bind(null,writeUintBE),e.readFloatLE=readFloat_ieee754.bind(null,readUintLE),e.readFloatBE=readFloat_ieee754.bind(null,readUintBE)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),r=new Uint8Array(t.buffer),n=128===r[7];function writeDouble_f64_cpy(e,n,i){t[0]=e,n[i]=r[0],n[i+1]=r[1],n[i+2]=r[2],n[i+3]=r[3],n[i+4]=r[4],n[i+5]=r[5],n[i+6]=r[6],n[i+7]=r[7]}function writeDouble_f64_rev(e,n,i){t[0]=e,n[i]=r[7],n[i+1]=r[6],n[i+2]=r[5],n[i+3]=r[4],n[i+4]=r[3],n[i+5]=r[2],n[i+6]=r[1],n[i+7]=r[0]}function readDouble_f64_cpy(e,n){return r[0]=e[n],r[1]=e[n+1],r[2]=e[n+2],r[3]=e[n+3],r[4]=e[n+4],r[5]=e[n+5],r[6]=e[n+6],r[7]=e[n+7],t[0]}function readDouble_f64_rev(e,n){return r[7]=e[n],r[6]=e[n+1],r[5]=e[n+2],r[4]=e[n+3],r[3]=e[n+4],r[2]=e[n+5],r[1]=e[n+6],r[0]=e[n+7],t[0]}e.writeDoubleLE=n?writeDouble_f64_cpy:writeDouble_f64_rev,e.writeDoubleBE=n?writeDouble_f64_rev:writeDouble_f64_cpy,e.readDoubleLE=n?readDouble_f64_cpy:readDouble_f64_rev,e.readDoubleBE=n?readDouble_f64_rev:readDouble_f64_cpy}():function(){function writeDouble_ieee754(e,t,r,n,i,s){var o=n<0?1:0;if(o&&(n=-n),0===n)e(0,i,s+t),e(1/n>0?0:2147483648,i,s+r);else if(isNaN(n))e(0,i,s+t),e(2146959360,i,s+r);else if(n>17976931348623157e292)e(0,i,s+t),e((o<<31|2146435072)>>>0,i,s+r);else{var a;if(n<22250738585072014e-324)e((a=n/5e-324)>>>0,i,s+t),e((o<<31|a/4294967296)>>>0,i,s+r);else{var f=Math.floor(Math.log(n)/Math.LN2);1024===f&&(f=1023),e(4503599627370496*(a=n*Math.pow(2,-f))>>>0,i,s+t),e((o<<31|f+1023<<20|1048576*a&1048575)>>>0,i,s+r)}}}function readDouble_ieee754(e,t,r,n,i){var s=e(n,i+t),o=e(n,i+r),a=2*(o>>31)+1,f=o>>>20&2047,c=4294967296*(1048575&o)+s;return 2047===f?c?NaN:a*(1/0):0===f?5e-324*a*c:a*Math.pow(2,f-1075)*(c+4503599627370496)}e.writeDoubleLE=writeDouble_ieee754.bind(null,writeUintLE,0,4),e.writeDoubleBE=writeDouble_ieee754.bind(null,writeUintBE,4,0),e.readDoubleLE=readDouble_ieee754.bind(null,readUintLE,0,4),e.readDoubleBE=readDouble_ieee754.bind(null,readUintBE,4,0)}(),e}function writeUintLE(e,t,r){t[r]=255&e,t[r+1]=e>>>8&255,t[r+2]=e>>>16&255,t[r+3]=e>>>24}function writeUintBE(e,t,r){t[r]=e>>>24,t[r+1]=e>>>16&255,t[r+2]=e>>>8&255,t[r+3]=255&e}function readUintLE(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function readUintBE(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}e.exports=factory(factory)},183768:module=>{"use strict";function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}module.exports=inquire},911080:(e,t)=>{"use strict";var r=t,n=r.isAbsolute=function isAbsolute(e){return/^(?:\/|\w+:)/.test(e)},i=r.normalize=function normalize(e){var t=(e=e.replace(/\\/g,"/").replace(/\/{2,}/g,"/")).split("/"),r=n(e),i="";r&&(i=t.shift()+"/");for(var s=0;s<t.length;)".."===t[s]?s>0&&".."!==t[s-1]?t.splice(--s,2):r?t.splice(s,1):++s:"."===t[s]?t.splice(s,1):++s;return i+t.join("/")};r.resolve=function resolve(e,t,r){return r||(t=i(t)),n(t)?t:(r||(e=i(e)),(e=e.replace(/(?:\/|^)[^/]+$/,"")).length?i(e+"/"+t):t)}},982461:e=>{"use strict";e.exports=function pool(e,t,r){var n=r||8192,i=n>>>1,s=null,o=n;return function pool_alloc(r){if(r<1||r>i)return e(r);o+r>n&&(s=e(n),o=0);var a=t.call(s,o,o+=r);return 7&o&&(o=1+(7|o)),a}}},205184:(e,t)=>{"use strict";var r=t;r.length=function utf8_length(e){for(var t=0,r=0,n=0;n<e.length;++n)(r=e.charCodeAt(n))<128?t+=1:r<2048?t+=2:55296==(64512&r)&&56320==(64512&e.charCodeAt(n+1))?(++n,t+=4):t+=3;return t},r.read=function utf8_read(e,t,r){if(r-t<1)return"";for(var n,i=null,s=[],o=0;t<r;)(n=e[t++])<128?s[o++]=n:n>191&&n<224?s[o++]=(31&n)<<6|63&e[t++]:n>239&&n<365?(n=((7&n)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,s[o++]=55296+(n>>10),s[o++]=56320+(1023&n)):s[o++]=(15&n)<<12|(63&e[t++])<<6|63&e[t++],o>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),o=0);return i?(o&&i.push(String.fromCharCode.apply(String,s.slice(0,o))),i.join("")):String.fromCharCode.apply(String,s.slice(0,o))},r.write=function utf8_write(e,t,r){for(var n,i,s=r,o=0;o<e.length;++o)(n=e.charCodeAt(o))<128?t[r++]=n:n<2048?(t[r++]=n>>6|192,t[r++]=63&n|128):55296==(64512&n)&&56320==(64512&(i=e.charCodeAt(o+1)))?(n=65536+((1023&n)<<10)+(1023&i),++o,t[r++]=n>>18|240,t[r++]=n>>12&63|128,t[r++]=n>>6&63|128,t[r++]=63&n|128):(t[r++]=n>>12|224,t[r++]=n>>6&63|128,t[r++]=63&n|128);return r-s}},937377:(e,t,r)=>{var n=r(720566),i=r(276928),s=r(558776);function ValueParser(e){return this instanceof ValueParser?(this.nodes=n(e),this):new ValueParser(e)}ValueParser.prototype.toString=function(){return Array.isArray(this.nodes)?s(this.nodes):""},ValueParser.prototype.walk=function(e,t){return i(this.nodes,e,t),this},ValueParser.unit=r(363475),ValueParser.walk=i,ValueParser.stringify=s,e.exports=ValueParser},720566:e=>{var t="(".charCodeAt(0),r=")".charCodeAt(0),n="'".charCodeAt(0),i='"'.charCodeAt(0),s="\\".charCodeAt(0),o="/".charCodeAt(0),a=",".charCodeAt(0),f=":".charCodeAt(0),c="*".charCodeAt(0),u="u".charCodeAt(0),d="U".charCodeAt(0),p="+".charCodeAt(0),v=/^[a-f0-9?-]+$/i;e.exports=function(e){for(var b,m,P,O,z,x,j,w,g,T=[],X=e,N=0,L=X.charCodeAt(N),Z=X.length,M=[{nodes:T}],H=0,R="",F="",V="";N<Z;)if(L<=32){b=N;do{b+=1,L=X.charCodeAt(b)}while(L<=32);O=X.slice(N,b),P=T[T.length-1],L===r&&H?V=O:P&&"div"===P.type?(P.after=O,P.sourceEndIndex+=O.length):L===a||L===f||L===o&&X.charCodeAt(b+1)!==c&&(!g||g&&"function"===g.type&&"calc"!==g.value)?F=O:T.push({type:"space",sourceIndex:N,sourceEndIndex:b,value:O}),N=b}else if(L===n||L===i){b=N,O={type:"string",sourceIndex:N,quote:m=L===n?"'":'"'};do{if(z=!1,~(b=X.indexOf(m,b+1)))for(x=b;X.charCodeAt(x-1)===s;)x-=1,z=!z;else b=(X+=m).length-1,O.unclosed=!0}while(z);O.value=X.slice(N+1,b),O.sourceEndIndex=O.unclosed?b:b+1,T.push(O),N=b+1,L=X.charCodeAt(N)}else if(L===o&&X.charCodeAt(N+1)===c)O={type:"comment",sourceIndex:N,sourceEndIndex:(b=X.indexOf("*/",N))+2},-1===b&&(O.unclosed=!0,b=X.length,O.sourceEndIndex=b),O.value=X.slice(N+2,b),T.push(O),N=b+2,L=X.charCodeAt(N);else if(L!==o&&L!==c||!g||"function"!==g.type||"calc"!==g.value)if(L===o||L===a||L===f)O=X[N],T.push({type:"div",sourceIndex:N-F.length,sourceEndIndex:N+O.length,value:O,before:F,after:""}),F="",N+=1,L=X.charCodeAt(N);else if(t===L){b=N;do{b+=1,L=X.charCodeAt(b)}while(L<=32);if(w=N,O={type:"function",sourceIndex:N-R.length,value:R,before:X.slice(w+1,b)},N=b,"url"===R&&L!==n&&L!==i){b-=1;do{if(z=!1,~(b=X.indexOf(")",b+1)))for(x=b;X.charCodeAt(x-1)===s;)x-=1,z=!z;else b=(X+=")").length-1,O.unclosed=!0}while(z);j=b;do{j-=1,L=X.charCodeAt(j)}while(L<=32);w<j?(O.nodes=N!==j+1?[{type:"word",sourceIndex:N,sourceEndIndex:j+1,value:X.slice(N,j+1)}]:[],O.unclosed&&j+1!==b?(O.after="",O.nodes.push({type:"space",sourceIndex:j+1,sourceEndIndex:b,value:X.slice(j+1,b)})):(O.after=X.slice(j+1,b),O.sourceEndIndex=b)):(O.after="",O.nodes=[]),N=b+1,O.sourceEndIndex=O.unclosed?b:N,L=X.charCodeAt(N),T.push(O)}else H+=1,O.after="",O.sourceEndIndex=N+1,T.push(O),M.push(O),T=O.nodes=[],g=O;R=""}else if(r===L&&H)N+=1,L=X.charCodeAt(N),g.after=V,g.sourceEndIndex+=V.length,V="",H-=1,M[M.length-1].sourceEndIndex=N,M.pop(),T=(g=M[H]).nodes;else{b=N;do{L===s&&(b+=1),b+=1,L=X.charCodeAt(b)}while(b<Z&&!(L<=32||L===n||L===i||L===a||L===f||L===o||L===t||L===c&&g&&"function"===g.type&&"calc"===g.value||L===o&&"function"===g.type&&"calc"===g.value||L===r&&H));O=X.slice(N,b),t===L?R=O:u!==O.charCodeAt(0)&&d!==O.charCodeAt(0)||p!==O.charCodeAt(1)||!v.test(O.slice(2))?T.push({type:"word",sourceIndex:N,sourceEndIndex:b,value:O}):T.push({type:"unicode-range",sourceIndex:N,sourceEndIndex:b,value:O}),N=b}else O=X[N],T.push({type:"word",sourceIndex:N-F.length,sourceEndIndex:N+O.length,value:O}),N+=1,L=X.charCodeAt(N);for(N=M.length-1;N;N-=1)M[N].unclosed=!0,M[N].sourceEndIndex=X.length;return M[0].nodes}},558776:e=>{function stringifyNode(e,t){var r,n,i=e.type,s=e.value;return t&&void 0!==(n=t(e))?n:"word"===i||"space"===i?s:"string"===i?(r=e.quote||"")+s+(e.unclosed?"":r):"comment"===i?"/*"+s+(e.unclosed?"":"*/"):"div"===i?(e.before||"")+s+(e.after||""):Array.isArray(e.nodes)?(r=stringify(e.nodes,t),"function"!==i?r:s+"("+(e.before||"")+r+(e.after||"")+(e.unclosed?"":")")):s}function stringify(e,t){var r,n;if(Array.isArray(e)){for(r="",n=e.length-1;~n;n-=1)r=stringifyNode(e[n],t)+r;return r}return stringifyNode(e,t)}e.exports=stringify},363475:e=>{var t="-".charCodeAt(0),r="+".charCodeAt(0),n=".".charCodeAt(0),i="e".charCodeAt(0),s="E".charCodeAt(0);e.exports=function(e){var o,a,f,c=0,u=e.length;if(0===u||!function likeNumber(e){var i,s=e.charCodeAt(0);if(s===r||s===t){if((i=e.charCodeAt(1))>=48&&i<=57)return!0;var o=e.charCodeAt(2);return i===n&&o>=48&&o<=57}return s===n?(i=e.charCodeAt(1))>=48&&i<=57:s>=48&&s<=57}(e))return!1;for((o=e.charCodeAt(c))!==r&&o!==t||c++;c<u&&!((o=e.charCodeAt(c))<48||o>57);)c+=1;if(o=e.charCodeAt(c),a=e.charCodeAt(c+1),o===n&&a>=48&&a<=57)for(c+=2;c<u&&!((o=e.charCodeAt(c))<48||o>57);)c+=1;if(o=e.charCodeAt(c),a=e.charCodeAt(c+1),f=e.charCodeAt(c+2),(o===i||o===s)&&(a>=48&&a<=57||(a===r||a===t)&&f>=48&&f<=57))for(c+=a===r||a===t?3:2;c<u&&!((o=e.charCodeAt(c))<48||o>57);)c+=1;return{number:e.slice(0,c),unit:e.slice(c)}}},276928:e=>{e.exports=function walk(e,t,r){var n,i,s,o;for(n=0,i=e.length;n<i;n+=1)s=e[n],r||(o=t(s,n,e)),!1!==o&&"function"===s.type&&Array.isArray(s.nodes)&&walk(s.nodes,t,r),r&&t(s,n,e)}},636999:(e,t,r)=>{"use strict";var n=r(536848);function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction,e.exports=function(){function shim(e,t,r,i,s,o){if(o!==n){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function getShim(){return shim}shim.isRequired=shim;var e={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return e.PropTypes=e,e}},939067:(e,t,r)=>{e.exports=r(636999)()},536848:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},130958:(e,t,r)=>{"use strict";e.exports=r(688054)},941145:(e,t,r)=>{"use strict";e.exports=r(15953)},875931:(e,t,r)=>{"use strict";var n=t,i=r(38118),s=r(938723);function genValuePartial_fromObject(e,t,r,n){if(t.resolvedType)if(t.resolvedType instanceof i){e("switch(d%s){",n);for(var s=t.resolvedType.values,o=Object.keys(s),a=0;a<o.length;++a)t.repeated&&s[o[a]]===t.typeDefault&&e("default:"),e("case%j:",o[a])("case %i:",s[o[a]])("m%s=%j",n,s[o[a]])("break");e("}")}else e('if(typeof d%s!=="object")',n)("throw TypeError(%j)",t.fullName+": object expected")("m%s=types[%i].fromObject(d%s)",n,r,n);else{var f=!1;switch(t.type){case"double":case"float":e("m%s=Number(d%s)",n,n);break;case"uint32":case"fixed32":e("m%s=d%s>>>0",n,n);break;case"int32":case"sint32":case"sfixed32":e("m%s=d%s|0",n,n);break;case"uint64":f=!0;case"int64":case"sint64":case"fixed64":case"sfixed64":e("if(util.Long)")("(m%s=util.Long.fromValue(d%s)).unsigned=%j",n,n,f)('else if(typeof d%s==="string")',n)("m%s=parseInt(d%s,10)",n,n)('else if(typeof d%s==="number")',n)("m%s=d%s",n,n)('else if(typeof d%s==="object")',n)("m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)",n,n,n,f?"true":"");break;case"bytes":e('if(typeof d%s==="string")',n)("util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)",n,n,n)("else if(d%s.length)",n)("m%s=d%s",n,n);break;case"string":e("m%s=String(d%s)",n,n);break;case"bool":e("m%s=Boolean(d%s)",n,n)}}return e}function genValuePartial_toObject(e,t,r,n){if(t.resolvedType)t.resolvedType instanceof i?e("d%s=o.enums===String?types[%i].values[m%s]:m%s",n,r,n,n):e("d%s=types[%i].toObject(m%s,o)",n,r,n);else{var s=!1;switch(t.type){case"double":case"float":e("d%s=o.json&&!isFinite(m%s)?String(m%s):m%s",n,n,n,n);break;case"uint64":s=!0;case"int64":case"sint64":case"fixed64":case"sfixed64":e('if(typeof m%s==="number")',n)("d%s=o.longs===String?String(m%s):m%s",n,n,n)("else")("d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s",n,n,n,n,s?"true":"",n);break;case"bytes":e("d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s",n,n,n,n,n);break;default:e("d%s=m%s",n,n)}}return e}n.fromObject=function fromObject(e){var t=e.fieldsArray,r=s.codegen(["d"],e.name+"$fromObject")("if(d instanceof this.ctor)")("return d");if(!t.length)return r("return new this.ctor");r("var m=new this.ctor");for(var n=0;n<t.length;++n){var o=t[n].resolve(),a=s.safeProp(o.name);o.map?(r("if(d%s){",a)('if(typeof d%s!=="object")',a)("throw TypeError(%j)",o.fullName+": object expected")("m%s={}",a)("for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){",a),genValuePartial_fromObject(r,o,n,a+"[ks[i]]")("}")("}")):o.repeated?(r("if(d%s){",a)("if(!Array.isArray(d%s))",a)("throw TypeError(%j)",o.fullName+": array expected")("m%s=[]",a)("for(var i=0;i<d%s.length;++i){",a),genValuePartial_fromObject(r,o,n,a+"[i]")("}")("}")):(o.resolvedType instanceof i||r("if(d%s!=null){",a),genValuePartial_fromObject(r,o,n,a),o.resolvedType instanceof i||r("}"))}return r("return m")},n.toObject=function toObject(e){var t=e.fieldsArray.slice().sort(s.compareFieldsById);if(!t.length)return s.codegen()("return {}");for(var r=s.codegen(["m","o"],e.name+"$toObject")("if(!o)")("o={}")("var d={}"),n=[],o=[],a=[],f=0;f<t.length;++f)t[f].partOf||(t[f].resolve().repeated?n:t[f].map?o:a).push(t[f]);if(n.length){for(r("if(o.arrays||o.defaults){"),f=0;f<n.length;++f)r("d%s=[]",s.safeProp(n[f].name));r("}")}if(o.length){for(r("if(o.objects||o.defaults){"),f=0;f<o.length;++f)r("d%s={}",s.safeProp(o[f].name));r("}")}if(a.length){for(r("if(o.defaults){"),f=0;f<a.length;++f){var c=a[f],u=s.safeProp(c.name);if(c.resolvedType instanceof i)r("d%s=o.enums===String?%j:%j",u,c.resolvedType.valuesById[c.typeDefault],c.typeDefault);else if(c.long)r("if(util.Long){")("var n=new util.Long(%i,%i,%j)",c.typeDefault.low,c.typeDefault.high,c.typeDefault.unsigned)("d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n",u)("}else")("d%s=o.longs===String?%j:%i",u,c.typeDefault.toString(),c.typeDefault.toNumber());else if(c.bytes){var d="["+Array.prototype.slice.call(c.typeDefault).join(",")+"]";r("if(o.bytes===String)d%s=%j",u,String.fromCharCode.apply(String,c.typeDefault))("else{")("d%s=%s",u,d)("if(o.bytes!==Array)d%s=util.newBuffer(d%s)",u,u)("}")}else r("d%s=%j",u,c.typeDefault)}r("}")}var p=!1;for(f=0;f<t.length;++f){c=t[f];var v=e._fieldsArray.indexOf(c);u=s.safeProp(c.name);c.map?(p||(p=!0,r("var ks2")),r("if(m%s&&(ks2=Object.keys(m%s)).length){",u,u)("d%s={}",u)("for(var j=0;j<ks2.length;++j){"),genValuePartial_toObject(r,c,v,u+"[ks2[j]]")("}")):c.repeated?(r("if(m%s&&m%s.length){",u,u)("d%s=[]",u)("for(var j=0;j<m%s.length;++j){",u),genValuePartial_toObject(r,c,v,u+"[j]")("}")):(r("if(m%s!=null&&m.hasOwnProperty(%j)){",u,c.name),genValuePartial_toObject(r,c,v,u),c.partOf&&r("if(o.oneofs)")("d%s=%j",s.safeProp(c.partOf.name),c.name)),r("}")}return r("return d")}},724455:(e,t,r)=>{"use strict";e.exports=function decoder(e){var t=s.codegen(["r","l"],e.name+"$decode")("if(!(r instanceof Reader))")("r=Reader.create(r)")("var c=l===undefined?r.len:r.pos+l,m=new this.ctor"+(e.fieldsArray.filter((function(e){return e.map})).length?",k,value":""))("while(r.pos<c){")("var t=r.uint32()");e.group&&t("if((t&7)===4)")("break");t("switch(t>>>3){");for(var r=0;r<e.fieldsArray.length;++r){var o=e._fieldsArray[r].resolve(),a=o.resolvedType instanceof n?"int32":o.type,f="m"+s.safeProp(o.name);t("case %i:",o.id),o.map?(t("if(%s===util.emptyObject)",f)("%s={}",f)("var c2 = r.uint32()+r.pos"),void 0!==i.defaults[o.keyType]?t("k=%j",i.defaults[o.keyType]):t("k=null"),void 0!==i.defaults[a]?t("value=%j",i.defaults[a]):t("value=null"),t("while(r.pos<c2){")("var tag2=r.uint32()")("switch(tag2>>>3){")("case 1: k=r.%s(); break",o.keyType)("case 2:"),void 0===i.basic[a]?t("value=types[%i].decode(r,r.uint32())",r):t("value=r.%s()",a),t("break")("default:")("r.skipType(tag2&7)")("break")("}")("}"),void 0!==i.long[o.keyType]?t('%s[typeof k==="object"?util.longToHash(k):k]=value',f):t("%s[k]=value",f)):o.repeated?(t("if(!(%s&&%s.length))",f,f)("%s=[]",f),void 0!==i.packed[a]&&t("if((t&7)===2){")("var c2=r.uint32()+r.pos")("while(r.pos<c2)")("%s.push(r.%s())",f,a)("}else"),void 0===i.basic[a]?t(o.resolvedType.group?"%s.push(types[%i].decode(r))":"%s.push(types[%i].decode(r,r.uint32()))",f,r):t("%s.push(r.%s())",f,a)):void 0===i.basic[a]?t(o.resolvedType.group?"%s=types[%i].decode(r)":"%s=types[%i].decode(r,r.uint32())",f,r):t("%s=r.%s()",f,a),t("break")}for(t("default:")("r.skipType(t&7)")("break")("}")("}"),r=0;r<e._fieldsArray.length;++r){var c=e._fieldsArray[r];c.required&&t("if(!m.hasOwnProperty(%j))",c.name)("throw util.ProtocolError(%j,{instance:m})",missing(c))}return t("return m")};var n=r(38118),i=r(205594),s=r(938723);function missing(e){return"missing required '"+e.name+"'"}},367471:(e,t,r)=>{"use strict";e.exports=function encoder(e){for(var t,r=s.codegen(["m","w"],e.name+"$encode")("if(!w)")("w=Writer.create()"),o=e.fieldsArray.slice().sort(s.compareFieldsById),a=0;a<o.length;++a){var f=o[a].resolve(),c=e._fieldsArray.indexOf(f),u=f.resolvedType instanceof n?"int32":f.type,d=i.basic[u];t="m"+s.safeProp(f.name),f.map?(r("if(%s!=null&&Object.hasOwnProperty.call(m,%j)){",t,f.name)("for(var ks=Object.keys(%s),i=0;i<ks.length;++i){",t)("w.uint32(%i).fork().uint32(%i).%s(ks[i])",(f.id<<3|2)>>>0,8|i.mapKey[f.keyType],f.keyType),void 0===d?r("types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()",c,t):r(".uint32(%i).%s(%s[ks[i]]).ldelim()",16|d,u,t),r("}")("}")):f.repeated?(r("if(%s!=null&&%s.length){",t,t),f.packed&&void 0!==i.packed[u]?r("w.uint32(%i).fork()",(f.id<<3|2)>>>0)("for(var i=0;i<%s.length;++i)",t)("w.%s(%s[i])",u,t)("w.ldelim()"):(r("for(var i=0;i<%s.length;++i)",t),void 0===d?genTypePartial(r,f,c,t+"[i]"):r("w.uint32(%i).%s(%s[i])",(f.id<<3|d)>>>0,u,t)),r("}")):(f.optional&&r("if(%s!=null&&Object.hasOwnProperty.call(m,%j))",t,f.name),void 0===d?genTypePartial(r,f,c,t):r("w.uint32(%i).%s(%s)",(f.id<<3|d)>>>0,u,t))}return r("return w")};var n=r(38118),i=r(205594),s=r(938723);function genTypePartial(e,t,r,n){return t.resolvedType.group?e("types[%i].encode(%s,w.uint32(%i)).uint32(%i)",r,n,(t.id<<3|3)>>>0,(t.id<<3|4)>>>0):e("types[%i].encode(%s,w.uint32(%i).fork()).ldelim()",r,n,(t.id<<3|2)>>>0)}},38118:(e,t,r)=>{"use strict";e.exports=Enum;var n=r(857812);((Enum.prototype=Object.create(n.prototype)).constructor=Enum).className="Enum";var i=r(334060),s=r(938723);function Enum(e,t,r,i,s){if(n.call(this,e,r),t&&"object"!=typeof t)throw TypeError("values must be an object");if(this.valuesById={},this.values=Object.create(this.valuesById),this.comment=i,this.comments=s||{},this.reserved=void 0,t)for(var o=Object.keys(t),a=0;a<o.length;++a)"number"==typeof t[o[a]]&&(this.valuesById[this.values[o[a]]=t[o[a]]]=o[a])}Enum.fromJSON=function fromJSON(e,t){var r=new Enum(e,t.values,t.options,t.comment,t.comments);return r.reserved=t.reserved,r},Enum.prototype.toJSON=function toJSON(e){var t=!!e&&Boolean(e.keepComments);return s.toObject(["options",this.options,"values",this.values,"reserved",this.reserved&&this.reserved.length?this.reserved:void 0,"comment",t?this.comment:void 0,"comments",t?this.comments:void 0])},Enum.prototype.add=function add(e,t,r){if(!s.isString(e))throw TypeError("name must be a string");if(!s.isInteger(t))throw TypeError("id must be an integer");if(void 0!==this.values[e])throw Error("duplicate name '"+e+"' in "+this);if(this.isReservedId(t))throw Error("id "+t+" is reserved in "+this);if(this.isReservedName(e))throw Error("name '"+e+"' is reserved in "+this);if(void 0!==this.valuesById[t]){if(!this.options||!this.options.allow_alias)throw Error("duplicate id "+t+" in "+this);this.values[e]=t}else this.valuesById[this.values[e]=t]=e;return this.comments[e]=r||null,this},Enum.prototype.remove=function remove(e){if(!s.isString(e))throw TypeError("name must be a string");var t=this.values[e];if(null==t)throw Error("name '"+e+"' does not exist in "+this);return delete this.valuesById[t],delete this.values[e],delete this.comments[e],this},Enum.prototype.isReservedId=function isReservedId(e){return i.isReservedId(this.reserved,e)},Enum.prototype.isReservedName=function isReservedName(e){return i.isReservedName(this.reserved,e)}},524243:(e,t,r)=>{"use strict";e.exports=Field;var n=r(857812);((Field.prototype=Object.create(n.prototype)).constructor=Field).className="Field";var i,s=r(38118),o=r(205594),a=r(938723),f=/^required|optional|repeated$/;function Field(e,t,r,i,s,c,u){if(a.isObject(i)?(u=s,c=i,i=s=void 0):a.isObject(s)&&(u=c,c=s,s=void 0),n.call(this,e,c),!a.isInteger(t)||t<0)throw TypeError("id must be a non-negative integer");if(!a.isString(r))throw TypeError("type must be a string");if(void 0!==i&&!f.test(i=i.toString().toLowerCase()))throw TypeError("rule must be a string rule");if(void 0!==s&&!a.isString(s))throw TypeError("extend must be a string");"proto3_optional"===i&&(i="optional"),this.rule=i&&"optional"!==i?i:void 0,this.type=r,this.id=t,this.extend=s||void 0,this.required="required"===i,this.optional=!this.required,this.repeated="repeated"===i,this.map=!1,this.message=null,this.partOf=null,this.typeDefault=null,this.defaultValue=null,this.long=!!a.Long&&void 0!==o.long[r],this.bytes="bytes"===r,this.resolvedType=null,this.extensionField=null,this.declaringField=null,this._packed=null,this.comment=u}Field.fromJSON=function fromJSON(e,t){return new Field(e,t.id,t.type,t.rule,t.extend,t.options,t.comment)},Object.defineProperty(Field.prototype,"packed",{get:function(){return null===this._packed&&(this._packed=!1!==this.getOption("packed")),this._packed}}),Field.prototype.setOption=function setOption(e,t,r){return"packed"===e&&(this._packed=null),n.prototype.setOption.call(this,e,t,r)},Field.prototype.toJSON=function toJSON(e){var t=!!e&&Boolean(e.keepComments);return a.toObject(["rule","optional"!==this.rule&&this.rule||void 0,"type",this.type,"id",this.id,"extend",this.extend,"options",this.options,"comment",t?this.comment:void 0])},Field.prototype.resolve=function resolve(){if(this.resolved)return this;if(void 0===(this.typeDefault=o.defaults[this.type])&&(this.resolvedType=(this.declaringField?this.declaringField.parent:this.parent).lookupTypeOrEnum(this.type),this.resolvedType instanceof i?this.typeDefault=null:this.typeDefault=this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]),this.options&&null!=this.options.default&&(this.typeDefault=this.options.default,this.resolvedType instanceof s&&"string"==typeof this.typeDefault&&(this.typeDefault=this.resolvedType.values[this.typeDefault])),this.options&&(!0!==this.options.packed&&(void 0===this.options.packed||!this.resolvedType||this.resolvedType instanceof s)||delete this.options.packed,Object.keys(this.options).length||(this.options=void 0)),this.long)this.typeDefault=a.Long.fromNumber(this.typeDefault,"u"===this.type.charAt(0)),Object.freeze&&Object.freeze(this.typeDefault);else if(this.bytes&&"string"==typeof this.typeDefault){var e;a.base64.test(this.typeDefault)?a.base64.decode(this.typeDefault,e=a.newBuffer(a.base64.length(this.typeDefault)),0):a.utf8.write(this.typeDefault,e=a.newBuffer(a.utf8.length(this.typeDefault)),0),this.typeDefault=e}return this.map?this.defaultValue=a.emptyObject:this.repeated?this.defaultValue=a.emptyArray:this.defaultValue=this.typeDefault,this.parent instanceof i&&(this.parent.ctor.prototype[this.name]=this.defaultValue),n.prototype.resolve.call(this)},Field.d=function decorateField(e,t,r,n){return"function"==typeof t?t=a.decorateType(t).name:t&&"object"==typeof t&&(t=a.decorateEnum(t).name),function fieldDecorator(i,s){a.decorateType(i.constructor).add(new Field(s,e,t,r,{default:n}))}},Field._configure=function configure(e){i=e}},688054:(e,t,r)=>{"use strict";var n=e.exports=r(15953);n.build="light",n.load=function load(e,t,r){return"function"==typeof t?(r=t,t=new n.Root):t||(t=new n.Root),t.load(e,r)},n.loadSync=function loadSync(e,t){return t||(t=new n.Root),t.loadSync(e)},n.encoder=r(367471),n.decoder=r(724455),n.verifier=r(113777),n.converter=r(875931),n.ReflectionObject=r(857812),n.Namespace=r(334060),n.Root=r(327207),n.Enum=r(38118),n.Type=r(961311),n.Field=r(524243),n.OneOf=r(917166),n.MapField=r(484341),n.Service=r(803712),n.Method=r(777082),n.Message=r(109348),n.wrappers=r(231359),n.types=r(205594),n.util=r(938723),n.ReflectionObject._configure(n.Root),n.Namespace._configure(n.Type,n.Service,n.Enum),n.Root._configure(n.Type),n.Field._configure(n.Type)},15953:(e,t,r)=>{"use strict";var n=t;function configure(){n.util._configure(),n.Writer._configure(n.BufferWriter),n.Reader._configure(n.BufferReader)}n.build="minimal",n.Writer=r(213108),n.BufferWriter=r(452533),n.Reader=r(36344),n.BufferReader=r(122777),n.util=r(805099),n.rpc=r(657080),n.roots=r(474738),n.configure=configure,configure()},484341:(e,t,r)=>{"use strict";e.exports=MapField;var n=r(524243);((MapField.prototype=Object.create(n.prototype)).constructor=MapField).className="MapField";var i=r(205594),s=r(938723);function MapField(e,t,r,i,o,a){if(n.call(this,e,t,i,void 0,void 0,o,a),!s.isString(r))throw TypeError("keyType must be a string");this.keyType=r,this.resolvedKeyType=null,this.map=!0}MapField.fromJSON=function fromJSON(e,t){return new MapField(e,t.id,t.keyType,t.type,t.options,t.comment)},MapField.prototype.toJSON=function toJSON(e){var t=!!e&&Boolean(e.keepComments);return s.toObject(["keyType",this.keyType,"type",this.type,"id",this.id,"extend",this.extend,"options",this.options,"comment",t?this.comment:void 0])},MapField.prototype.resolve=function resolve(){if(this.resolved)return this;if(void 0===i.mapKey[this.keyType])throw Error("invalid key type: "+this.keyType);return n.prototype.resolve.call(this)},MapField.d=function decorateMapField(e,t,r){return"function"==typeof r?r=s.decorateType(r).name:r&&"object"==typeof r&&(r=s.decorateEnum(r).name),function mapFieldDecorator(n,i){s.decorateType(n.constructor).add(new MapField(i,e,t,r))}}},109348:(e,t,r)=>{"use strict";e.exports=Message;var n=r(805099);function Message(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)this[t[r]]=e[t[r]]}Message.create=function create(e){return this.$type.create(e)},Message.encode=function encode(e,t){return this.$type.encode(e,t)},Message.encodeDelimited=function encodeDelimited(e,t){return this.$type.encodeDelimited(e,t)},Message.decode=function decode(e){return this.$type.decode(e)},Message.decodeDelimited=function decodeDelimited(e){return this.$type.decodeDelimited(e)},Message.verify=function verify(e){return this.$type.verify(e)},Message.fromObject=function fromObject(e){return this.$type.fromObject(e)},Message.toObject=function toObject(e,t){return this.$type.toObject(e,t)},Message.prototype.toJSON=function toJSON(){return this.$type.toObject(this,n.toJSONOptions)}},777082:(e,t,r)=>{"use strict";e.exports=Method;var n=r(857812);((Method.prototype=Object.create(n.prototype)).constructor=Method).className="Method";var i=r(938723);function Method(e,t,r,s,o,a,f,c,u){if(i.isObject(o)?(f=o,o=a=void 0):i.isObject(a)&&(f=a,a=void 0),void 0!==t&&!i.isString(t))throw TypeError("type must be a string");if(!i.isString(r))throw TypeError("requestType must be a string");if(!i.isString(s))throw TypeError("responseType must be a string");n.call(this,e,f),this.type=t||"rpc",this.requestType=r,this.requestStream=!!o||void 0,this.responseType=s,this.responseStream=!!a||void 0,this.resolvedRequestType=null,this.resolvedResponseType=null,this.comment=c,this.parsedOptions=u}Method.fromJSON=function fromJSON(e,t){return new Method(e,t.type,t.requestType,t.responseType,t.requestStream,t.responseStream,t.options,t.comment,t.parsedOptions)},Method.prototype.toJSON=function toJSON(e){var t=!!e&&Boolean(e.keepComments);return i.toObject(["type","rpc"!==this.type&&this.type||void 0,"requestType",this.requestType,"requestStream",this.requestStream,"responseType",this.responseType,"responseStream",this.responseStream,"options",this.options,"comment",t?this.comment:void 0,"parsedOptions",this.parsedOptions])},Method.prototype.resolve=function resolve(){return this.resolved?this:(this.resolvedRequestType=this.parent.lookupType(this.requestType),this.resolvedResponseType=this.parent.lookupType(this.responseType),n.prototype.resolve.call(this))}},334060:(e,t,r)=>{"use strict";e.exports=Namespace;var n=r(857812);((Namespace.prototype=Object.create(n.prototype)).constructor=Namespace).className="Namespace";var i,s,o,a=r(524243),f=r(917166),c=r(938723);function arrayToJSON(e,t){if(e&&e.length){for(var r={},n=0;n<e.length;++n)r[e[n].name]=e[n].toJSON(t);return r}}function Namespace(e,t){n.call(this,e,t),this.nested=void 0,this._nestedArray=null}function clearCache(e){return e._nestedArray=null,e}Namespace.fromJSON=function fromJSON(e,t){return new Namespace(e,t.options).addJSON(t.nested)},Namespace.arrayToJSON=arrayToJSON,Namespace.isReservedId=function isReservedId(e,t){if(e)for(var r=0;r<e.length;++r)if("string"!=typeof e[r]&&e[r][0]<=t&&e[r][1]>t)return!0;return!1},Namespace.isReservedName=function isReservedName(e,t){if(e)for(var r=0;r<e.length;++r)if(e[r]===t)return!0;return!1},Object.defineProperty(Namespace.prototype,"nestedArray",{get:function(){return this._nestedArray||(this._nestedArray=c.toArray(this.nested))}}),Namespace.prototype.toJSON=function toJSON(e){return c.toObject(["options",this.options,"nested",arrayToJSON(this.nestedArray,e)])},Namespace.prototype.addJSON=function addJSON(e){if(e)for(var t,r=Object.keys(e),n=0;n<r.length;++n)t=e[r[n]],this.add((void 0!==t.fields?i.fromJSON:void 0!==t.values?o.fromJSON:void 0!==t.methods?s.fromJSON:void 0!==t.id?a.fromJSON:Namespace.fromJSON)(r[n],t));return this},Namespace.prototype.get=function get(e){return this.nested&&this.nested[e]||null},Namespace.prototype.getEnum=function getEnum(e){if(this.nested&&this.nested[e]instanceof o)return this.nested[e].values;throw Error("no such enum: "+e)},Namespace.prototype.add=function add(e){if(!(e instanceof a&&void 0!==e.extend||e instanceof i||e instanceof o||e instanceof s||e instanceof Namespace||e instanceof f))throw TypeError("object must be a valid nested object");if(this.nested){var t=this.get(e.name);if(t){if(!(t instanceof Namespace&&e instanceof Namespace)||t instanceof i||t instanceof s)throw Error("duplicate name '"+e.name+"' in "+this);for(var r=t.nestedArray,n=0;n<r.length;++n)e.add(r[n]);this.remove(t),this.nested||(this.nested={}),e.setOptions(t.options,!0)}}else this.nested={};return this.nested[e.name]=e,e.onAdd(this),clearCache(this)},Namespace.prototype.remove=function remove(e){if(!(e instanceof n))throw TypeError("object must be a ReflectionObject");if(e.parent!==this)throw Error(e+" is not a member of "+this);return delete this.nested[e.name],Object.keys(this.nested).length||(this.nested=void 0),e.onRemove(this),clearCache(this)},Namespace.prototype.define=function define(e,t){if(c.isString(e))e=e.split(".");else if(!Array.isArray(e))throw TypeError("illegal path");if(e&&e.length&&""===e[0])throw Error("path must be relative");for(var r=this;e.length>0;){var n=e.shift();if(r.nested&&r.nested[n]){if(!((r=r.nested[n])instanceof Namespace))throw Error("path conflicts with non-namespace objects")}else r.add(r=new Namespace(n))}return t&&r.addJSON(t),r},Namespace.prototype.resolveAll=function resolveAll(){for(var e=this.nestedArray,t=0;t<e.length;)e[t]instanceof Namespace?e[t++].resolveAll():e[t++].resolve();return this.resolve()},Namespace.prototype.lookup=function lookup(e,t,r){if("boolean"==typeof t?(r=t,t=void 0):t&&!Array.isArray(t)&&(t=[t]),c.isString(e)&&e.length){if("."===e)return this.root;e=e.split(".")}else if(!e.length)return this;if(""===e[0])return this.root.lookup(e.slice(1),t);var n=this.get(e[0]);if(n){if(1===e.length){if(!t||t.indexOf(n.constructor)>-1)return n}else if(n instanceof Namespace&&(n=n.lookup(e.slice(1),t,!0)))return n}else for(var i=0;i<this.nestedArray.length;++i)if(this._nestedArray[i]instanceof Namespace&&(n=this._nestedArray[i].lookup(e,t,!0)))return n;return null===this.parent||r?null:this.parent.lookup(e,t)},Namespace.prototype.lookupType=function lookupType(e){var t=this.lookup(e,[i]);if(!t)throw Error("no such type: "+e);return t},Namespace.prototype.lookupEnum=function lookupEnum(e){var t=this.lookup(e,[o]);if(!t)throw Error("no such Enum '"+e+"' in "+this);return t},Namespace.prototype.lookupTypeOrEnum=function lookupTypeOrEnum(e){var t=this.lookup(e,[i,o]);if(!t)throw Error("no such Type or Enum '"+e+"' in "+this);return t},Namespace.prototype.lookupService=function lookupService(e){var t=this.lookup(e,[s]);if(!t)throw Error("no such Service '"+e+"' in "+this);return t},Namespace._configure=function(e,t,r){i=e,s=t,o=r}},857812:(e,t,r)=>{"use strict";e.exports=ReflectionObject,ReflectionObject.className="ReflectionObject";var n,i=r(938723);function ReflectionObject(e,t){if(!i.isString(e))throw TypeError("name must be a string");if(t&&!i.isObject(t))throw TypeError("options must be an object");this.options=t,this.parsedOptions=null,this.name=e,this.parent=null,this.resolved=!1,this.comment=null,this.filename=null}Object.defineProperties(ReflectionObject.prototype,{root:{get:function(){for(var e=this;null!==e.parent;)e=e.parent;return e}},fullName:{get:function(){for(var e=[this.name],t=this.parent;t;)e.unshift(t.name),t=t.parent;return e.join(".")}}}),ReflectionObject.prototype.toJSON=function toJSON(){throw Error()},ReflectionObject.prototype.onAdd=function onAdd(e){this.parent&&this.parent!==e&&this.parent.remove(this),this.parent=e,this.resolved=!1;var t=e.root;t instanceof n&&t._handleAdd(this)},ReflectionObject.prototype.onRemove=function onRemove(e){var t=e.root;t instanceof n&&t._handleRemove(this),this.parent=null,this.resolved=!1},ReflectionObject.prototype.resolve=function resolve(){return this.resolved||this.root instanceof n&&(this.resolved=!0),this},ReflectionObject.prototype.getOption=function getOption(e){if(this.options)return this.options[e]},ReflectionObject.prototype.setOption=function setOption(e,t,r){return r&&this.options&&void 0!==this.options[e]||((this.options||(this.options={}))[e]=t),this},ReflectionObject.prototype.setParsedOption=function setParsedOption(e,t,r){this.parsedOptions||(this.parsedOptions=[]);var n=this.parsedOptions;if(r){var s=n.find((function(t){return Object.prototype.hasOwnProperty.call(t,e)}));if(s){var o=s[e];i.setProperty(o,r,t)}else(s={})[e]=i.setProperty({},r,t),n.push(s)}else{var a={};a[e]=t,n.push(a)}return this},ReflectionObject.prototype.setOptions=function setOptions(e,t){if(e)for(var r=Object.keys(e),n=0;n<r.length;++n)this.setOption(r[n],e[r[n]],t);return this},ReflectionObject.prototype.toString=function toString(){var e=this.constructor.className,t=this.fullName;return t.length?e+" "+t:e},ReflectionObject._configure=function(e){n=e}},917166:(e,t,r)=>{"use strict";e.exports=OneOf;var n=r(857812);((OneOf.prototype=Object.create(n.prototype)).constructor=OneOf).className="OneOf";var i=r(524243),s=r(938723);function OneOf(e,t,r,i){if(Array.isArray(t)||(r=t,t=void 0),n.call(this,e,r),void 0!==t&&!Array.isArray(t))throw TypeError("fieldNames must be an Array");this.oneof=t||[],this.fieldsArray=[],this.comment=i}function addFieldsToParent(e){if(e.parent)for(var t=0;t<e.fieldsArray.length;++t)e.fieldsArray[t].parent||e.parent.add(e.fieldsArray[t])}OneOf.fromJSON=function fromJSON(e,t){return new OneOf(e,t.oneof,t.options,t.comment)},OneOf.prototype.toJSON=function toJSON(e){var t=!!e&&Boolean(e.keepComments);return s.toObject(["options",this.options,"oneof",this.oneof,"comment",t?this.comment:void 0])},OneOf.prototype.add=function add(e){if(!(e instanceof i))throw TypeError("field must be a Field");return e.parent&&e.parent!==this.parent&&e.parent.remove(e),this.oneof.push(e.name),this.fieldsArray.push(e),e.partOf=this,addFieldsToParent(this),this},OneOf.prototype.remove=function remove(e){if(!(e instanceof i))throw TypeError("field must be a Field");var t=this.fieldsArray.indexOf(e);if(t<0)throw Error(e+" is not a member of "+this);return this.fieldsArray.splice(t,1),(t=this.oneof.indexOf(e.name))>-1&&this.oneof.splice(t,1),e.partOf=null,this},OneOf.prototype.onAdd=function onAdd(e){n.prototype.onAdd.call(this,e);for(var t=0;t<this.oneof.length;++t){var r=e.get(this.oneof[t]);r&&!r.partOf&&(r.partOf=this,this.fieldsArray.push(r))}addFieldsToParent(this)},OneOf.prototype.onRemove=function onRemove(e){for(var t,r=0;r<this.fieldsArray.length;++r)(t=this.fieldsArray[r]).parent&&t.parent.remove(t);n.prototype.onRemove.call(this,e)},OneOf.d=function decorateOneOf(){for(var e=new Array(arguments.length),t=0;t<arguments.length;)e[t]=arguments[t++];return function oneOfDecorator(t,r){s.decorateType(t.constructor).add(new OneOf(r,e)),Object.defineProperty(t,r,{get:s.oneOfGetter(e),set:s.oneOfSetter(e)})}}},36344:(e,t,r)=>{"use strict";e.exports=Reader;var n,i=r(805099),s=i.LongBits,o=i.utf8;function indexOutOfRange(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function Reader(e){this.buf=e,this.pos=0,this.len=e.length}var a="undefined"!=typeof Uint8Array?function create_typed_array(e){if(e instanceof Uint8Array||Array.isArray(e))return new Reader(e);throw Error("illegal buffer")}:function create_array(e){if(Array.isArray(e))return new Reader(e);throw Error("illegal buffer")},f=function create(){return i.Buffer?function create_buffer_setup(e){return(Reader.create=function create_buffer(e){return i.Buffer.isBuffer(e)?new n(e):a(e)})(e)}:a};function readLongVarint(){var e=new s(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw indexOutOfRange(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw indexOutOfRange(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function readFixed32_end(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new s(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader.create=f(),Reader.prototype._slice=i.Array.prototype.subarray||i.Array.prototype.slice,Reader.prototype.uint32=function read_uint32_setup(){var e=4294967295;return function read_uint32(){if(e=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return e;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return e}}(),Reader.prototype.int32=function read_int32(){return 0|this.uint32()},Reader.prototype.sint32=function read_sint32(){var e=this.uint32();return e>>>1^-(1&e)},Reader.prototype.bool=function read_bool(){return 0!==this.uint32()},Reader.prototype.fixed32=function read_fixed32(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)},Reader.prototype.sfixed32=function read_sfixed32(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return 0|readFixed32_end(this.buf,this.pos+=4)},Reader.prototype.float=function read_float(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var e=i.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},Reader.prototype.double=function read_double(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var e=i.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},Reader.prototype.bytes=function read_bytes(){var e=this.uint32(),t=this.pos,r=this.pos+e;if(r>this.len)throw indexOutOfRange(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,r):t===r?new this.buf.constructor(0):this._slice.call(this.buf,t,r)},Reader.prototype.string=function read_string(){var e=this.bytes();return o.read(e,0,e.length)},Reader.prototype.skip=function skip(e){if("number"==typeof e){if(this.pos+e>this.len)throw indexOutOfRange(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw indexOutOfRange(this)}while(128&this.buf[this.pos++]);return this},Reader.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},Reader._configure=function(e){n=e,Reader.create=f(),n._configure();var t=i.Long?"toLong":"toNumber";i.merge(Reader.prototype,{int64:function read_int64(){return readLongVarint.call(this)[t](!1)},uint64:function read_uint64(){return readLongVarint.call(this)[t](!0)},sint64:function read_sint64(){return readLongVarint.call(this).zzDecode()[t](!1)},fixed64:function read_fixed64(){return readFixed64.call(this)[t](!0)},sfixed64:function read_sfixed64(){return readFixed64.call(this)[t](!1)}})}},122777:(e,t,r)=>{"use strict";e.exports=BufferReader;var n=r(36344);(BufferReader.prototype=Object.create(n.prototype)).constructor=BufferReader;var i=r(805099);function BufferReader(e){n.call(this,e)}BufferReader._configure=function(){i.Buffer&&(BufferReader.prototype._slice=i.Buffer.prototype.slice)},BufferReader.prototype.string=function read_string_buffer(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))},BufferReader._configure()},327207:(e,t,r)=>{"use strict";e.exports=Root;var n=r(334060);((Root.prototype=Object.create(n.prototype)).constructor=Root).className="Root";var i,s,o,a=r(524243),f=r(38118),c=r(917166),u=r(938723);function Root(e){n.call(this,"",e),this.deferred=[],this.files=[]}function SYNC(){}Root.fromJSON=function fromJSON(e,t){return t||(t=new Root),e.options&&t.setOptions(e.options),t.addJSON(e.nested)},Root.prototype.resolvePath=u.path.resolve,Root.prototype.fetch=u.fetch,Root.prototype.load=function load(e,t,r){"function"==typeof t&&(r=t,t=void 0);var n=this;if(!r)return u.asPromise(load,n,e,t);var i=r===SYNC;function finish(e,t){if(r){var n=r;if(r=null,i)throw e;n(e,t)}}function getBundledFileName(e){var t=e.lastIndexOf("google/protobuf/");if(t>-1){var r=e.substring(t);if(r in o)return r}return null}function process(e,r){try{if(u.isString(r)&&"{"===r.charAt(0)&&(r=JSON.parse(r)),u.isString(r)){s.filename=e;var o,f=s(r,n,t),c=0;if(f.imports)for(;c<f.imports.length;++c)(o=getBundledFileName(f.imports[c])||n.resolvePath(e,f.imports[c]))&&fetch(o);if(f.weakImports)for(c=0;c<f.weakImports.length;++c)(o=getBundledFileName(f.weakImports[c])||n.resolvePath(e,f.weakImports[c]))&&fetch(o,!0)}else n.setOptions(r.options).addJSON(r.nested)}catch(e){finish(e)}i||a||finish(null,n)}function fetch(e,t){if(!(n.files.indexOf(e)>-1))if(n.files.push(e),e in o)i?process(e,o[e]):(++a,setTimeout((function(){--a,process(e,o[e])})));else if(i){var s;try{s=u.fs.readFileSync(e).toString("utf8")}catch(e){return void(t||finish(e))}process(e,s)}else++a,n.fetch(e,(function(i,s){--a,r&&(i?t?a||finish(null,n):finish(i):process(e,s))}))}var a=0;u.isString(e)&&(e=[e]);for(var f,c=0;c<e.length;++c)(f=n.resolvePath("",e[c]))&&fetch(f);if(i)return n;a||finish(null,n)},Root.prototype.loadSync=function loadSync(e,t){if(!u.isNode)throw Error("not supported");return this.load(e,t,SYNC)},Root.prototype.resolveAll=function resolveAll(){if(this.deferred.length)throw Error("unresolvable extensions: "+this.deferred.map((function(e){return"'extend "+e.extend+"' in "+e.parent.fullName})).join(", "));return n.prototype.resolveAll.call(this)};var d=/^[A-Z]/;function tryHandleExtension(e,t){var r=t.parent.lookup(t.extend);if(r){var n=new a(t.fullName,t.id,t.type,t.rule,void 0,t.options);return n.declaringField=t,t.extensionField=n,r.add(n),!0}return!1}Root.prototype._handleAdd=function _handleAdd(e){if(e instanceof a)void 0===e.extend||e.extensionField||tryHandleExtension(0,e)||this.deferred.push(e);else if(e instanceof f)d.test(e.name)&&(e.parent[e.name]=e.values);else if(!(e instanceof c)){if(e instanceof i)for(var t=0;t<this.deferred.length;)tryHandleExtension(0,this.deferred[t])?this.deferred.splice(t,1):++t;for(var r=0;r<e.nestedArray.length;++r)this._handleAdd(e._nestedArray[r]);d.test(e.name)&&(e.parent[e.name]=e)}},Root.prototype._handleRemove=function _handleRemove(e){if(e instanceof a){if(void 0!==e.extend)if(e.extensionField)e.extensionField.parent.remove(e.extensionField),e.extensionField=null;else{var t=this.deferred.indexOf(e);t>-1&&this.deferred.splice(t,1)}}else if(e instanceof f)d.test(e.name)&&delete e.parent[e.name];else if(e instanceof n){for(var r=0;r<e.nestedArray.length;++r)this._handleRemove(e._nestedArray[r]);d.test(e.name)&&delete e.parent[e.name]}},Root._configure=function(e,t,r){i=e,s=t,o=r}},474738:e=>{"use strict";e.exports={}},657080:(e,t,r)=>{"use strict";t.Service=r(611604)},611604:(e,t,r)=>{"use strict";e.exports=Service;var n=r(805099);function Service(e,t,r){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");n.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(r)}(Service.prototype=Object.create(n.EventEmitter.prototype)).constructor=Service,Service.prototype.rpcCall=function rpcCall(e,t,r,i,s){if(!i)throw TypeError("request must be specified");var o=this;if(!s)return n.asPromise(rpcCall,o,e,t,r,i);if(o.rpcImpl)try{return o.rpcImpl(e,t[o.requestDelimited?"encodeDelimited":"encode"](i).finish(),(function rpcCallback(t,n){if(t)return o.emit("error",t,e),s(t);if(null!==n){if(!(n instanceof r))try{n=r[o.responseDelimited?"decodeDelimited":"decode"](n)}catch(t){return o.emit("error",t,e),s(t)}return o.emit("data",n,e),s(null,n)}o.end(!0)}))}catch(t){return o.emit("error",t,e),void setTimeout((function(){s(t)}),0)}else setTimeout((function(){s(Error("already ended"))}),0)},Service.prototype.end=function end(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},803712:(e,t,r)=>{"use strict";e.exports=Service;var n=r(334060);((Service.prototype=Object.create(n.prototype)).constructor=Service).className="Service";var i=r(777082),s=r(938723),o=r(657080);function Service(e,t){n.call(this,e,t),this.methods={},this._methodsArray=null}function clearCache(e){return e._methodsArray=null,e}Service.fromJSON=function fromJSON(e,t){var r=new Service(e,t.options);if(t.methods)for(var n=Object.keys(t.methods),s=0;s<n.length;++s)r.add(i.fromJSON(n[s],t.methods[n[s]]));return t.nested&&r.addJSON(t.nested),r.comment=t.comment,r},Service.prototype.toJSON=function toJSON(e){var t=n.prototype.toJSON.call(this,e),r=!!e&&Boolean(e.keepComments);return s.toObject(["options",t&&t.options||void 0,"methods",n.arrayToJSON(this.methodsArray,e)||{},"nested",t&&t.nested||void 0,"comment",r?this.comment:void 0])},Object.defineProperty(Service.prototype,"methodsArray",{get:function(){return this._methodsArray||(this._methodsArray=s.toArray(this.methods))}}),Service.prototype.get=function get(e){return this.methods[e]||n.prototype.get.call(this,e)},Service.prototype.resolveAll=function resolveAll(){for(var e=this.methodsArray,t=0;t<e.length;++t)e[t].resolve();return n.prototype.resolve.call(this)},Service.prototype.add=function add(e){if(this.get(e.name))throw Error("duplicate name '"+e.name+"' in "+this);return e instanceof i?(this.methods[e.name]=e,e.parent=this,clearCache(this)):n.prototype.add.call(this,e)},Service.prototype.remove=function remove(e){if(e instanceof i){if(this.methods[e.name]!==e)throw Error(e+" is not a member of "+this);return delete this.methods[e.name],e.parent=null,clearCache(this)}return n.prototype.remove.call(this,e)},Service.prototype.create=function create(e,t,r){for(var n,i=new o.Service(e,t,r),a=0;a<this.methodsArray.length;++a){var f=s.lcFirst((n=this._methodsArray[a]).resolve().name).replace(/[^$\w_]/g,"");i[f]=s.codegen(["r","c"],s.isReserved(f)?f+"_":f)("return this.rpcCall(m,q,s,r,c)")({m:n,q:n.resolvedRequestType.ctor,s:n.resolvedResponseType.ctor})}return i}},961311:(e,t,r)=>{"use strict";e.exports=Type;var n=r(334060);((Type.prototype=Object.create(n.prototype)).constructor=Type).className="Type";var i=r(38118),s=r(917166),o=r(524243),a=r(484341),f=r(803712),c=r(109348),u=r(36344),d=r(213108),p=r(938723),v=r(367471),b=r(724455),m=r(113777),P=r(875931),O=r(231359);function Type(e,t){n.call(this,e,t),this.fields={},this.oneofs=void 0,this.extensions=void 0,this.reserved=void 0,this.group=void 0,this._fieldsById=null,this._fieldsArray=null,this._oneofsArray=null,this._ctor=null}function clearCache(e){return e._fieldsById=e._fieldsArray=e._oneofsArray=null,delete e.encode,delete e.decode,delete e.verify,e}Object.defineProperties(Type.prototype,{fieldsById:{get:function(){if(this._fieldsById)return this._fieldsById;this._fieldsById={};for(var e=Object.keys(this.fields),t=0;t<e.length;++t){var r=this.fields[e[t]],n=r.id;if(this._fieldsById[n])throw Error("duplicate id "+n+" in "+this);this._fieldsById[n]=r}return this._fieldsById}},fieldsArray:{get:function(){return this._fieldsArray||(this._fieldsArray=p.toArray(this.fields))}},oneofsArray:{get:function(){return this._oneofsArray||(this._oneofsArray=p.toArray(this.oneofs))}},ctor:{get:function(){return this._ctor||(this.ctor=Type.generateConstructor(this)())},set:function(e){var t=e.prototype;t instanceof c||((e.prototype=new c).constructor=e,p.merge(e.prototype,t)),e.$type=e.prototype.$type=this,p.merge(e,c,!0),this._ctor=e;for(var r=0;r<this.fieldsArray.length;++r)this._fieldsArray[r].resolve();var n={};for(r=0;r<this.oneofsArray.length;++r)n[this._oneofsArray[r].resolve().name]={get:p.oneOfGetter(this._oneofsArray[r].oneof),set:p.oneOfSetter(this._oneofsArray[r].oneof)};r&&Object.defineProperties(e.prototype,n)}}}),Type.generateConstructor=function generateConstructor(e){for(var t,r=p.codegen(["p"],e.name),n=0;n<e.fieldsArray.length;++n)(t=e._fieldsArray[n]).map?r("this%s={}",p.safeProp(t.name)):t.repeated&&r("this%s=[]",p.safeProp(t.name));return r("if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)")("this[ks[i]]=p[ks[i]]")},Type.fromJSON=function fromJSON(e,t){var r=new Type(e,t.options);r.extensions=t.extensions,r.reserved=t.reserved;for(var c=Object.keys(t.fields),u=0;u<c.length;++u)r.add((void 0!==t.fields[c[u]].keyType?a.fromJSON:o.fromJSON)(c[u],t.fields[c[u]]));if(t.oneofs)for(c=Object.keys(t.oneofs),u=0;u<c.length;++u)r.add(s.fromJSON(c[u],t.oneofs[c[u]]));if(t.nested)for(c=Object.keys(t.nested),u=0;u<c.length;++u){var d=t.nested[c[u]];r.add((void 0!==d.id?o.fromJSON:void 0!==d.fields?Type.fromJSON:void 0!==d.values?i.fromJSON:void 0!==d.methods?f.fromJSON:n.fromJSON)(c[u],d))}return t.extensions&&t.extensions.length&&(r.extensions=t.extensions),t.reserved&&t.reserved.length&&(r.reserved=t.reserved),t.group&&(r.group=!0),t.comment&&(r.comment=t.comment),r},Type.prototype.toJSON=function toJSON(e){var t=n.prototype.toJSON.call(this,e),r=!!e&&Boolean(e.keepComments);return p.toObject(["options",t&&t.options||void 0,"oneofs",n.arrayToJSON(this.oneofsArray,e),"fields",n.arrayToJSON(this.fieldsArray.filter((function(e){return!e.declaringField})),e)||{},"extensions",this.extensions&&this.extensions.length?this.extensions:void 0,"reserved",this.reserved&&this.reserved.length?this.reserved:void 0,"group",this.group||void 0,"nested",t&&t.nested||void 0,"comment",r?this.comment:void 0])},Type.prototype.resolveAll=function resolveAll(){for(var e=this.fieldsArray,t=0;t<e.length;)e[t++].resolve();var r=this.oneofsArray;for(t=0;t<r.length;)r[t++].resolve();return n.prototype.resolveAll.call(this)},Type.prototype.get=function get(e){return this.fields[e]||this.oneofs&&this.oneofs[e]||this.nested&&this.nested[e]||null},Type.prototype.add=function add(e){if(this.get(e.name))throw Error("duplicate name '"+e.name+"' in "+this);if(e instanceof o&&void 0===e.extend){if(this._fieldsById?this._fieldsById[e.id]:this.fieldsById[e.id])throw Error("duplicate id "+e.id+" in "+this);if(this.isReservedId(e.id))throw Error("id "+e.id+" is reserved in "+this);if(this.isReservedName(e.name))throw Error("name '"+e.name+"' is reserved in "+this);return e.parent&&e.parent.remove(e),this.fields[e.name]=e,e.message=this,e.onAdd(this),clearCache(this)}return e instanceof s?(this.oneofs||(this.oneofs={}),this.oneofs[e.name]=e,e.onAdd(this),clearCache(this)):n.prototype.add.call(this,e)},Type.prototype.remove=function remove(e){if(e instanceof o&&void 0===e.extend){if(!this.fields||this.fields[e.name]!==e)throw Error(e+" is not a member of "+this);return delete this.fields[e.name],e.parent=null,e.onRemove(this),clearCache(this)}if(e instanceof s){if(!this.oneofs||this.oneofs[e.name]!==e)throw Error(e+" is not a member of "+this);return delete this.oneofs[e.name],e.parent=null,e.onRemove(this),clearCache(this)}return n.prototype.remove.call(this,e)},Type.prototype.isReservedId=function isReservedId(e){return n.isReservedId(this.reserved,e)},Type.prototype.isReservedName=function isReservedName(e){return n.isReservedName(this.reserved,e)},Type.prototype.create=function create(e){return new this.ctor(e)},Type.prototype.setup=function setup(){for(var e=this.fullName,t=[],r=0;r<this.fieldsArray.length;++r)t.push(this._fieldsArray[r].resolve().resolvedType);this.encode=v(this)({Writer:d,types:t,util:p}),this.decode=b(this)({Reader:u,types:t,util:p}),this.verify=m(this)({types:t,util:p}),this.fromObject=P.fromObject(this)({types:t,util:p}),this.toObject=P.toObject(this)({types:t,util:p});var n=O[e];if(n){var i=Object.create(this);i.fromObject=this.fromObject,this.fromObject=n.fromObject.bind(i),i.toObject=this.toObject,this.toObject=n.toObject.bind(i)}return this},Type.prototype.encode=function encode_setup(e,t){return this.setup().encode(e,t)},Type.prototype.encodeDelimited=function encodeDelimited(e,t){return this.encode(e,t&&t.len?t.fork():t).ldelim()},Type.prototype.decode=function decode_setup(e,t){return this.setup().decode(e,t)},Type.prototype.decodeDelimited=function decodeDelimited(e){return e instanceof u||(e=u.create(e)),this.decode(e,e.uint32())},Type.prototype.verify=function verify_setup(e){return this.setup().verify(e)},Type.prototype.fromObject=function fromObject(e){return this.setup().fromObject(e)},Type.prototype.toObject=function toObject(e,t){return this.setup().toObject(e,t)},Type.d=function decorateType(e){return function typeDecorator(t){p.decorateType(t,e)}}},205594:(e,t,r)=>{"use strict";var n=t,i=r(938723),s=["double","float","int32","uint32","sint32","fixed32","sfixed32","int64","uint64","sint64","fixed64","sfixed64","bool","string","bytes"];function bake(e,t){var r=0,n={};for(t|=0;r<e.length;)n[s[r+t]]=e[r++];return n}n.basic=bake([1,5,0,0,0,5,5,0,0,0,1,1,0,2,2]),n.defaults=bake([0,0,0,0,0,0,0,0,0,0,0,0,!1,"",i.emptyArray,null]),n.long=bake([0,0,0,1,1],7),n.mapKey=bake([0,0,0,5,5,0,0,0,1,1,0,2],2),n.packed=bake([1,5,0,0,0,5,5,0,0,0,1,1,0])},938723:(e,t,r)=>{"use strict";var n,i,s=e.exports=r(805099),o=r(474738);s.codegen=r(254132),s.fetch=r(250177),s.path=r(911080),s.fs=s.inquire("fs"),s.toArray=function toArray(e){if(e){for(var t=Object.keys(e),r=new Array(t.length),n=0;n<t.length;)r[n]=e[t[n++]];return r}return[]},s.toObject=function toObject(e){for(var t={},r=0;r<e.length;){var n=e[r++],i=e[r++];void 0!==i&&(t[n]=i)}return t};var a=/\\/g,f=/"/g;s.isReserved=function isReserved(e){return/^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(e)},s.safeProp=function safeProp(e){return!/^[$\w_]+$/.test(e)||s.isReserved(e)?'["'+e.replace(a,"\\\\").replace(f,'\\"')+'"]':"."+e},s.ucFirst=function ucFirst(e){return e.charAt(0).toUpperCase()+e.substring(1)};var c=/_([a-z])/g;s.camelCase=function camelCase(e){return e.substring(0,1)+e.substring(1).replace(c,(function(e,t){return t.toUpperCase()}))},s.compareFieldsById=function compareFieldsById(e,t){return e.id-t.id},s.decorateType=function decorateType(e,t){if(e.$type)return t&&e.$type.name!==t&&(s.decorateRoot.remove(e.$type),e.$type.name=t,s.decorateRoot.add(e.$type)),e.$type;n||(n=r(961311));var i=new n(t||e.name);return s.decorateRoot.add(i),i.ctor=e,Object.defineProperty(e,"$type",{value:i,enumerable:!1}),Object.defineProperty(e.prototype,"$type",{value:i,enumerable:!1}),i};var u=0;s.decorateEnum=function decorateEnum(e){if(e.$type)return e.$type;i||(i=r(38118));var t=new i("Enum"+u++,e);return s.decorateRoot.add(t),Object.defineProperty(e,"$type",{value:t,enumerable:!1}),t},s.setProperty=function setProperty(e,t,r){if("object"!=typeof e)throw TypeError("dst must be an object");if(!t)throw TypeError("path must be specified");return function setProp(e,t,r){var n=t.shift();if("__proto__"===n||"prototype"===n)return e;if(t.length>0)e[n]=setProp(e[n]||{},t,r);else{var i=e[n];i&&(r=[].concat(i).concat(r)),e[n]=r}return e}(e,t=t.split("."),r)},Object.defineProperty(s,"decorateRoot",{get:function(){return o.decorated||(o.decorated=new(r(327207)))}})},135904:(e,t,r)=>{"use strict";e.exports=LongBits;var n=r(805099);function LongBits(e,t){this.lo=e>>>0,this.hi=t>>>0}var i=LongBits.zero=new LongBits(0,0);i.toNumber=function(){return 0},i.zzEncode=i.zzDecode=function(){return this},i.length=function(){return 1};var s=LongBits.zeroHash="\0\0\0\0\0\0\0\0";LongBits.fromNumber=function fromNumber(e){if(0===e)return i;var t=e<0;t&&(e=-e);var r=e>>>0,n=(e-r)/4294967296>>>0;return t&&(n=~n>>>0,r=~r>>>0,++r>4294967295&&(r=0,++n>4294967295&&(n=0))),new LongBits(r,n)},LongBits.from=function from(e){if("number"==typeof e)return LongBits.fromNumber(e);if(n.isString(e)){if(!n.Long)return LongBits.fromNumber(parseInt(e,10));e=n.Long.fromString(e)}return e.low||e.high?new LongBits(e.low>>>0,e.high>>>0):i},LongBits.prototype.toNumber=function toNumber(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,r=~this.hi>>>0;return t||(r=r+1>>>0),-(t+4294967296*r)}return this.lo+4294967296*this.hi},LongBits.prototype.toLong=function toLong(e){var t=n.Long?n.Long.default?n.Long.default:n.Long:null;return t?new t(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var o=String.prototype.charCodeAt;LongBits.fromHash=function fromHash(e){return e===s?i:new LongBits((o.call(e,0)|o.call(e,1)<<8|o.call(e,2)<<16|o.call(e,3)<<24)>>>0,(o.call(e,4)|o.call(e,5)<<8|o.call(e,6)<<16|o.call(e,7)<<24)>>>0)},LongBits.prototype.toHash=function toHash(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},LongBits.prototype.zzEncode=function zzEncode(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},LongBits.prototype.zzDecode=function zzDecode(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},LongBits.prototype.length=function length(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,r=this.hi>>>24;return 0===r?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:r<128?9:10}},805099:function(e,t,r){"use strict";var n=t;function merge(e,t,r){for(var n=Object.keys(t),i=0;i<n.length;++i)void 0!==e[n[i]]&&r||(e[n[i]]=t[n[i]]);return e}function newError(e){function CustomError(e,t){if(!(this instanceof CustomError))return new CustomError(e,t);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,CustomError):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),t&&merge(this,t)}return(CustomError.prototype=Object.create(Error.prototype)).constructor=CustomError,Object.defineProperty(CustomError.prototype,"name",{get:function(){return e}}),CustomError.prototype.toString=function toString(){return this.name+": "+this.message},CustomError}n.asPromise=r(223808),n.base64=r(113320),n.EventEmitter=r(172149),n.float=r(61727),n.inquire=r(183768),n.utf8=r(205184),n.pool=r(982461),n.LongBits=r(135904),n.isNode=Boolean(void 0!==r.g&&r.g&&r.g.process&&r.g.process.versions&&r.g.process.versions.node),n.global=n.isNode&&r.g||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||this,n.emptyArray=Object.freeze?Object.freeze([]):[],n.emptyObject=Object.freeze?Object.freeze({}):{},n.isInteger=Number.isInteger||function isInteger(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},n.isString=function isString(e){return"string"==typeof e||e instanceof String},n.isObject=function isObject(e){return e&&"object"==typeof e},n.isset=n.isSet=function isSet(e,t){var r=e[t];return!(null==r||!e.hasOwnProperty(t))&&("object"!=typeof r||(Array.isArray(r)?r.length:Object.keys(r).length)>0)},n.Buffer=function(){try{var e=n.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),n._Buffer_from=null,n._Buffer_allocUnsafe=null,n.newBuffer=function newBuffer(e){return"number"==typeof e?n.Buffer?n._Buffer_allocUnsafe(e):new n.Array(e):n.Buffer?n._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},n.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,n.Long=n.global.dcodeIO&&n.global.dcodeIO.Long||n.global.Long||n.inquire("long"),n.key2Re=/^true|false|0|1$/,n.key32Re=/^-?(?:0|[1-9][0-9]*)$/,n.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,n.longToHash=function longToHash(e){return e?n.LongBits.from(e).toHash():n.LongBits.zeroHash},n.longFromHash=function longFromHash(e,t){var r=n.LongBits.fromHash(e);return n.Long?n.Long.fromBits(r.lo,r.hi,t):r.toNumber(Boolean(t))},n.merge=merge,n.lcFirst=function lcFirst(e){return e.charAt(0).toLowerCase()+e.substring(1)},n.newError=newError,n.ProtocolError=newError("ProtocolError"),n.oneOfGetter=function getOneOf(e){for(var t={},r=0;r<e.length;++r)t[e[r]]=1;return function(){for(var e=Object.keys(this),r=e.length-1;r>-1;--r)if(1===t[e[r]]&&void 0!==this[e[r]]&&null!==this[e[r]])return e[r]}},n.oneOfSetter=function setOneOf(e){return function(t){for(var r=0;r<e.length;++r)e[r]!==t&&delete this[e[r]]}},n.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},n._configure=function(){var e=n.Buffer;e?(n._Buffer_from=e.from!==Uint8Array.from&&e.from||function Buffer_from(t,r){return new e(t,r)},n._Buffer_allocUnsafe=e.allocUnsafe||function Buffer_allocUnsafe(t){return new e(t)}):n._Buffer_from=n._Buffer_allocUnsafe=null}},113777:(e,t,r)=>{"use strict";e.exports=function verifier(e){var t=i.codegen(["m"],e.name+"$verify")('if(typeof m!=="object"||m===null)')("return%j","object expected"),r=e.oneofsArray,n={};r.length&&t("var p={}");for(var s=0;s<e.fieldsArray.length;++s){var o=e._fieldsArray[s].resolve(),a="m"+i.safeProp(o.name);if(o.optional&&t("if(%s!=null&&m.hasOwnProperty(%j)){",a,o.name),o.map)t("if(!util.isObject(%s))",a)("return%j",invalid(o,"object"))("var k=Object.keys(%s)",a)("for(var i=0;i<k.length;++i){"),genVerifyKey(t,o,"k[i]"),genVerifyValue(t,o,s,a+"[k[i]]")("}");else if(o.repeated)t("if(!Array.isArray(%s))",a)("return%j",invalid(o,"array"))("for(var i=0;i<%s.length;++i){",a),genVerifyValue(t,o,s,a+"[i]")("}");else{if(o.partOf){var f=i.safeProp(o.partOf.name);1===n[o.partOf.name]&&t("if(p%s===1)",f)("return%j",o.partOf.name+": multiple values"),n[o.partOf.name]=1,t("p%s=1",f)}genVerifyValue(t,o,s,a)}o.optional&&t("}")}return t("return null")};var n=r(38118),i=r(938723);function invalid(e,t){return e.name+": "+t+(e.repeated&&"array"!==t?"[]":e.map&&"object"!==t?"{k:"+e.keyType+"}":"")+" expected"}function genVerifyValue(e,t,r,i){if(t.resolvedType)if(t.resolvedType instanceof n){e("switch(%s){",i)("default:")("return%j",invalid(t,"enum value"));for(var s=Object.keys(t.resolvedType.values),o=0;o<s.length;++o)e("case %i:",t.resolvedType.values[s[o]]);e("break")("}")}else e("{")("var e=types[%i].verify(%s);",r,i)("if(e)")("return%j+e",t.name+".")("}");else switch(t.type){case"int32":case"uint32":case"sint32":case"fixed32":case"sfixed32":e("if(!util.isInteger(%s))",i)("return%j",invalid(t,"integer"));break;case"int64":case"uint64":case"sint64":case"fixed64":case"sfixed64":e("if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))",i,i,i,i)("return%j",invalid(t,"integer|Long"));break;case"float":case"double":e('if(typeof %s!=="number")',i)("return%j",invalid(t,"number"));break;case"bool":e('if(typeof %s!=="boolean")',i)("return%j",invalid(t,"boolean"));break;case"string":e("if(!util.isString(%s))",i)("return%j",invalid(t,"string"));break;case"bytes":e('if(!(%s&&typeof %s.length==="number"||util.isString(%s)))',i,i,i)("return%j",invalid(t,"buffer"))}return e}function genVerifyKey(e,t,r){switch(t.keyType){case"int32":case"uint32":case"sint32":case"fixed32":case"sfixed32":e("if(!util.key32Re.test(%s))",r)("return%j",invalid(t,"integer key"));break;case"int64":case"uint64":case"sint64":case"fixed64":case"sfixed64":e("if(!util.key64Re.test(%s))",r)("return%j",invalid(t,"integer|Long key"));break;case"bool":e("if(!util.key2Re.test(%s))",r)("return%j",invalid(t,"boolean key"))}return e}},231359:(e,t,r)=>{"use strict";var n=t,i=r(109348);n[".google.protobuf.Any"]={fromObject:function(e){if(e&&e["@type"]){var t=e["@type"].substring(e["@type"].lastIndexOf("/")+1),r=this.lookup(t);if(r){var n="."===e["@type"].charAt(0)?e["@type"].substr(1):e["@type"];return-1===n.indexOf("/")&&(n="/"+n),this.create({type_url:n,value:r.encode(r.fromObject(e)).finish()})}}return this.fromObject(e)},toObject:function(e,t){var r="",n="";if(t&&t.json&&e.type_url&&e.value){n=e.type_url.substring(e.type_url.lastIndexOf("/")+1),r=e.type_url.substring(0,e.type_url.lastIndexOf("/")+1);var s=this.lookup(n);s&&(e=s.decode(e.value))}if(!(e instanceof this.ctor)&&e instanceof i){var o=e.$type.toObject(e,t);return""===r&&(r="type.googleapis.com/"),n=r+("."===e.$type.fullName[0]?e.$type.fullName.substr(1):e.$type.fullName),o["@type"]=n,o}return this.toObject(e,t)}}},213108:(e,t,r)=>{"use strict";e.exports=Writer;var n,i=r(805099),s=i.LongBits,o=i.base64,a=i.utf8;function Op(e,t,r){this.fn=e,this.len=t,this.next=void 0,this.val=r}function noop(){}function State(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function Writer(){this.len=0,this.head=new Op(noop,0,0),this.tail=this.head,this.states=null}var f=function create(){return i.Buffer?function create_buffer_setup(){return(Writer.create=function create_buffer(){return new n})()}:function create_array(){return new Writer}};function writeByte(e,t,r){t[r]=255&e}function VarintOp(e,t){this.len=e,this.next=void 0,this.val=t}function writeVarint64(e,t,r){for(;e.hi;)t[r++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[r++]=127&e.lo|128,e.lo=e.lo>>>7;t[r++]=e.lo}function writeFixed32(e,t,r){t[r]=255&e,t[r+1]=e>>>8&255,t[r+2]=e>>>16&255,t[r+3]=e>>>24}Writer.create=f(),Writer.alloc=function alloc(e){return new i.Array(e)},i.Array!==Array&&(Writer.alloc=i.pool(Writer.alloc,i.Array.prototype.subarray)),Writer.prototype._push=function push(e,t,r){return this.tail=this.tail.next=new Op(e,t,r),this.len+=t,this},VarintOp.prototype=Object.create(Op.prototype),VarintOp.prototype.fn=function writeVarint32(e,t,r){for(;e>127;)t[r++]=127&e|128,e>>>=7;t[r]=e},Writer.prototype.uint32=function write_uint32(e){return this.len+=(this.tail=this.tail.next=new VarintOp((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},Writer.prototype.int32=function write_int32(e){return e<0?this._push(writeVarint64,10,s.fromNumber(e)):this.uint32(e)},Writer.prototype.sint32=function write_sint32(e){return this.uint32((e<<1^e>>31)>>>0)},Writer.prototype.uint64=function write_uint64(e){var t=s.from(e);return this._push(writeVarint64,t.length(),t)},Writer.prototype.int64=Writer.prototype.uint64,Writer.prototype.sint64=function write_sint64(e){var t=s.from(e).zzEncode();return this._push(writeVarint64,t.length(),t)},Writer.prototype.bool=function write_bool(e){return this._push(writeByte,1,e?1:0)},Writer.prototype.fixed32=function write_fixed32(e){return this._push(writeFixed32,4,e>>>0)},Writer.prototype.sfixed32=Writer.prototype.fixed32,Writer.prototype.fixed64=function write_fixed64(e){var t=s.from(e);return this._push(writeFixed32,4,t.lo)._push(writeFixed32,4,t.hi)},Writer.prototype.sfixed64=Writer.prototype.fixed64,Writer.prototype.float=function write_float(e){return this._push(i.float.writeFloatLE,4,e)},Writer.prototype.double=function write_double(e){return this._push(i.float.writeDoubleLE,8,e)};var c=i.Array.prototype.set?function writeBytes_set(e,t,r){t.set(e,r)}:function writeBytes_for(e,t,r){for(var n=0;n<e.length;++n)t[r+n]=e[n]};Writer.prototype.bytes=function write_bytes(e){var t=e.length>>>0;if(!t)return this._push(writeByte,1,0);if(i.isString(e)){var r=Writer.alloc(t=o.length(e));o.decode(e,r,0),e=r}return this.uint32(t)._push(c,t,e)},Writer.prototype.string=function write_string(e){var t=a.length(e);return t?this.uint32(t)._push(a.write,t,e):this._push(writeByte,1,0)},Writer.prototype.fork=function fork(){return this.states=new State(this),this.head=this.tail=new Op(noop,0,0),this.len=0,this},Writer.prototype.reset=function reset(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop,0,0),this.len=0),this},Writer.prototype.ldelim=function ldelim(){var e=this.head,t=this.tail,r=this.len;return this.reset().uint32(r),r&&(this.tail.next=e.next,this.tail=t,this.len+=r),this},Writer.prototype.finish=function finish(){for(var e=this.head.next,t=this.constructor.alloc(this.len),r=0;e;)e.fn(e.val,t,r),r+=e.len,e=e.next;return t},Writer._configure=function(e){n=e,Writer.create=f(),n._configure()}},452533:(e,t,r)=>{"use strict";e.exports=BufferWriter;var n=r(213108);(BufferWriter.prototype=Object.create(n.prototype)).constructor=BufferWriter;var i=r(805099);function BufferWriter(){n.call(this)}function writeStringBuffer(e,t,r){e.length<40?i.utf8.write(e,t,r):t.utf8Write?t.utf8Write(e,r):t.write(e,r)}BufferWriter._configure=function(){BufferWriter.alloc=i._Buffer_allocUnsafe,BufferWriter.writeBytesBuffer=i.Buffer&&i.Buffer.prototype instanceof Uint8Array&&"set"===i.Buffer.prototype.set.name?function writeBytesBuffer_set(e,t,r){t.set(e,r)}:function writeBytesBuffer_copy(e,t,r){if(e.copy)e.copy(t,r,0,e.length);else for(var n=0;n<e.length;)t[r++]=e[n++]}},BufferWriter.prototype.bytes=function write_bytes_buffer(e){i.isString(e)&&(e=i._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(BufferWriter.writeBytesBuffer,t,e),this},BufferWriter.prototype.string=function write_string_buffer(e){var t=i.Buffer.byteLength(e);return this.uint32(t),t&&this._push(writeStringBuffer,t,e),this},BufferWriter._configure()},202200:(e,t,r)=>{"use strict";r.d(t,{Ai:()=>y,OC:()=>h});Symbol();const n=Symbol();const i=Object.getPrototypeOf,s=new WeakMap,l=e=>e&&(s.has(e)?s.get(e):i(e)===Object.prototype||i(e)===Array.prototype),y=e=>l(e)&&e[n]||null,h=(e,t=!0)=>{s.set(e,t)}},553161:(e,t)=>{t.$o=171008,t.qO=339468,t.ee=""},746713:(e,t,r)=>{"use strict";const n=r(243930);e.exports=pino;const i=function pfGlobalThisOrFallback(){function defd(e){return void 0!==e&&e}try{return"undefined"!=typeof globalThis||Object.defineProperty(Object.prototype,"globalThis",{get:function(){return delete Object.prototype.globalThis,this.globalThis=this},configurable:!0}),globalThis}catch(e){return defd(self)||defd(window)||defd(this)||{}}}().console||{},s={mapHttpRequest:mock,mapHttpResponse:mock,wrapRequestSerializer:passthrough,wrapResponseSerializer:passthrough,wrapErrorSerializer:passthrough,req:mock,res:mock,err:function asErrValue(e){const t={type:e.constructor.name,msg:e.message,stack:e.stack};for(const r in e)void 0===t[r]&&(t[r]=e[r]);return t}};function pino(e){(e=e||{}).browser=e.browser||{};const t=e.browser.transmit;if(t&&"function"!=typeof t.send)throw Error("pino: transmit option must have a send function");const r=e.browser.write||i;e.browser.write&&(e.browser.asObject=!0);const n=e.serializers||{},s=function shouldSerialize(e,t){if(Array.isArray(e))return e.filter((function(e){return"!stdSerializers.err"!==e}));return!0===e&&Object.keys(t)}(e.browser.serialize,n);let o=e.browser.serialize;Array.isArray(e.browser.serialize)&&e.browser.serialize.indexOf("!stdSerializers.err")>-1&&(o=!1);"function"==typeof r&&(r.error=r.fatal=r.warn=r.info=r.debug=r.trace=r),!1===e.enabled&&(e.level="silent");const a=e.level||"info",f=Object.create(r);f.log||(f.log=noop),Object.defineProperty(f,"levelVal",{get:function getLevelVal(){return"silent"===this.level?1/0:this.levels.values[this.level]}}),Object.defineProperty(f,"level",{get:function getLevel(){return this._level},set:function setLevel(e){if("silent"!==e&&!this.levels.values[e])throw Error("unknown level "+e);this._level=e,set(c,f,"error","log"),set(c,f,"fatal","error"),set(c,f,"warn","error"),set(c,f,"info","log"),set(c,f,"debug","log"),set(c,f,"trace","log")}});const c={transmit:t,serialize:s,asObject:e.browser.asObject,levels:["error","fatal","warn","info","debug","trace"],timestamp:getTimeFunction(e)};return f.levels=pino.levels,f.level=a,f.setMaxListeners=f.getMaxListeners=f.emit=f.addListener=f.on=f.prependListener=f.once=f.prependOnceListener=f.removeListener=f.removeAllListeners=f.listeners=f.listenerCount=f.eventNames=f.write=f.flush=noop,f.serializers=n,f._serialize=s,f._stdErrSerialize=o,f.child=function child(r,i){if(!r)throw new Error("missing bindings for child Pino");i=i||{},s&&r.serializers&&(i.serializers=r.serializers);const o=i.serializers;if(s&&o){var a=Object.assign({},n,o),f=!0===e.browser.serialize?Object.keys(a):s;delete r.serializers,applySerializers([r],f,a,this._stdErrSerialize)}function Child(e){this._childLevel=1+(0|e._childLevel),this.error=bind(e,r,"error"),this.fatal=bind(e,r,"fatal"),this.warn=bind(e,r,"warn"),this.info=bind(e,r,"info"),this.debug=bind(e,r,"debug"),this.trace=bind(e,r,"trace"),a&&(this.serializers=a,this._serialize=f),t&&(this._logEvent=createLogEventShape([].concat(e._logEvent.bindings,r)))}return Child.prototype=this,new Child(this)},t&&(f._logEvent=createLogEventShape()),f}function set(e,t,r,s){const o=Object.getPrototypeOf(t);t[r]=t.levelVal>t.levels.values[r]?noop:o[r]?o[r]:i[r]||i[s]||noop,function wrap(e,t,r){if(!e.transmit&&t[r]===noop)return;t[r]=(s=t[r],function LOG(){const o=e.timestamp(),a=new Array(arguments.length),f=Object.getPrototypeOf&&Object.getPrototypeOf(this)===i?i:this;for(var c=0;c<a.length;c++)a[c]=arguments[c];if(e.serialize&&!e.asObject&&applySerializers(a,this._serialize,this.serializers,this._stdErrSerialize),e.asObject?s.call(f,function asObject(e,t,r,i){e._serialize&&applySerializers(r,e._serialize,e.serializers,e._stdErrSerialize);const s=r.slice();let o=s[0];const a={};i&&(a.time=i),a.level=pino.levels.values[t];let f=1+(0|e._childLevel);if(f<1&&(f=1),null!==o&&"object"==typeof o){for(;f--&&"object"==typeof s[0];)Object.assign(a,s.shift());o=s.length?n(s.shift(),s):void 0}else"string"==typeof o&&(o=n(s.shift(),s));return void 0!==o&&(a.msg=o),a}(this,r,a,o)):s.apply(f,a),e.transmit){const n=e.transmit.level||t.level,i=pino.levels.values[n],s=pino.levels.values[r];if(s<i)return;!function transmit(e,t,r){const n=t.send,i=t.ts,s=t.methodLevel,o=t.methodValue,a=t.val,f=e._logEvent.bindings;applySerializers(r,e._serialize||Object.keys(e.serializers),e.serializers,void 0===e._stdErrSerialize||e._stdErrSerialize),e._logEvent.ts=i,e._logEvent.messages=r.filter((function(e){return-1===f.indexOf(e)})),e._logEvent.level.label=s,e._logEvent.level.value=o,n(s,e._logEvent,a),e._logEvent=createLogEventShape(f)}(this,{ts:o,methodLevel:r,methodValue:s,transmitLevel:n,transmitValue:pino.levels.values[e.transmit.level||t.level],send:e.transmit.send,val:t.levelVal},a)}});var s}(e,t,r)}function applySerializers(e,t,r,n){for(const i in e)if(n&&e[i]instanceof Error)e[i]=pino.stdSerializers.err(e[i]);else if("object"==typeof e[i]&&!Array.isArray(e[i]))for(const n in e[i])t&&t.indexOf(n)>-1&&n in r&&(e[i][n]=r[n](e[i][n]))}function bind(e,t,r){return function(){const n=new Array(1+arguments.length);n[0]=t;for(var i=1;i<n.length;i++)n[i]=arguments[i-1];return e[r].apply(this,n)}}function createLogEventShape(e){return{ts:0,messages:[],bindings:e||[],level:{label:"",value:0}}}function getTimeFunction(e){return"function"==typeof e.timestamp?e.timestamp:!1===e.timestamp?nullTime:epochTime}function mock(){return{}}function passthrough(e){return e}function noop(){}function nullTime(){return!1}function epochTime(){return Date.now()}pino.levels={values:{fatal:60,error:50,warn:40,info:30,debug:20,trace:10},labels:{10:"trace",20:"debug",30:"info",40:"warn",50:"error",60:"fatal"}},pino.stdSerializers=s,pino.stdTimeFunctions=Object.assign({},{nullTime,epochTime,unixTime:function unixTime(){return Math.round(Date.now()/1e3)},isoTime:function isoTime(){return new Date(Date.now()).toISOString()}})},44893:(e,t,r)=>{"use strict";r.d(t,{X4:()=>u,tR:()=>d,Kx:()=>p});var n=r(107322);const i={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,enjin:1155,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,matrixchain:1155,nodle:1003,origintrail:354,parallel:354,pendulum:354,phala:354,picasso:434,polkadex:799,polkadot:354,polymesh:595,quartz:631,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:661,vtb:694,xxnetwork:1955,zeitgeist:354},s={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],bittensor:["0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],cere:["0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],enjin:["0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],matrixchain:["0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],p3d:["0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],quartz:["0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"],zeitgeist:["0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060"]},o={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"},a={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0},f=[0,2,42],c=["testnet"];const u=n.A.map((function toExpanded(e){const t=e.network||"",r=t.replace(/_/g,"-").split("-"),n=e;return n.slip44=i[t],n.hasLedgerSupport=!!n.slip44,n.genesisHash=s[t]||[],n.icon=o[t]||"substrate",n.isTestnet=!!a[t]||c.includes(r[r.length-1]),n.isIgnored=n.isTestnet||!(e.standardAccount&&e.decimals?.length&&e.symbols?.length)&&42!==e.prefix,n})),d=u.filter((function filterAvailable(e){return!e.isIgnored&&!!e.network})).sort((function sortNetworks(e,t){const r=f.includes(e.prefix);return r===f.includes(t.prefix)?r?0:e.displayName.localeCompare(t.displayName):r?-1:1})),p=d.filter((function filterSelectable({genesisHash:e,prefix:t}){return!!e.length||42===t}))},847502:(e,t,r)=>{"use strict";r.d(t,{I:()=>checkAddressChecksum});var n=r(820471);function checkAddressChecksum(e){const t=64&e[0]?2:1,r=1===t?e[0]:(63&e[0])<<2|e[1]>>6|(63&e[1])<<8,i=[34+t,35+t].includes(e.length),s=e.length-(i?2:1),o=(0,n.f)(e.subarray(0,s));return[!(128&e[0]||[46,47].includes(e[0])||(i?e[e.length-2]!==o[0]||e[e.length-1]!==o[1]:e[e.length-1]!==o[0])),s,t,r]}},968955:(e,t,r)=>{"use strict";r.d(t,{F:()=>decodeAddress});var n=r(318809),i=r(118548),s=r(244912),o=r(737929),a=r(847502),f=r(74579);function decodeAddress(e,t,r=-1){if(!e)throw new Error("Invalid empty address passed");if((0,n.b)(e)||(0,i.qv)(e))return(0,s.e)(e);try{const n=(0,o.Rx)(e);if(!f.N.allowedEncodedLengths.includes(n.length))throw new Error("Invalid decoded address length");const[i,s,c,u]=(0,a.I)(n);if(!i&&!t)throw new Error("Invalid decoded address checksum");if(-1!==r&&r!==u)throw new Error(`Expected ss58Format ${r}, received ${u}`);return n.slice(c,s)}catch(t){throw new Error(`Decoding ${e}: ${t.message}`)}}},74579:(e,t,r)=>{"use strict";r.d(t,{N:()=>n});const n={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:r(44893).tR.map((({prefix:e})=>e)),prefix:42}},103363:(e,t,r)=>{"use strict";r.d(t,{V:()=>addressEq});var n=r(749681),i=r(968955);function addressEq(e,t){return(0,n.f)((0,i.F)(e),(0,i.F)(t))}},820471:(e,t,r)=>{"use strict";r.d(t,{f:()=>sshash});var n=r(656592),i=r(311099),s=r(217154);const o=(0,n.j)("SS58PRE");function sshash(e){return(0,s.q)((0,i.z)(o,e),512)}},932362:(e,t,r)=>{"use strict";r.d(t,{L0:()=>createEncode,Zr:()=>createValidate,ls:()=>createIs,r_:()=>createDecode});var n=r(244912);function createDecode({coder:e,ipfs:t},r){return(n,i)=>(r(n,i),e.decode(t&&i?n.substring(1):n))}function createEncode({coder:e,ipfs:t}){return(r,i)=>{const s=e.encode((0,n.e)(r));return t&&i?`${t}${s}`:s}}function createIs(e){return(t,r)=>{try{return e(t,r)}catch{return!1}}}function createValidate({chars:e,ipfs:t,type:r,withPadding:n}){return(i,s)=>{if("string"!=typeof i)throw new Error(`Expected ${r} string input`);if(t&&s&&!i.startsWith(t))throw new Error(`Expected ipfs-compatible ${r} to start with '${t}'`);for(let t=s?1:0,o=i.length;t<o;t++)if(e.includes(i[t]));else{if(!n||"="!==i[t])throw new Error(`Invalid ${r} character "${i[t]}" (0x${i.charCodeAt(t).toString(16)}) at index ${t}`);if(t===o-1);else if("="!==i[t+1])throw new Error(`Invalid ${r} padding sequence "${i[t]}${i[t+1]}" at index ${t}`)}return!0}}},737929:(e,t,r)=>{"use strict";r.d(t,{Rl:()=>f,Rx:()=>a,TA:()=>o,zv:()=>c});var n=r(936073),i=r(932362);const s={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:n.tw,ipfs:"z",type:"base58"},o=(0,i.Zr)(s),a=(0,i.r_)(s,o),f=(0,i.L0)(s),c=(0,i.ls)(o)},217154:(e,t,r)=>{"use strict";r.d(t,{X:()=>a,q:()=>blake2AsU8a});var n=r(614555),i=r(244912),s=r(631664),o=r(666349);function blake2AsU8a(e,t=256,r,a){const f=Math.ceil(t/8),c=(0,i.e)(e);return!s.CW||!a&&(0,o.i_)()?(0,o.Sx)(c,(0,i.e)(r),f):r?(0,n.S)(c,{dkLen:f,key:r}):(0,n.S)(c,{dkLen:f})}const a=(0,r(627731).wu)(blake2AsU8a)},627731:(e,t,r)=>{"use strict";r.d(t,{aU:()=>createDualHasher,dp:()=>createBitHasher,wu:()=>createAsHex});var n=r(745725),i=r(244912),s=r(631664),o=r(666349);function createAsHex(e){return(...t)=>(0,n.X)(e(...t))}function createBitHasher(e,t){return(r,n)=>t(r,e,n)}function createDualHasher(e,t){return(r,n=256,a)=>{const f=(0,i.e)(r);return!s.CW||!a&&(0,o.i_)()?e[n](f):t[n](f)}}},631664:(e,t,r)=>{"use strict";r.d(t,{$j:()=>a,CW:()=>s,Nt:()=>c,Ze:()=>u,bM:()=>o,gu:()=>f,i4:()=>d});var n=r(578420),i=r(76904);const s="function"==typeof n.Q&&"function"==typeof n.Q.asIntN,o="function"==typeof require&&"undefined"!=typeof module,a="undefined"!=typeof __dirname,f=!o,c="undefined"!=typeof WebAssembly,u="function"==typeof i.Mn.Buffer&&"function"==typeof i.Mn.Buffer.isBuffer,d="object"==typeof i.Mn.process},516765:(e,t,r)=>{"use strict";r.d(t,{V:()=>hexToU8a});const n="0123456789abcdef",i=new Uint8Array(256),s=new Uint8Array(65536);for(let e=0,t=16;e<t;e++)i[0|n[e].charCodeAt(0)]=0|e,e>9&&(i[0|n[e].toUpperCase().charCodeAt(0)]=0|e);for(let e=0;e<256;e++){const t=e<<8;for(let r=0;r<256;r++)s[t|r]=i[e]<<4|i[r]}function hexToU8a(e,t=-1){if(!e)return new Uint8Array;let r=e.startsWith("0x")?2:0;const n=Math.ceil((e.length-r)/2),i=Math.ceil(-1===t?n:t/8),o=new Uint8Array(i);for(let t=i>n?i-n:0;t<i;t++,r+=2)o[t]=s[e.charCodeAt(r)<<8|e.charCodeAt(r+1)];return o}},999:(e,t,r)=>{"use strict";r.d(t,{P:()=>isBuffer});var n=r(76904),i=r(631664),s=r(923477);function isBuffer(e){return i.Ze&&!!e&&(0,s.T)(e.readDoubleLE)&&n.Mn.Buffer.isBuffer(e)}},923477:(e,t,r)=>{"use strict";function isFunction(e){return"function"==typeof e}r.d(t,{T:()=>isFunction})},118548:(e,t,r)=>{"use strict";r.d(t,{Ed:()=>i,eR:()=>n,qv:()=>isHex});const n=/^0x[\da-fA-F]+$/,i=/^[\da-fA-F]+$/;function isHex(e,t=-1,r){return"string"==typeof e&&("0x"===e||n.test(e))&&(-1===t?r||e.length%2==0:e.length===2+Math.ceil(t/4))}},318809:(e,t,r)=>{"use strict";function isU8a(e){return(e&&e.constructor)===Uint8Array||e instanceof Uint8Array}r.d(t,{b:()=>isU8a})},656592:(e,t,r)=>{"use strict";r.d(t,{j:()=>stringToU8a});var n=r(76904);class TextEncoder{encode(e){const t=e.length,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);return r}}const i=new((0,n.pc)("TextEncoder",TextEncoder));function stringToU8a(e){return e?i.encode(e.toString()):new Uint8Array}},311099:(e,t,r)=>{"use strict";r.d(t,{Q:()=>u8aConcatStrict,z:()=>u8aConcat});var n=r(244912);function u8aConcat(...e){const t=e.length,r=new Array(t);let i=0;for(let s=0;s<t;s++)r[s]=(0,n.e)(e[s]),i+=r[s].length;return u8aConcatStrict(r,i)}function u8aConcatStrict(e,t=0){const r=e.length;let n=0;if(!t)for(let n=0;n<r;n++)t+=e[n].length;const i=new Uint8Array(t);for(let t=0;t<r;t++)i.set(e[t],n),n+=e[t].length;return i}},749681:(e,t,r)=>{"use strict";r.d(t,{f:()=>u8aEq});var n=r(244912);function u8aEq(e,t){const r=(0,n.e)(e),i=(0,n.e)(t);if(r.length===i.length){const e=new DataView(r.buffer,r.byteOffset),t=new DataView(i.buffer,i.byteOffset),n=r.length%4|0,s=r.length-n|0;for(let r=0;r<s;r+=4)if(e.getUint32(r)!==t.getUint32(r))return!1;for(let e=s,t=r.length;e<t;e++)if(r[e]!==i[e])return!1;return!0}return!1}},745725:(e,t,r)=>{"use strict";r.d(t,{X:()=>u8aToHex});const n=new Array(256),i=new Array(65536);for(let e=0;e<256;e++)n[e]=e.toString(16).padStart(2,"0");for(let e=0;e<256;e++){const t=e<<8;for(let r=0;r<256;r++)i[t|r]=n[e]+n[r]}function hex(e,t){const r=e.length%2|0,s=e.length-r|0;for(let r=0;r<s;r+=2)t+=i[e[r]<<8|e[r+1]];return r&&(t+=n[0|e[s]]),t}function u8aToHex(e,t=-1,r=!0){const n=r?"0x":"";if(!e?.length)return n;if(t>0){const r=Math.ceil(t/8);if(e.length>r)return`${hex(e.subarray(0,r/2),n)}…${hex(e.subarray(e.length-r/2),"")}`}return hex(e,n)}},352906:(e,t,r)=>{"use strict";r.d(t,{F:()=>u8aToString});var n=r(76904);class TextDecoder{__encoding;constructor(e){this.__encoding=e}decode(e){let t="";for(let r=0,n=e.length;r<n;r++)t+=String.fromCharCode(e[r]);return t}}const i=new((0,n.pc)("TextDecoder",TextDecoder))("utf-8");function u8aToString(e){return e?i.decode(e):""}},244912:(e,t,r)=>{"use strict";r.d(t,{e:()=>u8aToU8a});var n=r(516765),i=r(999),s=r(118548),o=r(318809),a=r(656592);function u8aToU8a(e){return(0,o.b)(e)?(0,i.P)(e)?new Uint8Array(e):e:(0,s.qv)(e)?(0,n.V)(e):Array.isArray(e)?new Uint8Array(e):(0,a.j)(e)}},666349:(e,t,r)=>{"use strict";r.d(t,{P8:()=>Z,oK:()=>M,cI:()=>H,iI:()=>R,M8:()=>F,Sx:()=>_,q:()=>V,tr:()=>U,x1:()=>k,TR:()=>$,Qr:()=>ee,i_:()=>isReady,So:()=>te,Rc:()=>re,Az:()=>ne,sc:()=>ie,zC:()=>W,Vn:()=>S,G3:()=>D,nt:()=>B,cY:()=>Y,$Q:()=>se,Zf:()=>oe,ef:()=>A,JS:()=>E,e8:()=>G,kJ:()=>q,MD:()=>J,vm:()=>I,H:()=>K,JP:()=>ae,uS:()=>C,m4:()=>Q,N9:()=>waitReady});var n=r(352906),i=r(656592);const s={getRandomValues:r(101262).UY},o={crypto:s};class Wbg{__internal__bridge;constructor(e){this.__internal__bridge=e}abort=()=>{throw new Error("abort")};__wbindgen_is_undefined=e=>void 0===this.__internal__bridge.getObject(e);__wbindgen_throw=(e,t)=>{throw new Error(this.__internal__bridge.getString(e,t))};__wbg_self_1b7a39e3a92c949c=()=>this.__internal__bridge.addObject(o);__wbg_require_604837428532a733=(e,t)=>{throw new Error(`Unable to require ${this.__internal__bridge.getString(e,t)}`)};__wbg_crypto_968f1772287e2df0=e=>this.__internal__bridge.addObject(s);__wbg_getRandomValues_a3d34b4fee3c2869=e=>this.__internal__bridge.addObject(s.getRandomValues);__wbg_getRandomValues_f5e14ab7ac8e995d=(e,t,r)=>{s.getRandomValues(this.__internal__bridge.getU8a(t,r))};__wbg_randomFillSync_d5bd2d655fdf256a=(e,t,r)=>{throw new Error("randomFillsync is not available")};__wbindgen_object_drop_ref=e=>{this.__internal__bridge.takeObject(e)}}function createWasmFn(e,t,r){return async n=>{const i={error:null,type:"none",wasm:null};try{if(!t?.length)throw new Error("No WebAssembly provided for initialization");if("object"!=typeof WebAssembly||"function"!=typeof WebAssembly.instantiate)throw new Error("WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:n});i.wasm=e.instance.exports,i.type="wasm"}catch(t){"function"==typeof r?(i.wasm=r(n),i.type="asm"):(i.error=`FATAL: Unable to initialize @polkadot/wasm-${e}:: ${t.message}`,console.error(i.error))}return i}}const a=Uint8Array,f=Uint16Array,c=Uint32Array,u=new a([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),d=new a([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),p=new a([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),freb=(e,t)=>{const r=new f(31);for(let n=0;n<31;++n)r[n]=t+=1<<e[n-1];const n=new c(r[30]);for(let e=1;e<30;++e)for(let t=r[e];t<r[e+1];++t)n[t]=t-r[e]<<5|e;return[r,n]},[v,b]=freb(d,2);v[28]=258,b[258]=28;const[m]=freb(p,0),P=new f(32768);for(let e=0;e<32768;++e){let t=(43690&e)>>>1|(21845&e)<<1;t=(52428&t)>>>2|(13107&t)<<2,t=(61680&t)>>>4|(3855&t)<<4,P[e]=((65280&t)>>>8|(255&t)<<8)>>>1}const hMap=(e,t,r)=>{const n=e.length;let i=0;const s=new f(t);for(;i<n;++i)e[i]&&++s[e[i]-1];const o=new f(t);for(i=1;i<t;++i)o[i]=o[i-1]+s[i-1]<<1;let a;if(r){a=new f(1<<t);const r=15-t;for(i=0;i<n;++i)if(e[i]){const n=i<<4|e[i],s=t-e[i];let f=o[e[i]-1]++<<s;for(const e=f|(1<<s)-1;f<=e;++f)a[P[f]>>r]=n}}else for(a=new f(n),i=0;i<n;++i)e[i]&&(a[i]=P[o[e[i]-1]++]>>15-e[i]);return a},O=new a(288);for(let e=0;e<144;++e)O[e]=8;for(let e=144;e<256;++e)O[e]=9;for(let e=256;e<280;++e)O[e]=7;for(let e=280;e<288;++e)O[e]=8;const z=new a(32);for(let e=0;e<32;++e)z[e]=5;const x=hMap(O,9,1),j=hMap(z,5,1),bits=(e,t,r)=>{const n=t>>>3;return(e[n]|e[n+1]<<8)>>>(7&t)&r},bits16=(e,t)=>{const r=t>>>3;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>>(7&t)},max=e=>{let t=e[0];for(let r=1,n=e.length;r<n;++r)e[r]>t&&(t=e[r]);return t},inflt=(e,t,r)=>{const n=!r||r.i;r||(r={});const i=e.length,s=!t||!n;t||(t=new a(3*i));const cbuf=e=>{let r=t.length;if(e>r){const n=new a(Math.max(r<<1,e));n.set(t),t=n}};let o=r.f||0,b=r.p||0,P=r.b||0,O=r.l,z=r.d,w=r.m,g=r.n;if(o&&!O)return t;const T=i<<3;do{if(!O){r.f=o=bits(e,b,1);const f=bits(e,b+1,3);if(b+=3,!f){const o=((X=b)>>>3)+(7&X&&1)+4,a=e[o-4]|e[o-3]<<8,f=o+a;if(f>i){if(n)throw"unexpected EOF";break}s&&cbuf(P+a),t.set(e.subarray(o,f),P),r.b=P+=a,r.p=b=f<<3;continue}if(1==f)O=x,z=j,w=9,g=5;else{if(2!=f)throw"invalid block type";{const t=bits(e,b,31)+257,r=bits(e,b+10,15)+4,i=t+bits(e,b+5,31)+1;b+=14;const s=new a(i),o=new a(19);for(let t=0;t<r;++t)o[u[t]]=bits(e,b+3*t,7);b+=3*r;const f=max(o),c=(1<<f)-1;if(!n&&b+i*(f+7)>T)break;const d=hMap(o,f,1);for(let t=0;t<i;){const r=d[bits(e,b,c)];b+=15&r;const n=r>>>4;if(n<16)s[t++]=n;else{let r=0,i=0;for(16==n?(i=3+bits(e,b,3),b+=2,r=s[t-1]):17==n?(i=3+bits(e,b,7),b+=3):18==n&&(i=11+bits(e,b,127),b+=7);i--;)s[t++]=r}}const p=s.subarray(0,t),v=s.subarray(t);w=max(p),g=max(v),O=hMap(p,w,1),z=hMap(v,g,1)}}if(b>T)throw"unexpected EOF"}s&&cbuf(P+131072);const f=(1<<w)-1,c=(1<<g)-1,N=w+g+18;for(;n||b+N<T;){const r=O[bits16(e,b)&f],n=r>>>4;if(b+=15&r,b>T)throw"unexpected EOF";if(!r)throw"invalid length/literal";if(n<256)t[P++]=n;else{if(256==n){O=void 0;break}{let r=n-254;if(n>264){const t=n-257,i=d[t];r=bits(e,b,(1<<i)-1)+v[t],b+=i}const i=z[bits16(e,b)&c],o=i>>>4;if(!i)throw"invalid distance";b+=15&i;let a=m[o];if(o>3){const t=p[o];a+=bits16(e,b)&(1<<t)-1,b+=t}if(b>T)throw"unexpected EOF";s&&cbuf(P+131072);const f=P+r;for(;P<f;P+=4)t[P]=t[P-a],t[P+1]=t[P+1-a],t[P+2]=t[P+2-a],t[P+3]=t[P+3-a];P=f}}}r.l=O,r.p=b,r.b=P,O&&(o=1,r.m=w,r.d=z,r.n=g)}while(!o);var X;return P==t.length?t:((e,t,r)=>{(null==t||t<0)&&(t=0),(null==r||r>e.length)&&(r=e.length);const n=new(e instanceof f?f:e instanceof c?c:a)(r-t);return n.set(e.subarray(t,r)),n})(t,0,P)};function unzlibSync(e,t){return inflt(((e=>{if(8!=(15&e[0])||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(32&e[1])throw"invalid zlib data: preset dictionaries not supported"})(e),e.subarray(2,-4)),t)}const w="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",g=new Array(256);for(let e=0,t=64;e<t;e++)g[w.charCodeAt(e)]=e;var T=r(553161);const X=unzlibSync(function base64Decode(e,t){let r=0,n=0,i=-1;for(let s=0,o=t.length-1;i!==o;s++)r=r<<6|g[e.charCodeAt(s)],(n+=6)>=8&&(t[++i]=r>>>(n-=8)&255);return t}(T.ee,new Uint8Array(T.$o)),new Uint8Array(T.qO)),N=createWasmFn("crypto",X,null),L=new class Bridge{__internal__createWasm;__internal__heap;__internal__wbg;__internal__cachegetInt32;__internal__cachegetUint8;__internal__heapNext;__internal__wasm;__internal__wasmError;__internal__wasmPromise;__internal__type;constructor(e){this.__internal__createWasm=e,this.__internal__cachegetInt32=null,this.__internal__cachegetUint8=null,this.__internal__heap=new Array(32).fill(void 0).concat(void 0,null,!0,!1),this.__internal__heapNext=this.__internal__heap.length,this.__internal__type="none",this.__internal__wasm=null,this.__internal__wasmError=null,this.__internal__wasmPromise=null,this.__internal__wbg={...new Wbg(this)}}get error(){return this.__internal__wasmError}get type(){return this.__internal__type}get wasm(){return this.__internal__wasm}async init(e){this.__internal__wasmPromise&&!e||(this.__internal__wasmPromise=(e||this.__internal__createWasm)(this.__internal__wbg));const{error:t,type:r,wasm:n}=await this.__internal__wasmPromise;return this.__internal__type=r,this.__internal__wasm=n,this.__internal__wasmError=t,this.__internal__wasm}getObject(e){return this.__internal__heap[e]}dropObject(e){e<36||(this.__internal__heap[e]=this.__internal__heapNext,this.__internal__heapNext=e)}takeObject(e){const t=this.getObject(e);return this.dropObject(e),t}addObject(e){this.__internal__heapNext===this.__internal__heap.length&&this.__internal__heap.push(this.__internal__heap.length+1);const t=this.__internal__heapNext;return this.__internal__heapNext=this.__internal__heap[t],this.__internal__heap[t]=e,t}getInt32(){return null!==this.__internal__cachegetInt32&&this.__internal__cachegetInt32.buffer===this.__internal__wasm.memory.buffer||(this.__internal__cachegetInt32=new Int32Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetInt32}getUint8(){return null!==this.__internal__cachegetUint8&&this.__internal__cachegetUint8.buffer===this.__internal__wasm.memory.buffer||(this.__internal__cachegetUint8=new Uint8Array(this.__internal__wasm.memory.buffer)),this.__internal__cachegetUint8}getU8a(e,t){return this.getUint8().subarray(e/1,e/1+t)}getString(e,t){return(0,n.F)(this.getU8a(e,t))}allocU8a(e){const t=this.__internal__wasm.__wbindgen_malloc(1*e.length);return this.getUint8().set(e,t/1),[t,e.length]}allocString(e){return this.allocU8a((0,i.j)(e))}resultU8a(){const e=this.getInt32()[2],t=this.getInt32()[3],r=this.getU8a(e,t).slice();return this.__internal__wasm.__wbindgen_free(e,1*t),r}resultString(){return(0,n.F)(this.resultU8a())}}(N);function withWasm(e){return(...t)=>{if(!L.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return e(L.wasm,...t)}}const Z=withWasm(((e,t)=>(e.ext_bip39_generate(8,t),L.resultString()))),M=withWasm(((e,t)=>(e.ext_bip39_to_entropy(8,...L.allocString(t)),L.resultU8a()))),H=withWasm(((e,t,r)=>(e.ext_bip39_to_mini_secret(8,...L.allocString(t),...L.allocString(r)),L.resultU8a()))),R=withWasm(((e,t,r)=>(e.ext_bip39_to_seed(8,...L.allocString(t),...L.allocString(r)),L.resultU8a()))),F=withWasm(((e,t)=>0!==e.ext_bip39_validate(...L.allocString(t)))),V=withWasm(((e,t)=>(e.ext_ed_from_seed(8,...L.allocU8a(t)),L.resultU8a()))),U=withWasm(((e,t,r,n)=>(e.ext_ed_sign(8,...L.allocU8a(t),...L.allocU8a(r),...L.allocU8a(n)),L.resultU8a()))),k=withWasm(((e,t,r,n)=>0!==e.ext_ed_verify(...L.allocU8a(t),...L.allocU8a(r),...L.allocU8a(n)))),D=withWasm(((e,t)=>(e.ext_secp_from_seed(8,...L.allocU8a(t)),L.resultU8a()))),W=withWasm(((e,t)=>(e.ext_secp_pub_compress(8,...L.allocU8a(t)),L.resultU8a()))),S=withWasm(((e,t)=>(e.ext_secp_pub_expand(8,...L.allocU8a(t)),L.resultU8a()))),B=withWasm(((e,t,r,n)=>(e.ext_secp_recover(8,...L.allocU8a(t),...L.allocU8a(r),n),L.resultU8a()))),Y=withWasm(((e,t,r)=>(e.ext_secp_sign(8,...L.allocU8a(t),...L.allocU8a(r)),L.resultU8a()))),E=withWasm(((e,t,r)=>(e.ext_sr_derive_keypair_hard(8,...L.allocU8a(t),...L.allocU8a(r)),L.resultU8a()))),G=withWasm(((e,t,r)=>(e.ext_sr_derive_keypair_soft(8,...L.allocU8a(t),...L.allocU8a(r)),L.resultU8a()))),q=withWasm(((e,t,r)=>(e.ext_sr_derive_public_soft(8,...L.allocU8a(t),...L.allocU8a(r)),L.resultU8a()))),J=withWasm(((e,t)=>(e.ext_sr_from_seed(8,...L.allocU8a(t)),L.resultU8a()))),I=withWasm(((e,t,r,n)=>(e.ext_sr_sign(8,...L.allocU8a(t),...L.allocU8a(r),...L.allocU8a(n)),L.resultU8a()))),K=withWasm(((e,t,r,n)=>0!==e.ext_sr_verify(...L.allocU8a(t),...L.allocU8a(r),...L.allocU8a(n)))),A=withWasm(((e,t,r)=>(e.ext_sr_agree(8,...L.allocU8a(t),...L.allocU8a(r)),L.resultU8a()))),C=withWasm(((e,t,r,n,i)=>(e.ext_vrf_sign(8,...L.allocU8a(t),...L.allocU8a(r),...L.allocU8a(n),...L.allocU8a(i)),L.resultU8a()))),Q=withWasm(((e,t,r,n,i,s)=>0!==e.ext_vrf_verify(...L.allocU8a(t),...L.allocU8a(r),...L.allocU8a(n),...L.allocU8a(i),...L.allocU8a(s)))),_=withWasm(((e,t,r,n)=>(e.ext_blake2b(8,...L.allocU8a(t),...L.allocU8a(r),n),L.resultU8a()))),$=withWasm(((e,t,r)=>(e.ext_hmac_sha256(8,...L.allocU8a(t),...L.allocU8a(r)),L.resultU8a()))),ee=withWasm(((e,t,r)=>(e.ext_hmac_sha512(8,...L.allocU8a(t),...L.allocU8a(r)),L.resultU8a()))),te=withWasm(((e,t)=>(e.ext_keccak256(8,...L.allocU8a(t)),L.resultU8a()))),re=withWasm(((e,t)=>(e.ext_keccak512(8,...L.allocU8a(t)),L.resultU8a()))),ne=withWasm(((e,t,r,n)=>(e.ext_pbkdf2(8,...L.allocU8a(t),...L.allocU8a(r),n),L.resultU8a()))),ie=withWasm(((e,t,r,n,i,s)=>(e.ext_scrypt(8,...L.allocU8a(t),...L.allocU8a(r),n,i,s),L.resultU8a()))),se=withWasm(((e,t)=>(e.ext_sha256(8,...L.allocU8a(t)),L.resultU8a()))),oe=withWasm(((e,t)=>(e.ext_sha512(8,...L.allocU8a(t)),L.resultU8a()))),ae=withWasm(((e,t,r)=>(e.ext_twox(8,...L.allocU8a(t),r),L.resultU8a())));function isReady(){return!!L.wasm}async function waitReady(){try{const e=await async function initBridge(e){return L.init(e)}();return!!e}catch{return!1}}},578420:(e,t,r)=>{"use strict";function invalidFallback(){return Number.NaN}r.d(t,{Q:()=>n});const n=(0,r(76904).pc)("BigInt",invalidFallback)},76904:(e,t,r)=>{"use strict";r.d(t,{EQ:()=>exposeGlobal,Mn:()=>n,pc:()=>extractGlobal});const n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:function evaluateThis(e){return e("return this")}(Function);function extractGlobal(e,t){return void 0===n[e]?t:n[e]}function exposeGlobal(e,t){void 0===n[e]&&(n[e]=t)}},101262:(e,t,r)=>{"use strict";r.d(t,{UY:()=>getRandomValues});const n=r(76904).Mn.crypto;function getRandomValues(e){return n.getRandomValues(e)}}}]);