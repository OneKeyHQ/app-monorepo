name: Build Native Dev Wrapper CI

on:
  schedule:
    - cron: '30 9 * * 5'
  workflow_dispatch:
    inputs:
      platform:
        description: '编译平台 (android/ios/all)'
        required: false
        default: 'all'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@onekeyhq'

      - name: Setup keys secret
        run: |
          echo ${{ secrets.IOS_KEYS_ENV }} | base64 -d > packages/app/ios/OneKeyWallet/RNBridge/NFCENV.m

      - name: Setup Expo
        uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-token: ${{ secrets.EXPO_TOKEN }}
          expo-cache: true

      - name: Install Dependencies
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: 'yarn'

      - name: Build on EAS workflow
        if: ${{ github.event.inputs.platform }}
        run: |
          cd packages/app
          npx eas-cli build --profile=development --platform ${{ github.event.inputs.platform }} --non-interactive --no-wait > eas-build.log

      - name: Build on EAS schedule
        if: ${{ !github.event.inputs.platform }}
        run: |
          cd packages/app
          npx eas-cli build --profile=development --platform all --non-interactive --no-wait > eas-build.log

      - name: Read EAS build Info
        id: build_info
        run: |
          cd packages/app
          export AND_DOWNLOAD_URL=$(egrep '(Android build details: )\S+' eas-build.log | egrep -o '(https?):\/\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]' | head -n 1)
          export IOS_DOWNLOAD_URL=$(egrep '(iOS build details: )\S+' eas-build.log | egrep -o '(https?):\/\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]' | head -n 1)
          echo "::set-output name=and_url::$(echo $AND_DOWNLOAD_URL)"
          echo "::set-output name=ios_url::$(echo $IOS_DOWNLOAD_URL)"
          export APP_JSON=`cat app.json`
          export APP_VERSION=`echo $(jq -r '.expo.version' <<< "$APP_JSON")`
          echo "::set-output name=version::$(echo $APP_VERSION)"

      - name: Notice Slack Update
        uses: OneKeyHQ/onekey-github-actions/notice-slack-app-update@main
        with:
          web-hook-url: ${{ secrets.SLACK_DEV_WEBHOOK }}
          artifact-type: Native-Wrapper
          artifact-name: Native-Wrapper-Debug
          artifact-download-url: ${{ steps.build_info.outputs.and_url }}
          artifact-bundle-id:  'so.onekey.app.wallet'
          artifact-version-code:  ${{ steps.build_info.outputs.version }}
          artifact-version-name:  ${{ steps.build_info.outputs.version }}
          custom-issue-url: '${{ steps.build_info.outputs.ios_url }}'
