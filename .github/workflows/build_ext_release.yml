name: build-ext

on:
  workflow_run:
    workflows:
      - daily_build_release
    types:
      - completed
  workflow_dispatch:

jobs:
  build-ext:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:

      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Dotenv Action
        id: dotenv
        uses: falti/dotenv-action@v0.2.7
        with:
          path: .env.version

      - name: 'Setup ENV'
        run: |
          echo "ActionTriggerBy = ${{ github.event.action }} / ${{ github.event_name }}"

          # Generate build number ------- start
          DATE=`date "+%Y%m%d"`
          run_number=$(($workflow_run_number % 100))
          run_number=$(printf "%02d" $run_number)
          build_number="${DATE}${run_number}"
          echo '$build_number='$build_number
          echo "BUILD_NUMBER=$build_number" >> $GITHUB_ENV
          # Generate build number ------- end

          github_ref="${github_ref////-}"
          github_ref="${github_ref/refs-heads-/}"
          github_ref="${github_ref/refs-tags-/}"
          echo '$github_ref='$github_ref
          echo "GITHUB_TAG=$github_ref" >> $GITHUB_ENV
          # echo "::set-env name=GITHUB_TAG::$github_ref"

          eval "$(node -e 'const v=require("./packages/ext/package.json").version; console.log("pkg_version="+v)')"
          echo '$pkg_version='$pkg_version
          echo "PKG_VERSION=$pkg_version" >> $GITHUB_ENV

          artifacts_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "ARTIFACTS_URL=$artifacts_url" >> $GITHUB_ENV

        env:
          github_ref: ${{ github.ref }}
          workflow_run_number: ${{ github.event.workflow_run.run_number}}


      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@onekeyhq'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dep
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: 'yarn && yarn global add expo-cli'

      - name: Inject Environment Variables
        env:
          OPENSEA_KEY: ${{ secrets.OPENSEA_KEY }}
          COVALENT_KEY: ${{ secrets.COVALENT_KEY }}
        run: |
          echo "OPENSEA_KEY=${{ env.OPENSEA_KEY }}" >> .env
          echo "COVALENT_KEY=${{ env.COVALENT_KEY }}" >> .env

      - name: Build Ext
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: 'cd packages/ext && yarn build:all'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: onekey-extension-rn
          path: |
            ./packages/ext/build/_dist/*.zip

      - name: 'Notify to Slack'
        uses: onekeyhq/onekey-github-actions/notice-slack-app-update@main
        with:
          web-hook-url: ${{ secrets.SLACK_DEV_WEBHOOK }}
          artifact-type: Extension
          artifact-name: OneKey-Extension-RN
          artifact-bundle-id: 'so.onekey.wallet.extension'
          artifact-version-name: '${{ steps.dotenv.outputs.version }}@${{ env.BUILD_NUMBER }}'
          artifact-version-code: '${{ env.BUILD_NUMBER }}'
          artifact-download-url: '${{ env.ARTIFACTS_URL }}'
          change-log: 'Download [Artifacts] at the bottom of page.'
          custom-issue-url: ''
          custom-message-title: ''
          custom-message-payload: ''
