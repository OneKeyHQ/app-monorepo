name: test-web

on:
  pull_request:
    branches:
      - onekey

# Cancel a currently running workflow from the same PR/branch/tag
# when a new workflow is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test-web:
    runs-on: ubuntu-latest
    env:
      TEST_ENDPOINT: app.onekeytest.com
    steps:
      - uses: actions/checkout@v3
      - name: Setup Environment
        uses: actions/setup-node@v3
        with:
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true
          scope: '@onekeyhq'
          node-version: '16.x'

      - name: Setup keys secret
        run: |
          rm -rf packages/shared/src/analytics/firebase.web.json
          echo ${{ secrets.GOOGLE_SERVICE_WEB }} | base64 -d > packages/shared/src/analytics/firebase.web.json

      - name: Install Dependency
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm i -g expo-cli && yarn

      - name: Inject Environment Variables
        env:
          CLOUNDINARY_NAME: ${{ secrets.CLOUNDINARY_NAME }}
          COVALENT_KEY: ${{ secrets.COVALENT_KEY }}
          MOONPAY_KEY: ${{ secrets.MOONPAY_KEY }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          echo "CLOUNDINARY_NAME=${{ env.CLOUNDINARY_NAME }}" >> .env
          echo "COVALENT_KEY=${{ env.COVALENT_KEY }}" >> .env
          echo "MOONPAY_KEY=${{ env.MOONPAY_KEY }}" >> .env
          echo "GITHUB_SHA=${{ env.GITHUB_SHA }}" >> .env

      - name: Build Target
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
        run: |
          cd packages/web && yarn build && cd ../..
      - name: Deploy Github Pages
        uses: OneKeyHQ/actions/gh-pages@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packages/web/web-build
          cname: ${{ env.TEST_ENDPOINT }}
          force_orphan: true
      - name: Comment on PR
        if: ${{ github.ref != 'refs/heads/onekey' }}
        uses: actions/github-script@v6
        env:
          SHA: ${{ github.sha }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Get the existing comments.
            const {data: comments} = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            })
            // Find any comment already made by the bot.
            const commentPrefix = 'ðŸ‘‹ Successfully deployed the latest commit';
            const timeStamp = new Date().toLocaleString('en-HK', { hour12: false, timeZone: 'Hongkong' });
            const botComment = comments.find(comment => comment.body.startsWith(commentPrefix))
            const commentBody = `${commentPrefix} \`${process.env.SHA}\` to https://${process.env.TEST_ENDPOINT} at ${timeStamp}`

            if (botComment) {
                github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: commentBody
                })
              } else {
                github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.number,
                  body: commentBody
                })
              }
